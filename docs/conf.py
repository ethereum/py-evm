#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# Pull details from version file.  Can probably avoid this, but it keeps
# the CI happy without figuring a satisfactory way to import.
import os

about_fields = [
    'author',
    'description',
    'name',
    'url',
    'version',
]

about = {}

DIR = os.path.dirname('__file__')
with open(os.path.join(DIR, '../setup.py'), 'r') as f:
    for line in f:
        for field in about_fields:
            if ' ' + field + '=' in line:
                about['__%s__' % field] = line.split('\'')[1]


# -- General configuration ------------------------------------------------

#  Defined in requirements-docs.txt, force another check here.
#  Note: Only refuses to build if sphinx too **old**.
needs_sphinx = '1.5'

extensions = [
    'sphinx.ext.todo',
    'sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinxcontrib.asyncio',
]

autodoc_default_options = {
    'undoc-members': None,
}


# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = about['__name__']
copyright = '2017-2018 Ethereum Foundation'
author = about['__author__']

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.

# The short X.Y version.
version = about['__version__']
# The full version, including alpha/beta/rc tags.
release = about['__version__']

# The language for content autogenerated by Sphinx.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = [
    '_build',
    'Thumbs.db',
    '.DS_Store',
    'modules.rst',
]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Using Alabaster by default, reference for options is:
# http://alabaster.readthedocs.io/en/latest/customization.html

# html_theme_options = {
#     'github_user': about['__url__'].split('/')[-2],
#     'github_repo': about['__url__'].split('/')[-1],
# }

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']

# Allows the mod index to function more helpfully (not everything under 'e')
modindex_common_prefix = ['eth.']

##
#  Below be monsters, for now.  You've been warned.
##
# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'py-evmdoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'py-evm.tex', 'py-evm Documentation',
     about['__author__'], 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, about['__name__'], 'py-evm Documentation',
     about['__author__'], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, about['__name__'], 'py-evm Documentation',
     about['__author__'], about['__name__'], about['__description__'],
     'Miscellaneous'),
]

# -- Intersphinx configuration ------------------------------------------------

intersphinx_mapping = {
    'python': ('https://docs.python.org/3.5', None),
    'eth-typing': ('https://eth-typing.readthedocs.io/en/latest', None),
}

# -- Doctest configuration ----------------------------------------

import doctest

doctest_default_flags = (0
    | doctest.DONT_ACCEPT_TRUE_FOR_1
    | doctest.ELLIPSIS
    | doctest.IGNORE_EXCEPTION_DETAIL
    | doctest.NORMALIZE_WHITESPACE
)
