{
    "tests/homestead/coverage/test_coverage.py::test_coverage[fork_Paris-blockchain_test_engine]": {
        "network": "Paris",
        "genesisBlockHeader": {
            "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "uncleHash": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
            "coinbase": "0x0000000000000000000000000000000000000000",
            "stateRoot": "0x5f9cbdd8c771f68c2dc5a070ca9e7e281ed921ca60ed68c3734bbac9767f4af9",
            "transactionsTrie": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "receiptTrie": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "bloom": "0x
            "difficulty": "0x00",
            "number": "0x00",
            "gasLimit": "0x016345785d8a0000",
            "gasUsed": "0x00",
            "timestamp": "0x00",
            "extraData": "0x00",
            "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "nonce": "0x0000000000000000",
            "baseFeePerGas": "0x07",
            "hash": "0x750fd4b58ac3079e75f4d899657a6a41d76471ab5b13a5d55af6a38557e7a700"
        },
        "pre": {
            "0x0000000000000000000000000000000000001000": {
                "nonce": "0x01",
                "balance": "0x00",
                "code": "0x600060011b600060011c600a600b600c600d600e9080815f61010262010203630102030460015060046010600039",
                "storage": {}
            },
            "0x0000000000000000000000000000000000001100": {
                "nonce": "0x01",
                "balance": "0x0de0b6b3a7640000",
                "code": "0x600060006000600060006110005af160005260206000f3",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "postState": {
            "0x0000000000000000000000000000000000001000": {
                "nonce": "0x01",
                "balance": "0x00",
                "code": "0x600060011b600060011c600a600b600c600d600e9080815f61010262010203630102030460015060046010600039",
                "storage": {}
            },
            "0x0000000000000000000000000000000000001100": {
                "nonce": "0x01",
                "balance": "0x0de0b6b3a7640000",
                "code": "0x600060006000600060006110005af160005260206000f3",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x01",
                "balance": "0x6124fee993acebc4",
                "code": "0x",
                "storage": {}
            },
            "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba": {
                "nonce": "0x00",
                "balance": "0x048612",
                "code": "0x",
                "storage": {}
            }
        },
        "lastblockhash": "0x5dd862f15ebc8c79cf57b39e634fe0a7f714ca8c385ea93495f9b4372a4a7ca1",
        "engineNewPayloads": [
            {
                "params": [
                    {
                        "parentHash": "0x750fd4b58ac3079e75f4d899657a6a41d76471ab5b13a5d55af6a38557e7a700",
                        "feeRecipient": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
                        "stateRoot": "0x8071c8868cfd69b471abe18ef635ae1b5394127f5645d1b12c6e8b0de59b9705",
                        "receiptsRoot": "0xbf36bd3a0ede6c8e88f8881defe72ef6599753116311edbe7e0c819eedd04440",
                        "logsBloom": "0x
                        "blockNumber": "0x1",
                        "gasLimit": "0x16345785d8a0000",
                        "gasUsed": "0x18206",
                        "timestamp": "0x3e8",
                        "extraData": "0x00",
                        "prevRandao": "0x0000000000000000000000000000000000000000000000000000000000000000",
                        "baseFeePerGas": "0x7",
                        "blockHash": "0x5dd862f15ebc8c79cf57b39e634fe0a7f714ca8c385ea93495f9b4372a4a7ca1",
                        "transactions": [
                            "0xf860800a830186a094000000000000000000000000000000000000110080801ca00671a3e9dab47d17669ebe31855e9d6481d6c945fa946dd61fc374eb5420a220a03d6c864c60d6f9c901dcb2ec86286cbaeaa1e86c82c6fa7147cd4417db86bf9f"
                        ]
                    }
                ],
                "newPayloadVersion": "1",
                "forkchoiceUpdatedVersion": "1"
            }
        ],
        "_info": {
            "hash": "0x04e15c42c360f3fc4089fd9f89ad14ed6ee9cb0b4ece184bad300b2510e3d18b",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "ethereum-spec-evm-resolver 0.0.1",
            "description": "Test function documentation:\n\n    Cover gaps that result from transforming Yul code into\n    `ethereum_test_tools.vm.opcode.Opcodes` bytecode.\n\n    E.g. Yul tends to optimize stack items by using `SWAP1` and `DUP1` opcodes, which are not\n    regularly used in python code.\n\n    Modify this test to cover more Yul code if required in the future.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/8fbca341fb0f3eb3a08a296e8f8fa84f233f4faa/tests/homestead/coverage/test_coverage.py#L13",
            "fixture_format": "blockchain_test_engine"
        }
    },
    "tests/homestead/coverage/test_coverage.py::test_coverage[fork_Shanghai-blockchain_test_engine]": {
        "network": "Shanghai",
        "genesisBlockHeader": {
            "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "uncleHash": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
            "coinbase": "0x0000000000000000000000000000000000000000",
            "stateRoot": "0x5f9cbdd8c771f68c2dc5a070ca9e7e281ed921ca60ed68c3734bbac9767f4af9",
            "transactionsTrie": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "receiptTrie": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "bloom": "0x
            "difficulty": "0x00",
            "number": "0x00",
            "gasLimit": "0x016345785d8a0000",
            "gasUsed": "0x00",
            "timestamp": "0x00",
            "extraData": "0x00",
            "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "nonce": "0x0000000000000000",
            "baseFeePerGas": "0x07",
            "withdrawalsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "hash": "0xe3ed01c36b0828ee9a6ed69095e8bbb53e9f303bde33821fc41579a7b88f8d28"
        },
        "pre": {
            "0x0000000000000000000000000000000000001000": {
                "nonce": "0x01",
                "balance": "0x00",
                "code": "0x600060011b600060011c600a600b600c600d600e9080815f61010262010203630102030460015060046010600039",
                "storage": {}
            },
            "0x0000000000000000000000000000000000001100": {
                "nonce": "0x01",
                "balance": "0x0de0b6b3a7640000",
                "code": "0x600060006000600060006110005af160005260206000f3",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "postState": {
            "0x0000000000000000000000000000000000001000": {
                "nonce": "0x01",
                "balance": "0x00",
                "code": "0x600060011b600060011c600a600b600c600d600e9080815f61010262010203630102030460015060046010600039",
                "storage": {}
            },
            "0x0000000000000000000000000000000000001100": {
                "nonce": "0x01",
                "balance": "0x0de0b6b3a7640000",
                "code": "0x600060006000600060006110005af160005260206000f3",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x01",
                "balance": "0x6124fee993b861ca",
                "code": "0x",
                "storage": {}
            },
            "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba": {
                "nonce": "0x00",
                "balance": "0x0115dd",
                "code": "0x",
                "storage": {}
            }
        },
        "lastblockhash": "0x1de382c0d0ce6ade59e3966d4c60243af393d6a07c385d6731d458d6a577bb95",
        "engineNewPayloads": [
            {
                "params": [
                    {
                        "parentHash": "0xe3ed01c36b0828ee9a6ed69095e8bbb53e9f303bde33821fc41579a7b88f8d28",
                        "feeRecipient": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
                        "stateRoot": "0x8e183b0fe366af1c21333f7be7a1cb5a40e5ddd02780fb388793bcef40f1dac9",
                        "receiptsRoot": "0x886bf6493a3991dec787f399aa32847d319327640d3a17061900d54a56d7dc1a",
                        "logsBloom": "0x
                        "blockNumber": "0x1",
                        "gasLimit": "0x16345785d8a0000",
                        "gasUsed": "0x5c9f",
                        "timestamp": "0x3e8",
                        "extraData": "0x00",
                        "prevRandao": "0x0000000000000000000000000000000000000000000000000000000000000000",
                        "baseFeePerGas": "0x7",
                        "blockHash": "0x1de382c0d0ce6ade59e3966d4c60243af393d6a07c385d6731d458d6a577bb95",
                        "transactions": [
                            "0xf860800a830186a094000000000000000000000000000000000000110080801ca00671a3e9dab47d17669ebe31855e9d6481d6c945fa946dd61fc374eb5420a220a03d6c864c60d6f9c901dcb2ec86286cbaeaa1e86c82c6fa7147cd4417db86bf9f"
                        ],
                        "withdrawals": []
                    }
                ],
                "newPayloadVersion": "2",
                "forkchoiceUpdatedVersion": "2"
            }
        ],
        "_info": {
            "hash": "0xd207b0e6bedc5703ed64ffaff5cd887b343d8753610c127d43eb77b9801e2227",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "ethereum-spec-evm-resolver 0.0.1",
            "description": "Test function documentation:\n\n    Cover gaps that result from transforming Yul code into\n    `ethereum_test_tools.vm.opcode.Opcodes` bytecode.\n\n    E.g. Yul tends to optimize stack items by using `SWAP1` and `DUP1` opcodes, which are not\n    regularly used in python code.\n\n    Modify this test to cover more Yul code if required in the future.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/8fbca341fb0f3eb3a08a296e8f8fa84f233f4faa/tests/homestead/coverage/test_coverage.py#L13",
            "fixture_format": "blockchain_test_engine"
        }
    },
    "tests/homestead/coverage/test_coverage.py::test_coverage[fork_Cancun-blockchain_test_engine]": {
        "network": "Cancun",
        "genesisBlockHeader": {
            "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "uncleHash": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
            "coinbase": "0x0000000000000000000000000000000000000000",
            "stateRoot": "0x1ae244d05a4b100a97826cbaea2c52c53159d0be2af33a8621f4a5e8aa56fb06",
            "transactionsTrie": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "receiptTrie": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "bloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "difficulty": "0x00",
            "number": "0x00",
            "gasLimit": "0x016345785d8a0000",
            "gasUsed": "0x00",
            "timestamp": "0x00",
            "extraData": "0x00",
            "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "nonce": "0x0000000000000000",
            "baseFeePerGas": "0x07",
            "withdrawalsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
            "blobGasUsed": "0x00",
            "excessBlobGas": "0x00",
            "parentBeaconBlockRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "hash": "0x37ef172a35ea5b09654444225c5b5b6f22bcdc85e59d5b0df72ae0fe48553f87"
        },
        "pre": {
            "0x000f3df6d732807ef1319fb7b8bb8522d0beac02": {
                "nonce": "0x01",
                "balance": "0x00",
                "code": "0x3373fffffffffffffffffffffffffffffffffffffffe14604d57602036146024575f5ffd5b5f35801560495762001fff810690815414603c575f5ffd5b62001fff01545f5260205ff35b5f5ffd5b62001fff42064281555f359062001fff015500",
                "storage": {}
            },
            "0x0000000000000000000000000000000000001000": {
                "nonce": "0x01",
                "balance": "0x00",
                "code": "0x600060011b600060011c600a600b600c600d600e9080815f61010262010203630102030460015060046010600039",
                "storage": {}
            },
            "0x0000000000000000000000000000000000001100": {
                "nonce": "0x01",
                "balance": "0x0de0b6b3a7640000",
                "code": "0x600060006000600060006110005af160005260206000f3",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x00",
                "balance": "0x6124fee993bc0000",
                "code": "0x",
                "storage": {}
            }
        },
        "postState": {
            "0x000f3df6d732807ef1319fb7b8bb8522d0beac02": {
                "nonce": "0x01",
                "balance": "0x00",
                "code": "0x3373fffffffffffffffffffffffffffffffffffffffe14604d57602036146024575f5ffd5b5f35801560495762001fff810690815414603c575f5ffd5b62001fff01545f5260205ff35b5f5ffd5b62001fff42064281555f359062001fff015500",
                "storage": {
                    "0x03e8": "0x03e8"
                }
            },
            "0x0000000000000000000000000000000000001000": {
                "nonce": "0x01",
                "balance": "0x00",
                "code": "0x600060011b600060011c600a600b600c600d600e9080815f61010262010203630102030460015060046010600039",
                "storage": {}
            },
            "0x0000000000000000000000000000000000001100": {
                "nonce": "0x01",
                "balance": "0x0de0b6b3a7640000",
                "code": "0x600060006000600060006110005af160005260206000f3",
                "storage": {}
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b": {
                "nonce": "0x01",
                "balance": "0x6124fee993b861ca",
                "code": "0x",
                "storage": {}
            },
            "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba": {
                "nonce": "0x00",
                "balance": "0x0115dd",
                "code": "0x",
                "storage": {}
            }
        },
        "lastblockhash": "0x7b087d4b37812d8f9acc73e11eff0c3b673119259b4c8b7e17223b47cd0a9b5a",
        "engineNewPayloads": [
            {
                "params": [
                    {
                        "parentHash": "0x37ef172a35ea5b09654444225c5b5b6f22bcdc85e59d5b0df72ae0fe48553f87",
                        "feeRecipient": "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
                        "stateRoot": "0x0162c5edf9cf4b41decff1045356b5bc6c7e3f6ea25b2b4e0403eab5ad977342",
                        "receiptsRoot": "0x0cdb99437ac1a719206424bdfd3d20341fac657c26d50a0c1569ca70df8987a6",
                        "logsBloom": "0x
                        "blockNumber": "0x1",
                        "gasLimit": "0x16345785d8a0000",
                        "gasUsed": "0x5c9f",
                        "timestamp": "0x3e8",
                        "extraData": "0x00",
                        "prevRandao": "0x0000000000000000000000000000000000000000000000000000000000000000",
                        "baseFeePerGas": "0x7",
                        "blobGasUsed": "0x0",
                        "excessBlobGas": "0x0",
                        "blockHash": "0x7b087d4b37812d8f9acc73e11eff0c3b673119259b4c8b7e17223b47cd0a9b5a",
                        "transactions": [
                            "0x02f8630180050a830186a09400000000000000000000000000000000000011008080c080a08f7a97fc84c20df70553febefc9f95ca6e508163e7a2896b7c08f62bd5343cc2a05879b2fb80033d28fa5e112066bacc62d200a299a21e1b93ea1abc759f307b53"
                        ],
                        "withdrawals": []
                    },
                    [],
                    "0x0000000000000000000000000000000000000000000000000000000000000000"
                ],
                "newPayloadVersion": "3",
                "forkchoiceUpdatedVersion": "3"
            }
        ],
        "_info": {
            "hash": "0x8cf2a3a2d089c26a1adfc5e12ae98bea368d9027652b82da1b460d3c52f46a2c",
            "comment": "`execution-spec-tests` generated test",
            "filling-transition-tool": "ethereum-spec-evm-resolver 0.0.1",
            "description": "Test function documentation:\n\n    Cover gaps that result from transforming Yul code into\n    `ethereum_test_tools.vm.opcode.Opcodes` bytecode.\n\n    E.g. Yul tends to optimize stack items by using `SWAP1` and `DUP1` opcodes, which are not\n    regularly used in python code.\n\n    Modify this test to cover more Yul code if required in the future.",
            "url": "https://github.com/ethereum/execution-spec-tests/blob/8fbca341fb0f3eb3a08a296e8f8fa84f233f4faa/tests/homestead/coverage/test_coverage.py#L13",
            "fixture_format": "blockchain_test_engine"
        }
    }
}
