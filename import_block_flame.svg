<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="886" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="869.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="869.00"> </text><g id="frames"><g><title>process_blocks (gethimport.py:466) (19 samples, 0.20%)</title><rect x="10" y="68" width="2" height="15" fill="rgb(237,118,28)"/><text x="13.00" y="78.50"></text></g><g><title>block_body (gethimport.py:235) (17 samples, 0.18%)</title><rect x="10" y="84" width="2" height="15" fill="rgb(239,70,44)"/><text x="13.00" y="94.50"></text></g><g><title>decode (rlp/codec.py:237) (10 samples, 0.10%)</title><rect x="11" y="100" width="1" height="15" fill="rgb(232,205,54)"/><text x="14.00" y="110.50"></text></g><g><title>deserialize (rlp/sedes/serializable.py:266) (10 samples, 0.10%)</title><rect x="11" y="116" width="1" height="15" fill="rgb(221,13,47)"/><text x="14.00" y="126.50"></text></g><g><title>inner (eth_utils/functional.py:45) (10 samples, 0.10%)</title><rect x="11" y="132" width="1" height="15" fill="rgb(232,67,27)"/><text x="14.00" y="142.50"></text></g><g><title>deserialize (rlp/sedes/lists.py:93) (10 samples, 0.10%)</title><rect x="11" y="148" width="1" height="15" fill="rgb(240,190,40)"/><text x="14.00" y="158.50"></text></g><g><title>inner (eth_utils/functional.py:45) (10 samples, 0.10%)</title><rect x="11" y="164" width="1" height="15" fill="rgb(210,129,22)"/><text x="14.00" y="174.50"></text></g><g><title>deserialize (rlp/sedes/lists.py:143) (10 samples, 0.10%)</title><rect x="11" y="180" width="1" height="15" fill="rgb(247,204,28)"/><text x="14.00" y="190.50"></text></g><g><title>decode (rlp/codec.py:237) (11 samples, 0.11%)</title><rect x="12" y="116" width="2" height="15" fill="rgb(212,100,1)"/><text x="15.00" y="126.50"></text></g><g><title>process_blocks (gethimport.py:468) (20 samples, 0.21%)</title><rect x="12" y="68" width="2" height="15" fill="rgb(247,25,38)"/><text x="15.00" y="78.50"></text></g><g><title>&lt;listcomp&gt; (gethimport.py:468) (20 samples, 0.21%)</title><rect x="12" y="84" width="2" height="15" fill="rgb(230,160,8)"/><text x="15.00" y="94.50"></text></g><g><title>from_base_transaction (eth/rlp/transactions.py:69) (20 samples, 0.21%)</title><rect x="12" y="100" width="2" height="15" fill="rgb(230,77,45)"/><text x="15.00" y="110.50"></text></g><g><title>record (eth/db/account.py:357) (23 samples, 0.24%)</title><rect x="15" y="148" width="3" height="15" fill="rgb(213,101,53)"/><text x="18.00" y="158.50"></text></g><g><title>record (eth/db/storage.py:220) (17 samples, 0.18%)</title><rect x="16" y="164" width="2" height="15" fill="rgb(244,39,21)"/><text x="19.00" y="174.50"></text></g><g><title>record_checkpoint (eth/db/journal.py:136) (14 samples, 0.14%)</title><rect x="16" y="180" width="2" height="15" fill="rgb(244,34,30)"/><text x="19.00" y="190.50"></text></g><g><title>snapshot (eth/vm/state.py:164) (27 samples, 0.28%)</title><rect x="15" y="132" width="3" height="15" fill="rgb(221,126,40)"/><text x="18.00" y="142.50"></text></g><g><title>apply_all_transactions (eth/vm/base.py:227) (28 samples, 0.29%)</title><rect x="15" y="116" width="3" height="15" fill="rgb(224,199,33)"/><text x="18.00" y="126.50"></text></g><g><title>validate_transaction_signature (eth/_utils/transactions.py:90) (12 samples, 0.12%)</title><rect x="21" y="260" width="1" height="15" fill="rgb(238,90,21)"/><text x="24.00" y="270.50"></text></g><g><title>decode (rlp/codec.py:230) (9 samples, 0.09%)</title><rect x="22" y="292" width="1" height="15" fill="rgb(247,95,24)"/><text x="25.00" y="302.50"></text></g><g><title>consume_item (rlp/codec.py:206) (9 samples, 0.09%)</title><rect x="22" y="308" width="1" height="15" fill="rgb(230,141,12)"/><text x="25.00" y="318.50"></text></g><g><title>get_message_for_signing (eth/vm/forks/spurious_dragon/transactions.py:30) (10 samples, 0.10%)</title><rect x="22" y="276" width="2" height="15" fill="rgb(225,192,37)"/><text x="25.00" y="286.50"></text></g><g><title>encode (rlp/codec.py:63) (12 samples, 0.12%)</title><rect x="24" y="292" width="1" height="15" fill="rgb(231,47,26)"/><text x="27.00" y="302.50"></text></g><g><title>get_message_for_signing (eth/vm/forks/spurious_dragon/transactions.py:32) (18 samples, 0.19%)</title><rect x="24" y="276" width="2" height="15" fill="rgb(250,72,31)"/><text x="27.00" y="286.50"></text></g><g><title>validate_transaction_signature (eth/_utils/transactions.py:91) (34 samples, 0.35%)</title><rect x="22" y="260" width="4" height="15" fill="rgb(227,45,14)"/><text x="25.00" y="270.50"></text></g><g><title>recover_public_key_from_msg (eth_keys/datatypes.py:418) (9 samples, 0.09%)</title><rect x="26" y="276" width="2" height="15" fill="rgb(235,136,46)"/><text x="29.00" y="286.50"></text></g><g><title>keccak (eth_utils/crypto.py:11) (9 samples, 0.09%)</title><rect x="26" y="292" width="2" height="15" fill="rgb(248,229,8)"/><text x="29.00" y="302.50"></text></g><g><title>import_string (eth_keys/utils/module_loading.py:18) (9 samples, 0.09%)</title><rect x="28" y="372" width="1" height="15" fill="rgb(227,9,22)"/><text x="31.00" y="382.50"></text></g><g><title>import_module (importlib/__init__.py:127) (9 samples, 0.09%)</title><rect x="28" y="388" width="1" height="15" fill="rgb(241,22,51)"/><text x="31.00" y="398.50"></text></g><g><title>backend (eth_keys/datatypes.py:101) (14 samples, 0.14%)</title><rect x="28" y="308" width="1" height="15" fill="rgb(243,178,19)"/><text x="31.00" y="318.50"></text></g><g><title>get_backend (eth_keys/datatypes.py:112) (13 samples, 0.13%)</title><rect x="28" y="324" width="1" height="15" fill="rgb(218,85,39)"/><text x="31.00" y="334.50"></text></g><g><title>get_backend (eth_keys/backends/__init__.py:35) (13 samples, 0.13%)</title><rect x="28" y="340" width="1" height="15" fill="rgb(238,47,13)"/><text x="31.00" y="350.50"></text></g><g><title>get_backend_class (eth_keys/backends/__init__.py:31) (10 samples, 0.10%)</title><rect x="28" y="356" width="1" height="15" fill="rgb(249,163,54)"/><text x="31.00" y="366.50"></text></g><g><title>validate_transaction_signature (eth/_utils/transactions.py:93) (88 samples, 0.91%)</title><rect x="26" y="260" width="11" height="15" fill="rgb(207,224,8)"/><text x="29.00" y="270.50"></text></g><g><title>recover_public_key_from_msg (eth_keys/datatypes.py:419) (79 samples, 0.82%)</title><rect x="28" y="276" width="9" height="15" fill="rgb(250,53,43)"/><text x="31.00" y="286.50"></text></g><g><title>recover_public_key_from_msg_hash (eth_keys/datatypes.py:422) (79 samples, 0.82%)</title><rect x="28" y="292" width="9" height="15" fill="rgb(211,114,54)"/><text x="31.00" y="302.50"></text></g><g><title>ecdsa_recover (eth_keys/backends/coincurve.py:99) (56 samples, 0.58%)</title><rect x="30" y="308" width="7" height="15" fill="rgb(213,139,38)"/><text x="33.00" y="318.50"></text></g><g><title>from_signature_and_message (coincurve/keys.py:246) (55 samples, 0.57%)</title><rect x="31" y="324" width="6" height="15" fill="rgb(226,115,49)"/><text x="34.00" y="334.50"></text></g><g><title>recover (coincurve/ecdsa.py:39) (52 samples, 0.54%)</title><rect x="31" y="340" width="6" height="15" fill="rgb(243,57,30)"/><text x="34.00" y="350.50"></text></g><g><title>verify_msg (eth_keys/datatypes.py:350) (9 samples, 0.09%)</title><rect x="37" y="276" width="1" height="15" fill="rgb(225,214,26)"/><text x="40.00" y="286.50"></text></g><g><title>keccak (eth_utils/crypto.py:11) (9 samples, 0.09%)</title><rect x="37" y="292" width="1" height="15" fill="rgb(210,150,17)"/><text x="40.00" y="302.50"></text></g><g><title>validate_transaction (eth/vm/forks/frontier/state.py:49) (199 samples, 2.06%)</title><rect x="19" y="180" width="24" height="15" fill="rgb(217,136,21)"/><text x="22.00" y="190.50">v..</text></g><g><title>validate (eth/vm/forks/homestead/transactions.py:36) (199 samples, 2.06%)</title><rect x="19" y="196" width="24" height="15" fill="rgb(254,118,10)"/><text x="22.00" y="206.50">v..</text></g><g><title>validate (eth/vm/forks/frontier/transactions.py:83) (186 samples, 1.93%)</title><rect x="20" y="212" width="23" height="15" fill="rgb(250,199,22)"/><text x="23.00" y="222.50">v..</text></g><g><title>validate (eth/rlp/transactions.py:85) (181 samples, 1.87%)</title><rect x="21" y="228" width="22" height="15" fill="rgb(249,195,42)"/><text x="24.00" y="238.50">v..</text></g><g><title>check_signature_validity (eth/vm/forks/frontier/transactions.py:86) (181 samples, 1.87%)</title><rect x="21" y="244" width="22" height="15" fill="rgb(227,115,18)"/><text x="24.00" y="254.50">c..</text></g><g><title>validate_transaction_signature (eth/_utils/transactions.py:97) (47 samples, 0.49%)</title><rect x="37" y="260" width="6" height="15" fill="rgb(234,188,2)"/><text x="40.00" y="270.50"></text></g><g><title>verify_msg (eth_keys/datatypes.py:351) (38 samples, 0.39%)</title><rect x="38" y="276" width="5" height="15" fill="rgb(229,92,10)"/><text x="41.00" y="286.50"></text></g><g><title>verify_msg_hash (eth_keys/datatypes.py:356) (38 samples, 0.39%)</title><rect x="38" y="292" width="5" height="15" fill="rgb(231,64,48)"/><text x="41.00" y="302.50"></text></g><g><title>ecdsa_verify (eth_keys/backends/coincurve.py:88) (22 samples, 0.23%)</title><rect x="40" y="308" width="3" height="15" fill="rgb(251,9,21)"/><text x="43.00" y="318.50"></text></g><g><title>verify (coincurve/keys.py:285) (22 samples, 0.23%)</title><rect x="40" y="324" width="3" height="15" fill="rgb(217,190,10)"/><text x="43.00" y="334.50"></text></g><g><title>infer_sedes (rlp/codec.py:278) (9 samples, 0.09%)</title><rect x="45" y="340" width="1" height="15" fill="rgb(222,128,7)"/><text x="48.00" y="350.50"></text></g><g><title>encode (rlp/codec.py:63) (18 samples, 0.19%)</title><rect x="45" y="324" width="2" height="15" fill="rgb(250,228,8)"/><text x="48.00" y="334.50"></text></g><g><title>inner (eth_utils/functional.py:45) (9 samples, 0.09%)</title><rect x="46" y="340" width="1" height="15" fill="rgb(216,36,46)"/><text x="49.00" y="350.50"></text></g><g><title>get_message_for_signing (eth/vm/forks/spurious_dragon/transactions.py:32) (27 samples, 0.28%)</title><rect x="45" y="308" width="3" height="15" fill="rgb(244,187,38)"/><text x="48.00" y="318.50"></text></g><g><title>extract_transaction_sender (eth/_utils/transactions.py:115) (44 samples, 0.46%)</title><rect x="44" y="292" width="5" height="15" fill="rgb(214,217,17)"/><text x="47.00" y="302.50"></text></g><g><title>get_message_for_signing (eth/vm/forks/spurious_dragon/transactions.py:40) (11 samples, 0.11%)</title><rect x="48" y="308" width="1" height="15" fill="rgb(248,139,44)"/><text x="51.00" y="318.50"></text></g><g><title>backend (eth_keys/datatypes.py:101) (10 samples, 0.10%)</title><rect x="50" y="340" width="1" height="15" fill="rgb(250,95,5)"/><text x="53.00" y="350.50"></text></g><g><title>get_backend (eth_keys/datatypes.py:112) (10 samples, 0.10%)</title><rect x="50" y="356" width="1" height="15" fill="rgb(248,100,31)"/><text x="53.00" y="366.50"></text></g><g><title>get_backend (eth_keys/backends/__init__.py:35) (10 samples, 0.10%)</title><rect x="50" y="372" width="1" height="15" fill="rgb(254,65,54)"/><text x="53.00" y="382.50"></text></g><g><title>get_backend_class (eth_keys/backends/__init__.py:31) (9 samples, 0.09%)</title><rect x="50" y="388" width="1" height="15" fill="rgb(243,178,34)"/><text x="53.00" y="398.50"></text></g><g><title>extract_transaction_sender (eth/_utils/transactions.py:116) (62 samples, 0.64%)</title><rect x="49" y="292" width="8" height="15" fill="rgb(205,4,4)"/><text x="52.00" y="302.50"></text></g><g><title>recover_public_key_from_msg (eth_keys/datatypes.py:419) (58 samples, 0.60%)</title><rect x="50" y="308" width="7" height="15" fill="rgb(234,208,12)"/><text x="53.00" y="318.50"></text></g><g><title>recover_public_key_from_msg_hash (eth_keys/datatypes.py:422) (58 samples, 0.60%)</title><rect x="50" y="324" width="7" height="15" fill="rgb(254,93,51)"/><text x="53.00" y="334.50"></text></g><g><title>ecdsa_recover (eth_keys/backends/coincurve.py:99) (39 samples, 0.40%)</title><rect x="52" y="340" width="5" height="15" fill="rgb(226,46,51)"/><text x="55.00" y="350.50"></text></g><g><title>from_signature_and_message (coincurve/keys.py:246) (38 samples, 0.39%)</title><rect x="52" y="356" width="5" height="15" fill="rgb(228,31,29)"/><text x="55.00" y="366.50"></text></g><g><title>recover (coincurve/ecdsa.py:39) (32 samples, 0.33%)</title><rect x="53" y="372" width="4" height="15" fill="rgb(248,206,2)"/><text x="56.00" y="382.50"></text></g><g><title>__get__ (cached_property.py:35) (116 samples, 1.20%)</title><rect x="43" y="244" width="14" height="15" fill="rgb(217,8,12)"/><text x="46.00" y="254.50"></text></g><g><title>sender (eth/rlp/transactions.py:73) (116 samples, 1.20%)</title><rect x="43" y="260" width="14" height="15" fill="rgb(252,213,51)"/><text x="46.00" y="270.50"></text></g><g><title>get_sender (eth/vm/forks/frontier/transactions.py:89) (116 samples, 1.20%)</title><rect x="43" y="276" width="14" height="15" fill="rgb(219,45,35)"/><text x="46.00" y="286.50"></text></g><g><title>decode (rlp/codec.py:230) (9 samples, 0.09%)</title><rect x="59" y="420" width="1" height="15" fill="rgb(215,19,31)"/><text x="62.00" y="430.50"></text></g><g><title>get (trie/hexary.py:73) (15 samples, 0.16%)</title><rect x="58" y="372" width="2" height="15" fill="rgb(211,71,6)"/><text x="61.00" y="382.50"></text></g><g><title>get_node (trie/hexary.py:285) (12 samples, 0.12%)</title><rect x="59" y="388" width="1" height="15" fill="rgb(216,201,37)"/><text x="62.00" y="398.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (11 samples, 0.11%)</title><rect x="59" y="404" width="1" height="15" fill="rgb(244,22,52)"/><text x="62.00" y="414.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (11 samples, 0.11%)</title><rect x="60" y="404" width="1" height="15" fill="rgb(223,224,28)"/><text x="63.00" y="414.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (12 samples, 0.12%)</title><rect x="62" y="436" width="1" height="15" fill="rgb(250,45,0)"/><text x="65.00" y="446.50"></text></g><g><title>get_node (trie/hexary.py:285) (10 samples, 0.10%)</title><rect x="62" y="452" width="1" height="15" fill="rgb(240,93,50)"/><text x="65.00" y="462.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (10 samples, 0.10%)</title><rect x="62" y="468" width="1" height="15" fill="rgb(208,79,53)"/><text x="65.00" y="478.50"></text></g><g><title>decode (rlp/codec.py:230) (9 samples, 0.09%)</title><rect x="62" y="484" width="1" height="15" fill="rgb(210,182,35)"/><text x="65.00" y="494.50"></text></g><g><title>get_node (trie/hexary.py:284) (11 samples, 0.11%)</title><rect x="63" y="484" width="2" height="15" fill="rgb(240,215,35)"/><text x="66.00" y="494.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (9 samples, 0.09%)</title><rect x="64" y="500" width="1" height="15" fill="rgb(230,10,15)"/><text x="67.00" y="510.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (9 samples, 0.09%)</title><rect x="64" y="516" width="1" height="15" fill="rgb(231,63,23)"/><text x="67.00" y="526.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (23 samples, 0.24%)</title><rect x="63" y="468" width="3" height="15" fill="rgb(253,106,23)"/><text x="66.00" y="478.50"></text></g><g><title>get_node (trie/hexary.py:285) (11 samples, 0.11%)</title><rect x="65" y="484" width="1" height="15" fill="rgb(224,221,10)"/><text x="68.00" y="494.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (11 samples, 0.11%)</title><rect x="65" y="500" width="1" height="15" fill="rgb(246,219,49)"/><text x="68.00" y="510.50"></text></g><g><title>decode (rlp/codec.py:230) (9 samples, 0.09%)</title><rect x="65" y="516" width="1" height="15" fill="rgb(216,211,49)"/><text x="68.00" y="526.50"></text></g><g><title>consume_item (rlp/codec.py:206) (9 samples, 0.09%)</title><rect x="65" y="532" width="1" height="15" fill="rgb(228,87,51)"/><text x="68.00" y="542.50"></text></g><g><title>get_node (trie/hexary.py:284) (23 samples, 0.24%)</title><rect x="66" y="516" width="3" height="15" fill="rgb(209,96,12)"/><text x="69.00" y="526.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (22 samples, 0.23%)</title><rect x="66" y="532" width="3" height="15" fill="rgb(240,205,38)"/><text x="69.00" y="542.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (21 samples, 0.22%)</title><rect x="67" y="548" width="2" height="15" fill="rgb(251,55,40)"/><text x="70.00" y="558.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (36 samples, 0.37%)</title><rect x="66" y="500" width="5" height="15" fill="rgb(233,168,27)"/><text x="69.00" y="510.50"></text></g><g><title>get_node (trie/hexary.py:285) (13 samples, 0.13%)</title><rect x="69" y="516" width="2" height="15" fill="rgb(239,196,9)"/><text x="72.00" y="526.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (12 samples, 0.12%)</title><rect x="69" y="532" width="2" height="15" fill="rgb(233,165,1)"/><text x="72.00" y="542.50"></text></g><g><title>get_node (trie/hexary.py:284) (44 samples, 0.46%)</title><rect x="71" y="548" width="5" height="15" fill="rgb(242,38,49)"/><text x="74.00" y="558.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (43 samples, 0.45%)</title><rect x="71" y="564" width="5" height="15" fill="rgb(213,156,24)"/><text x="74.00" y="574.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (38 samples, 0.39%)</title><rect x="71" y="580" width="5" height="15" fill="rgb(212,39,16)"/><text x="74.00" y="590.50"></text></g><g><title>consume_payload (rlp/codec.py:178) (9 samples, 0.09%)</title><rect x="78" y="612" width="1" height="15" fill="rgb(223,51,54)"/><text x="81.00" y="622.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (79 samples, 0.82%)</title><rect x="71" y="532" width="9" height="15" fill="rgb(242,192,8)"/><text x="74.00" y="542.50"></text></g><g><title>get_node (trie/hexary.py:285) (35 samples, 0.36%)</title><rect x="76" y="548" width="4" height="15" fill="rgb(214,35,37)"/><text x="79.00" y="558.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (31 samples, 0.32%)</title><rect x="77" y="564" width="3" height="15" fill="rgb(237,145,44)"/><text x="80.00" y="574.50"></text></g><g><title>decode (rlp/codec.py:230) (28 samples, 0.29%)</title><rect x="77" y="580" width="3" height="15" fill="rgb(249,71,5)"/><text x="80.00" y="590.50"></text></g><g><title>consume_item (rlp/codec.py:206) (21 samples, 0.22%)</title><rect x="78" y="596" width="2" height="15" fill="rgb(231,24,1)"/><text x="81.00" y="606.50"></text></g><g><title>get_node (trie/hexary.py:284) (36 samples, 0.37%)</title><rect x="81" y="580" width="4" height="15" fill="rgb(217,147,38)"/><text x="84.00" y="590.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (34 samples, 0.35%)</title><rect x="81" y="596" width="4" height="15" fill="rgb(205,5,54)"/><text x="84.00" y="606.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (33 samples, 0.34%)</title><rect x="81" y="612" width="4" height="15" fill="rgb(244,180,36)"/><text x="84.00" y="622.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (53 samples, 0.55%)</title><rect x="81" y="564" width="6" height="15" fill="rgb(251,183,11)"/><text x="84.00" y="574.50"></text></g><g><title>get_node (trie/hexary.py:285) (17 samples, 0.18%)</title><rect x="85" y="580" width="2" height="15" fill="rgb(225,148,19)"/><text x="88.00" y="590.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (16 samples, 0.17%)</title><rect x="85" y="596" width="2" height="15" fill="rgb(213,144,38)"/><text x="88.00" y="606.50"></text></g><g><title>decode (rlp/codec.py:230) (13 samples, 0.13%)</title><rect x="85" y="612" width="2" height="15" fill="rgb(209,3,3)"/><text x="88.00" y="622.50"></text></g><g><title>consume_item (rlp/codec.py:206) (9 samples, 0.09%)</title><rect x="86" y="628" width="1" height="15" fill="rgb(225,215,15)"/><text x="89.00" y="638.50"></text></g><g><title>get_node (trie/hexary.py:284) (55 samples, 0.57%)</title><rect x="87" y="612" width="7" height="15" fill="rgb(251,145,1)"/><text x="90.00" y="622.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (52 samples, 0.54%)</title><rect x="88" y="628" width="6" height="15" fill="rgb(241,155,28)"/><text x="91.00" y="638.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (45 samples, 0.47%)</title><rect x="89" y="644" width="5" height="15" fill="rgb(227,192,7)"/><text x="92.00" y="654.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (69 samples, 0.71%)</title><rect x="87" y="596" width="9" height="15" fill="rgb(238,156,27)"/><text x="90.00" y="606.50"></text></g><g><title>get_node (trie/hexary.py:285) (14 samples, 0.14%)</title><rect x="94" y="612" width="2" height="15" fill="rgb(238,30,51)"/><text x="97.00" y="622.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (13 samples, 0.13%)</title><rect x="94" y="628" width="2" height="15" fill="rgb(233,214,39)"/><text x="97.00" y="638.50"></text></g><g><title>decode (rlp/codec.py:230) (12 samples, 0.12%)</title><rect x="94" y="644" width="2" height="15" fill="rgb(235,216,18)"/><text x="97.00" y="654.50"></text></g><g><title>_get (trie/hexary.py:80) (9 samples, 0.09%)</title><rect x="96" y="612" width="1" height="15" fill="rgb(251,214,33)"/><text x="99.00" y="622.50"></text></g><g><title>get_node (trie/hexary.py:284) (9 samples, 0.09%)</title><rect x="97" y="644" width="2" height="15" fill="rgb(211,28,39)"/><text x="100.00" y="654.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (17 samples, 0.18%)</title><rect x="97" y="628" width="3" height="15" fill="rgb(217,168,29)"/><text x="100.00" y="638.50"></text></g><g><title>_get_account (eth/db/account.py:334) (350 samples, 3.62%)</title><rect x="57" y="276" width="43" height="15" fill="rgb(249,210,30)"/><text x="60.00" y="286.50">_get..</text></g><g><title>_get_encoded_account (eth/db/account.py:323) (349 samples, 3.61%)</title><rect x="58" y="292" width="42" height="15" fill="rgb(213,15,30)"/><text x="61.00" y="302.50">_ge..</text></g><g><title>__getitem__ (eth/db/journal.py:336) (348 samples, 3.60%)</title><rect x="58" y="308" width="42" height="15" fill="rgb(226,108,30)"/><text x="61.00" y="318.50">__g..</text></g><g><title>__getitem__ (eth/db/cache.py:22) (348 samples, 3.60%)</title><rect x="58" y="324" width="42" height="15" fill="rgb(220,64,47)"/><text x="61.00" y="334.50">__g..</text></g><g><title>__getitem__ (eth/db/keymap.py:28) (345 samples, 3.57%)</title><rect x="58" y="340" width="42" height="15" fill="rgb(218,229,42)"/><text x="61.00" y="350.50">__g..</text></g><g><title>__getitem__ (trie/hexary.py:515) (345 samples, 3.57%)</title><rect x="58" y="356" width="42" height="15" fill="rgb(252,77,10)"/><text x="61.00" y="366.50">__g..</text></g><g><title>get (trie/hexary.py:75) (328 samples, 3.40%)</title><rect x="60" y="372" width="40" height="15" fill="rgb(222,132,11)"/><text x="63.00" y="382.50">get..</text></g><g><title>_get (trie/hexary.py:87) (328 samples, 3.40%)</title><rect x="60" y="388" width="40" height="15" fill="rgb(220,157,24)"/><text x="63.00" y="398.50">_ge..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (317 samples, 3.28%)</title><rect x="61" y="404" width="39" height="15" fill="rgb(253,173,47)"/><text x="64.00" y="414.50">_ge..</text></g><g><title>_get (trie/hexary.py:87) (316 samples, 3.27%)</title><rect x="62" y="420" width="38" height="15" fill="rgb(245,146,46)"/><text x="65.00" y="430.50">_ge..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (304 samples, 3.15%)</title><rect x="63" y="436" width="37" height="15" fill="rgb(245,215,18)"/><text x="66.00" y="446.50">_ge..</text></g><g><title>_get (trie/hexary.py:87) (303 samples, 3.14%)</title><rect x="63" y="452" width="37" height="15" fill="rgb(207,170,28)"/><text x="66.00" y="462.50">_ge..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (280 samples, 2.90%)</title><rect x="66" y="468" width="34" height="15" fill="rgb(253,177,52)"/><text x="69.00" y="478.50">_g..</text></g><g><title>_get (trie/hexary.py:87) (277 samples, 2.87%)</title><rect x="66" y="484" width="34" height="15" fill="rgb(240,107,8)"/><text x="69.00" y="494.50">_g..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (241 samples, 2.50%)</title><rect x="71" y="500" width="29" height="15" fill="rgb(253,51,14)"/><text x="74.00" y="510.50">_g..</text></g><g><title>_get (trie/hexary.py:87) (241 samples, 2.50%)</title><rect x="71" y="516" width="29" height="15" fill="rgb(232,211,37)"/><text x="74.00" y="526.50">_g..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (162 samples, 1.68%)</title><rect x="80" y="532" width="20" height="15" fill="rgb(223,67,4)"/><text x="83.00" y="542.50"></text></g><g><title>_get (trie/hexary.py:87) (161 samples, 1.67%)</title><rect x="81" y="548" width="19" height="15" fill="rgb(246,176,24)"/><text x="84.00" y="558.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (108 samples, 1.12%)</title><rect x="87" y="564" width="13" height="15" fill="rgb(216,191,51)"/><text x="90.00" y="574.50"></text></g><g><title>_get (trie/hexary.py:87) (105 samples, 1.09%)</title><rect x="87" y="580" width="13" height="15" fill="rgb(242,0,15)"/><text x="90.00" y="590.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (36 samples, 0.37%)</title><rect x="96" y="596" width="4" height="15" fill="rgb(251,145,47)"/><text x="99.00" y="606.50"></text></g><g><title>_get (trie/hexary.py:87) (22 samples, 0.23%)</title><rect x="97" y="612" width="3" height="15" fill="rgb(250,17,0)"/><text x="100.00" y="622.50"></text></g><g><title>deserialize (rlp/sedes/serializable.py:270) (10 samples, 0.10%)</title><rect x="102" y="308" width="1" height="15" fill="rgb(239,136,14)"/><text x="105.00" y="318.50"></text></g><g><title>inner (eth_utils/functional.py:45) (10 samples, 0.10%)</title><rect x="102" y="324" width="1" height="15" fill="rgb(221,49,22)"/><text x="105.00" y="334.50"></text></g><g><title>decode (rlp/codec.py:237) (23 samples, 0.24%)</title><rect x="101" y="292" width="2" height="15" fill="rgb(217,199,23)"/><text x="104.00" y="302.50"></text></g><g><title>validate_frontier_transaction (eth/vm/forks/frontier/validation.py:16) (499 samples, 5.17%)</title><rect x="43" y="228" width="61" height="15" fill="rgb(253,160,26)"/><text x="46.00" y="238.50">valida..</text></g><g><title>get_balance (eth/vm/state.py:119) (381 samples, 3.95%)</title><rect x="57" y="244" width="47" height="15" fill="rgb(209,49,2)"/><text x="60.00" y="254.50">get_..</text></g><g><title>get_balance (eth/db/account.py:217) (381 samples, 3.95%)</title><rect x="57" y="260" width="47" height="15" fill="rgb(216,153,19)"/><text x="60.00" y="270.50">get_..</text></g><g><title>_get_account (eth/db/account.py:337) (31 samples, 0.32%)</title><rect x="100" y="276" width="4" height="15" fill="rgb(237,68,50)"/><text x="103.00" y="286.50"></text></g><g><title>__call__ (eth/vm/state.py:262) (701 samples, 7.26%)</title><rect x="19" y="164" width="85" height="15" fill="rgb(205,185,28)"/><text x="22.00" y="174.50">__call__ (..</text></g><g><title>validate_transaction (eth/vm/forks/frontier/state.py:50) (501 samples, 5.19%)</title><rect x="43" y="180" width="61" height="15" fill="rgb(231,67,26)"/><text x="46.00" y="190.50">valida..</text></g><g><title>validate_transaction (eth/vm/forks/homestead/state.py:20) (501 samples, 5.19%)</title><rect x="43" y="196" width="61" height="15" fill="rgb(215,175,41)"/><text x="46.00" y="206.50">valida..</text></g><g><title>validate_homestead_transaction (eth/vm/forks/homestead/validation.py:23) (501 samples, 5.19%)</title><rect x="43" y="212" width="61" height="15" fill="rgb(211,178,23)"/><text x="46.00" y="222.50">valida..</text></g><g><title>_set_account (eth/db/account.py:346) (16 samples, 0.17%)</title><rect x="105" y="244" width="2" height="15" fill="rgb(234,190,53)"/><text x="108.00" y="254.50"></text></g><g><title>build_evm_message (eth/vm/forks/frontier/state.py:57) (38 samples, 0.39%)</title><rect x="105" y="180" width="5" height="15" fill="rgb(218,9,44)"/><text x="108.00" y="190.50"></text></g><g><title>delta_balance (eth/vm/state.py:125) (38 samples, 0.39%)</title><rect x="105" y="196" width="5" height="15" fill="rgb(245,141,46)"/><text x="108.00" y="206.50"></text></g><g><title>set_balance (eth/vm/state.py:122) (36 samples, 0.37%)</title><rect x="105" y="212" width="5" height="15" fill="rgb(252,112,27)"/><text x="108.00" y="222.50"></text></g><g><title>set_balance (eth/db/account.py:225) (35 samples, 0.36%)</title><rect x="105" y="228" width="5" height="15" fill="rgb(242,109,36)"/><text x="108.00" y="238.50"></text></g><g><title>build_evm_message (eth/vm/forks/frontier/state.py:60) (23 samples, 0.24%)</title><rect x="110" y="180" width="2" height="15" fill="rgb(232,181,23)"/><text x="113.00" y="190.50"></text></g><g><title>increment_nonce (eth/vm/state.py:134) (23 samples, 0.24%)</title><rect x="110" y="196" width="2" height="15" fill="rgb(243,133,39)"/><text x="113.00" y="206.50"></text></g><g><title>increment_nonce (eth/db/account.py:245) (23 samples, 0.24%)</title><rect x="110" y="212" width="2" height="15" fill="rgb(227,201,16)"/><text x="113.00" y="222.50"></text></g><g><title>set_nonce (eth/db/account.py:241) (23 samples, 0.24%)</title><rect x="110" y="228" width="2" height="15" fill="rgb(241,180,34)"/><text x="113.00" y="238.50"></text></g><g><title>get (trie/hexary.py:73) (13 samples, 0.13%)</title><rect x="114" y="340" width="2" height="15" fill="rgb(209,37,11)"/><text x="117.00" y="350.50"></text></g><g><title>get_node (trie/hexary.py:285) (9 samples, 0.09%)</title><rect x="115" y="356" width="1" height="15" fill="rgb(243,185,19)"/><text x="118.00" y="366.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (9 samples, 0.09%)</title><rect x="115" y="372" width="1" height="15" fill="rgb(251,226,38)"/><text x="118.00" y="382.50"></text></g><g><title>decode (rlp/codec.py:230) (9 samples, 0.09%)</title><rect x="115" y="388" width="1" height="15" fill="rgb(238,54,15)"/><text x="118.00" y="398.50"></text></g><g><title>consume_item (rlp/codec.py:206) (9 samples, 0.09%)</title><rect x="115" y="404" width="1" height="15" fill="rgb(253,16,41)"/><text x="118.00" y="414.50"></text></g><g><title>get_node (trie/hexary.py:284) (11 samples, 0.11%)</title><rect x="117" y="452" width="1" height="15" fill="rgb(249,3,34)"/><text x="120.00" y="462.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (11 samples, 0.11%)</title><rect x="117" y="468" width="1" height="15" fill="rgb(225,147,49)"/><text x="120.00" y="478.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (11 samples, 0.11%)</title><rect x="117" y="484" width="1" height="15" fill="rgb(215,34,43)"/><text x="120.00" y="494.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (12 samples, 0.12%)</title><rect x="117" y="436" width="2" height="15" fill="rgb(221,181,50)"/><text x="120.00" y="446.50"></text></g><g><title>get_node (trie/hexary.py:284) (17 samples, 0.18%)</title><rect x="119" y="484" width="2" height="15" fill="rgb(207,111,34)"/><text x="122.00" y="494.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (17 samples, 0.18%)</title><rect x="119" y="500" width="2" height="15" fill="rgb(228,139,8)"/><text x="122.00" y="510.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (16 samples, 0.17%)</title><rect x="119" y="516" width="2" height="15" fill="rgb(220,126,17)"/><text x="122.00" y="526.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (30 samples, 0.31%)</title><rect x="119" y="468" width="3" height="15" fill="rgb(221,222,28)"/><text x="122.00" y="478.50"></text></g><g><title>get_node (trie/hexary.py:285) (13 samples, 0.13%)</title><rect x="121" y="484" width="1" height="15" fill="rgb(241,79,30)"/><text x="124.00" y="494.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (13 samples, 0.13%)</title><rect x="121" y="500" width="1" height="15" fill="rgb(224,87,2)"/><text x="124.00" y="510.50"></text></g><g><title>decode (rlp/codec.py:230) (12 samples, 0.12%)</title><rect x="121" y="516" width="1" height="15" fill="rgb(245,73,17)"/><text x="124.00" y="526.50"></text></g><g><title>consume_item (rlp/codec.py:206) (10 samples, 0.10%)</title><rect x="121" y="532" width="1" height="15" fill="rgb(219,119,19)"/><text x="124.00" y="542.50"></text></g><g><title>get_node (trie/hexary.py:284) (30 samples, 0.31%)</title><rect x="122" y="516" width="4" height="15" fill="rgb(248,49,44)"/><text x="125.00" y="526.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (29 samples, 0.30%)</title><rect x="123" y="532" width="3" height="15" fill="rgb(236,43,11)"/><text x="126.00" y="542.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (29 samples, 0.30%)</title><rect x="123" y="548" width="3" height="15" fill="rgb(222,47,15)"/><text x="126.00" y="558.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (51 samples, 0.53%)</title><rect x="122" y="500" width="7" height="15" fill="rgb(218,129,43)"/><text x="125.00" y="510.50"></text></g><g><title>get_node (trie/hexary.py:285) (21 samples, 0.22%)</title><rect x="126" y="516" width="3" height="15" fill="rgb(246,141,17)"/><text x="129.00" y="526.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (20 samples, 0.21%)</title><rect x="126" y="532" width="3" height="15" fill="rgb(220,152,32)"/><text x="129.00" y="542.50"></text></g><g><title>decode (rlp/codec.py:230) (19 samples, 0.20%)</title><rect x="126" y="548" width="3" height="15" fill="rgb(234,173,6)"/><text x="129.00" y="558.50"></text></g><g><title>consume_item (rlp/codec.py:206) (16 samples, 0.17%)</title><rect x="127" y="564" width="2" height="15" fill="rgb(215,53,54)"/><text x="130.00" y="574.50"></text></g><g><title>get_node (trie/hexary.py:284) (28 samples, 0.29%)</title><rect x="129" y="548" width="3" height="15" fill="rgb(223,185,2)"/><text x="132.00" y="558.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (26 samples, 0.27%)</title><rect x="129" y="564" width="3" height="15" fill="rgb(242,190,38)"/><text x="132.00" y="574.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (24 samples, 0.25%)</title><rect x="129" y="580" width="3" height="15" fill="rgb(232,2,47)"/><text x="132.00" y="590.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (50 samples, 0.52%)</title><rect x="129" y="532" width="6" height="15" fill="rgb(209,216,28)"/><text x="132.00" y="542.50"></text></g><g><title>get_node (trie/hexary.py:285) (22 samples, 0.23%)</title><rect x="132" y="548" width="3" height="15" fill="rgb(215,111,45)"/><text x="135.00" y="558.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (22 samples, 0.23%)</title><rect x="132" y="564" width="3" height="15" fill="rgb(243,158,21)"/><text x="135.00" y="574.50"></text></g><g><title>decode (rlp/codec.py:230) (21 samples, 0.22%)</title><rect x="132" y="580" width="3" height="15" fill="rgb(228,219,14)"/><text x="135.00" y="590.50"></text></g><g><title>consume_item (rlp/codec.py:206) (16 samples, 0.17%)</title><rect x="133" y="596" width="2" height="15" fill="rgb(208,115,11)"/><text x="136.00" y="606.50"></text></g><g><title>get_node (trie/hexary.py:284) (19 samples, 0.20%)</title><rect x="135" y="580" width="2" height="15" fill="rgb(237,207,42)"/><text x="138.00" y="590.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (15 samples, 0.16%)</title><rect x="135" y="596" width="2" height="15" fill="rgb(210,145,21)"/><text x="138.00" y="606.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (15 samples, 0.16%)</title><rect x="135" y="612" width="2" height="15" fill="rgb(253,102,22)"/><text x="138.00" y="622.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (24 samples, 0.25%)</title><rect x="135" y="564" width="3" height="15" fill="rgb(206,99,12)"/><text x="138.00" y="574.50"></text></g><g><title>_get (trie/hexary.py:85) (10 samples, 0.10%)</title><rect x="139" y="580" width="1" height="15" fill="rgb(212,115,52)"/><text x="142.00" y="590.50"></text></g><g><title>_get_account (eth/db/account.py:334) (226 samples, 2.34%)</title><rect x="113" y="244" width="28" height="15" fill="rgb(224,143,51)"/><text x="116.00" y="254.50">_..</text></g><g><title>_get_encoded_account (eth/db/account.py:323) (224 samples, 2.32%)</title><rect x="113" y="260" width="28" height="15" fill="rgb(242,145,37)"/><text x="116.00" y="270.50">_..</text></g><g><title>__getitem__ (eth/db/journal.py:336) (224 samples, 2.32%)</title><rect x="113" y="276" width="28" height="15" fill="rgb(246,101,31)"/><text x="116.00" y="286.50">_..</text></g><g><title>__getitem__ (eth/db/cache.py:22) (224 samples, 2.32%)</title><rect x="113" y="292" width="28" height="15" fill="rgb(237,76,17)"/><text x="116.00" y="302.50">_..</text></g><g><title>__getitem__ (eth/db/keymap.py:28) (218 samples, 2.26%)</title><rect x="114" y="308" width="27" height="15" fill="rgb(243,116,48)"/><text x="117.00" y="318.50">_..</text></g><g><title>__getitem__ (trie/hexary.py:515) (218 samples, 2.26%)</title><rect x="114" y="324" width="27" height="15" fill="rgb(209,211,30)"/><text x="117.00" y="334.50">_..</text></g><g><title>get (trie/hexary.py:75) (203 samples, 2.10%)</title><rect x="116" y="340" width="25" height="15" fill="rgb(236,129,13)"/><text x="119.00" y="350.50">g..</text></g><g><title>_get (trie/hexary.py:87) (201 samples, 2.08%)</title><rect x="116" y="356" width="25" height="15" fill="rgb(211,203,12)"/><text x="119.00" y="366.50">_..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (198 samples, 2.05%)</title><rect x="116" y="372" width="25" height="15" fill="rgb(254,152,44)"/><text x="119.00" y="382.50">_..</text></g><g><title>_get (trie/hexary.py:87) (198 samples, 2.05%)</title><rect x="116" y="388" width="25" height="15" fill="rgb(217,11,3)"/><text x="119.00" y="398.50">_..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (193 samples, 2.00%)</title><rect x="117" y="404" width="24" height="15" fill="rgb(207,92,27)"/><text x="120.00" y="414.50">_..</text></g><g><title>_get (trie/hexary.py:87) (193 samples, 2.00%)</title><rect x="117" y="420" width="24" height="15" fill="rgb(225,229,53)"/><text x="120.00" y="430.50">_..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (181 samples, 1.87%)</title><rect x="119" y="436" width="22" height="15" fill="rgb(227,217,19)"/><text x="122.00" y="446.50">_..</text></g><g><title>_get (trie/hexary.py:87) (180 samples, 1.86%)</title><rect x="119" y="452" width="22" height="15" fill="rgb(236,228,18)"/><text x="122.00" y="462.50">_..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (150 samples, 1.55%)</title><rect x="122" y="468" width="19" height="15" fill="rgb(219,63,9)"/><text x="125.00" y="478.50"></text></g><g><title>_get (trie/hexary.py:87) (149 samples, 1.54%)</title><rect x="122" y="484" width="19" height="15" fill="rgb(207,190,18)"/><text x="125.00" y="494.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (98 samples, 1.01%)</title><rect x="129" y="500" width="12" height="15" fill="rgb(235,5,24)"/><text x="132.00" y="510.50"></text></g><g><title>_get (trie/hexary.py:87) (97 samples, 1.00%)</title><rect x="129" y="516" width="12" height="15" fill="rgb(235,206,11)"/><text x="132.00" y="526.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (47 samples, 0.49%)</title><rect x="135" y="532" width="6" height="15" fill="rgb(217,44,52)"/><text x="138.00" y="542.50"></text></g><g><title>_get (trie/hexary.py:87) (46 samples, 0.48%)</title><rect x="135" y="548" width="6" height="15" fill="rgb(229,116,2)"/><text x="138.00" y="558.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (22 samples, 0.23%)</title><rect x="138" y="564" width="3" height="15" fill="rgb(214,152,33)"/><text x="141.00" y="574.50"></text></g><g><title>_get_account (eth/db/account.py:337) (15 samples, 0.16%)</title><rect x="141" y="244" width="1" height="15" fill="rgb(246,202,30)"/><text x="144.00" y="254.50"></text></g><g><title>get_code (eth/db/account.py:253) (243 samples, 2.52%)</title><rect x="113" y="212" width="30" height="15" fill="rgb(226,125,30)"/><text x="116.00" y="222.50">ge..</text></g><g><title>get_code_hash (eth/db/account.py:275) (243 samples, 2.52%)</title><rect x="113" y="228" width="30" height="15" fill="rgb(235,216,23)"/><text x="116.00" y="238.50">ge..</text></g><g><title>build_evm_message (eth/vm/forks/frontier/state.py:75) (278 samples, 2.88%)</title><rect x="113" y="180" width="34" height="15" fill="rgb(211,34,47)"/><text x="116.00" y="190.50">bu..</text></g><g><title>get_code (eth/vm/state.py:137) (278 samples, 2.88%)</title><rect x="113" y="196" width="34" height="15" fill="rgb(229,53,25)"/><text x="116.00" y="206.50">ge..</text></g><g><title>get_code (eth/db/account.py:258) (32 samples, 0.33%)</title><rect x="143" y="212" width="4" height="15" fill="rgb(252,47,25)"/><text x="146.00" y="222.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (31 samples, 0.32%)</title><rect x="143" y="228" width="4" height="15" fill="rgb(239,116,45)"/><text x="146.00" y="238.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (31 samples, 0.32%)</title><rect x="143" y="244" width="4" height="15" fill="rgb(207,226,32)"/><text x="146.00" y="254.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (29 samples, 0.30%)</title><rect x="143" y="260" width="4" height="15" fill="rgb(229,184,46)"/><text x="146.00" y="270.50"></text></g><g><title>build_evm_message (eth/vm/forks/frontier/state.py:77) (12 samples, 0.12%)</title><rect x="147" y="180" width="1" height="15" fill="rgb(209,108,29)"/><text x="150.00" y="190.50"></text></g><g><title>logger (eth/vm/state.py:64) (12 samples, 0.12%)</title><rect x="147" y="196" width="1" height="15" fill="rgb(209,102,30)"/><text x="150.00" y="206.50"></text></g><g><title>get_extended_debug_logger (eth_utils/logging.py:83) (11 samples, 0.11%)</title><rect x="147" y="212" width="1" height="15" fill="rgb(213,145,21)"/><text x="150.00" y="222.50"></text></g><g><title>__call__ (eth/vm/state.py:263) (362 samples, 3.75%)</title><rect x="104" y="164" width="44" height="15" fill="rgb(216,84,53)"/><text x="107.00" y="174.50">__ca..</text></g><g><title>record (eth/db/account.py:357) (15 samples, 0.16%)</title><rect x="151" y="228" width="1" height="15" fill="rgb(210,82,43)"/><text x="154.00" y="238.50"></text></g><g><title>record (eth/db/storage.py:220) (15 samples, 0.16%)</title><rect x="151" y="244" width="1" height="15" fill="rgb(235,201,30)"/><text x="154.00" y="254.50"></text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:49) (23 samples, 0.24%)</title><rect x="150" y="196" width="3" height="15" fill="rgb(245,27,40)"/><text x="153.00" y="206.50"></text></g><g><title>snapshot (eth/vm/state.py:164) (22 samples, 0.23%)</title><rect x="150" y="212" width="3" height="15" fill="rgb(215,171,7)"/><text x="153.00" y="222.50"></text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:62) (16 samples, 0.17%)</title><rect x="153" y="196" width="2" height="15" fill="rgb(247,95,41)"/><text x="156.00" y="206.50"></text></g><g><title>delta_balance (eth/vm/state.py:125) (16 samples, 0.17%)</title><rect x="153" y="212" width="2" height="15" fill="rgb(232,65,24)"/><text x="156.00" y="222.50"></text></g><g><title>set_balance (eth/vm/state.py:122) (15 samples, 0.16%)</title><rect x="153" y="228" width="2" height="15" fill="rgb(239,170,37)"/><text x="156.00" y="238.50"></text></g><g><title>set_balance (eth/db/account.py:225) (15 samples, 0.16%)</title><rect x="153" y="244" width="2" height="15" fill="rgb(243,156,6)"/><text x="156.00" y="254.50"></text></g><g><title>__iter__ (eth/vm/code_stream.py:51) (11 samples, 0.11%)</title><rect x="159" y="228" width="2" height="15" fill="rgb(218,23,44)"/><text x="162.00" y="238.50"></text></g><g><title>__iter__ (eth/vm/code_stream.py:52) (17 samples, 0.18%)</title><rect x="161" y="228" width="2" height="15" fill="rgb(224,152,35)"/><text x="164.00" y="238.50"></text></g><g><title>apply_computation (eth/vm/computation.py:539) (66 samples, 0.68%)</title><rect x="157" y="212" width="8" height="15" fill="rgb(254,183,50)"/><text x="160.00" y="222.50"></text></g><g><title>__iter__ (eth/vm/code_stream.py:55) (16 samples, 0.17%)</title><rect x="163" y="228" width="2" height="15" fill="rgb(254,60,6)"/><text x="166.00" y="238.50"></text></g><g><title>apply_computation (eth/vm/computation.py:541) (10 samples, 0.10%)</title><rect x="165" y="212" width="2" height="15" fill="rgb(240,175,32)"/><text x="168.00" y="222.50"></text></g><g><title>__call__ (eth/vm/logic/call.py:115) (9 samples, 0.09%)</title><rect x="175" y="228" width="2" height="15" fill="rgb(210,137,46)"/><text x="178.00" y="238.50"></text></g><g><title>get_code (eth/vm/state.py:137) (9 samples, 0.09%)</title><rect x="175" y="244" width="2" height="15" fill="rgb(234,16,38)"/><text x="178.00" y="254.50"></text></g><g><title>__call__ (eth/vm/logic/call.py:117) (9 samples, 0.09%)</title><rect x="177" y="228" width="1" height="15" fill="rgb(236,199,4)"/><text x="180.00" y="238.50"></text></g><g><title>get_code (eth/vm/state.py:137) (9 samples, 0.09%)</title><rect x="177" y="244" width="1" height="15" fill="rgb(244,212,37)"/><text x="180.00" y="254.50"></text></g><g><title>get_code (eth/db/account.py:258) (9 samples, 0.09%)</title><rect x="177" y="260" width="1" height="15" fill="rgb(206,172,34)"/><text x="180.00" y="270.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (9 samples, 0.09%)</title><rect x="177" y="276" width="1" height="15" fill="rgb(236,182,44)"/><text x="180.00" y="286.50"></text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:49) (13 samples, 0.13%)</title><rect x="179" y="276" width="1" height="15" fill="rgb(239,66,11)"/><text x="182.00" y="286.50"></text></g><g><title>snapshot (eth/vm/state.py:164) (12 samples, 0.12%)</title><rect x="179" y="292" width="1" height="15" fill="rgb(248,122,50)"/><text x="182.00" y="302.50"></text></g><g><title>record (eth/db/account.py:357) (11 samples, 0.11%)</title><rect x="179" y="308" width="1" height="15" fill="rgb(231,7,6)"/><text x="182.00" y="318.50"></text></g><g><title>record (eth/db/storage.py:220) (11 samples, 0.11%)</title><rect x="179" y="324" width="1" height="15" fill="rgb(241,154,16)"/><text x="182.00" y="334.50"></text></g><g><title>apply_computation (eth/vm/computation.py:539) (32 samples, 0.33%)</title><rect x="183" y="292" width="4" height="15" fill="rgb(225,134,28)"/><text x="186.00" y="302.50"></text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:49) (10 samples, 0.10%)</title><rect x="193" y="356" width="1" height="15" fill="rgb(245,73,31)"/><text x="196.00" y="366.50"></text></g><g><title>snapshot (eth/vm/state.py:164) (10 samples, 0.10%)</title><rect x="193" y="372" width="1" height="15" fill="rgb(247,6,46)"/><text x="196.00" y="382.50"></text></g><g><title>apply_computation (eth/vm/computation.py:529) (10 samples, 0.10%)</title><rect x="195" y="372" width="1" height="15" fill="rgb(210,161,47)"/><text x="198.00" y="382.50"></text></g><g><title>__iter__ (eth/vm/code_stream.py:51) (14 samples, 0.14%)</title><rect x="197" y="388" width="2" height="15" fill="rgb(235,42,16)"/><text x="200.00" y="398.50"></text></g><g><title>apply_computation (eth/vm/computation.py:539) (36 samples, 0.37%)</title><rect x="196" y="372" width="5" height="15" fill="rgb(251,216,22)"/><text x="199.00" y="382.50"></text></g><g><title>apply_computation (eth/vm/computation.py:541) (9 samples, 0.09%)</title><rect x="201" y="372" width="1" height="15" fill="rgb(210,121,3)"/><text x="204.00" y="382.50"></text></g><g><title>apply_computation (eth/vm/computation.py:539) (12 samples, 0.12%)</title><rect x="210" y="452" width="1" height="15" fill="rgb(205,195,26)"/><text x="213.00" y="462.50"></text></g><g><title>apply_computation (eth/vm/computation.py:539) (12 samples, 0.12%)</title><rect x="216" y="532" width="1" height="15" fill="rgb(216,127,14)"/><text x="219.00" y="542.50"></text></g><g><title>__call__ (eth/vm/logic/call.py:135) (13 samples, 0.13%)</title><rect x="222" y="628" width="1" height="15" fill="rgb(251,12,14)"/><text x="225.00" y="638.50"></text></g><g><title>apply_child_computation (eth/vm/computation.py:366) (13 samples, 0.13%)</title><rect x="222" y="644" width="1" height="15" fill="rgb(252,154,17)"/><text x="225.00" y="654.50"></text></g><g><title>generate_child_computation (eth/vm/computation.py:381) (13 samples, 0.13%)</title><rect x="222" y="660" width="1" height="15" fill="rgb(250,54,8)"/><text x="225.00" y="670.50"></text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:77) (13 samples, 0.13%)</title><rect x="222" y="676" width="1" height="15" fill="rgb(209,205,25)"/><text x="225.00" y="686.50"></text></g><g><title>apply_computation (eth/vm/computation.py:554) (11 samples, 0.11%)</title><rect x="222" y="692" width="1" height="15" fill="rgb(230,207,45)"/><text x="225.00" y="702.50"></text></g><g><title>__call__ (eth/vm/logic/call.py:135) (71 samples, 0.74%)</title><rect x="220" y="548" width="9" height="15" fill="rgb(238,87,25)"/><text x="223.00" y="558.50"></text></g><g><title>apply_child_computation (eth/vm/computation.py:366) (71 samples, 0.74%)</title><rect x="220" y="564" width="9" height="15" fill="rgb(238,218,6)"/><text x="223.00" y="574.50"></text></g><g><title>generate_child_computation (eth/vm/computation.py:381) (71 samples, 0.74%)</title><rect x="220" y="580" width="9" height="15" fill="rgb(209,61,33)"/><text x="223.00" y="590.50"></text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:77) (65 samples, 0.67%)</title><rect x="221" y="596" width="8" height="15" fill="rgb(235,84,16)"/><text x="224.00" y="606.50"></text></g><g><title>apply_computation (eth/vm/computation.py:554) (65 samples, 0.67%)</title><rect x="221" y="612" width="8" height="15" fill="rgb(250,108,9)"/><text x="224.00" y="622.50"></text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:55) (36 samples, 0.37%)</title><rect x="224" y="628" width="5" height="15" fill="rgb(235,73,51)"/><text x="227.00" y="638.50"></text></g><g><title>sload (eth/vm/logic/storage.py:60) (17 samples, 0.18%)</title><rect x="227" y="644" width="2" height="15" fill="rgb(209,25,39)"/><text x="230.00" y="654.50"></text></g><g><title>get_storage (eth/vm/state.py:107) (17 samples, 0.18%)</title><rect x="227" y="660" width="2" height="15" fill="rgb(237,178,14)"/><text x="230.00" y="670.50"></text></g><g><title>get_storage (eth/db/account.py:146) (16 samples, 0.17%)</title><rect x="227" y="676" width="2" height="15" fill="rgb(238,47,52)"/><text x="230.00" y="686.50"></text></g><g><title>get (eth/db/storage.py:192) (16 samples, 0.17%)</title><rect x="227" y="692" width="2" height="15" fill="rgb(205,37,45)"/><text x="230.00" y="702.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (16 samples, 0.17%)</title><rect x="227" y="708" width="2" height="15" fill="rgb(218,190,24)"/><text x="230.00" y="718.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (16 samples, 0.17%)</title><rect x="227" y="724" width="2" height="15" fill="rgb(239,141,24)"/><text x="230.00" y="734.50"></text></g><g><title>__getitem__ (eth/db/storage.py:88) (16 samples, 0.17%)</title><rect x="227" y="740" width="2" height="15" fill="rgb(218,199,32)"/><text x="230.00" y="750.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (16 samples, 0.17%)</title><rect x="227" y="756" width="2" height="15" fill="rgb(241,93,29)"/><text x="230.00" y="766.50"></text></g><g><title>get (trie/hexary.py:75) (15 samples, 0.16%)</title><rect x="227" y="772" width="2" height="15" fill="rgb(223,6,18)"/><text x="230.00" y="782.50"></text></g><g><title>_get (trie/hexary.py:87) (15 samples, 0.16%)</title><rect x="227" y="788" width="2" height="15" fill="rgb(251,32,13)"/><text x="230.00" y="798.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (14 samples, 0.14%)</title><rect x="227" y="804" width="2" height="15" fill="rgb(254,57,7)"/><text x="230.00" y="814.50"></text></g><g><title>_get (trie/hexary.py:87) (12 samples, 0.12%)</title><rect x="227" y="820" width="2" height="15" fill="rgb(244,43,34)"/><text x="230.00" y="830.50"></text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:53) (18 samples, 0.19%)</title><rect x="229" y="548" width="2" height="15" fill="rgb(251,187,26)"/><text x="232.00" y="558.50"></text></g><g><title>consume_gas (eth/vm/computation.py:254) (16 samples, 0.17%)</title><rect x="229" y="564" width="2" height="15" fill="rgb(242,120,44)"/><text x="232.00" y="574.50"></text></g><g><title>get_code (eth/db/account.py:253) (9 samples, 0.09%)</title><rect x="233" y="596" width="1" height="15" fill="rgb(251,165,3)"/><text x="236.00" y="606.50"></text></g><g><title>get_code_hash (eth/db/account.py:275) (9 samples, 0.09%)</title><rect x="233" y="612" width="1" height="15" fill="rgb(215,208,42)"/><text x="236.00" y="622.50"></text></g><g><title>_get_account (eth/db/account.py:334) (9 samples, 0.09%)</title><rect x="233" y="628" width="1" height="15" fill="rgb(221,65,21)"/><text x="236.00" y="638.50"></text></g><g><title>_get_encoded_account (eth/db/account.py:323) (9 samples, 0.09%)</title><rect x="233" y="644" width="1" height="15" fill="rgb(233,140,21)"/><text x="236.00" y="654.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (9 samples, 0.09%)</title><rect x="233" y="660" width="1" height="15" fill="rgb(243,176,5)"/><text x="236.00" y="670.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (9 samples, 0.09%)</title><rect x="233" y="676" width="1" height="15" fill="rgb(251,55,51)"/><text x="236.00" y="686.50"></text></g><g><title>__getitem__ (eth/db/keymap.py:28) (9 samples, 0.09%)</title><rect x="233" y="692" width="1" height="15" fill="rgb(240,225,0)"/><text x="236.00" y="702.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (9 samples, 0.09%)</title><rect x="233" y="708" width="1" height="15" fill="rgb(238,45,9)"/><text x="236.00" y="718.50"></text></g><g><title>get (trie/hexary.py:75) (9 samples, 0.09%)</title><rect x="233" y="724" width="1" height="15" fill="rgb(252,27,8)"/><text x="236.00" y="734.50"></text></g><g><title>_get (trie/hexary.py:87) (9 samples, 0.09%)</title><rect x="233" y="740" width="1" height="15" fill="rgb(208,12,23)"/><text x="236.00" y="750.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (9 samples, 0.09%)</title><rect x="233" y="756" width="1" height="15" fill="rgb(248,141,4)"/><text x="236.00" y="766.50"></text></g><g><title>_get (trie/hexary.py:87) (9 samples, 0.09%)</title><rect x="233" y="772" width="1" height="15" fill="rgb(251,197,54)"/><text x="236.00" y="782.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (9 samples, 0.09%)</title><rect x="233" y="788" width="1" height="15" fill="rgb(210,108,30)"/><text x="236.00" y="798.50"></text></g><g><title>_get (trie/hexary.py:87) (9 samples, 0.09%)</title><rect x="233" y="804" width="1" height="15" fill="rgb(243,202,41)"/><text x="236.00" y="814.50"></text></g><g><title>extcodesize (eth/vm/logic/context.py:131) (10 samples, 0.10%)</title><rect x="233" y="564" width="1" height="15" fill="rgb(240,63,43)"/><text x="236.00" y="574.50"></text></g><g><title>get_code (eth/vm/state.py:137) (10 samples, 0.10%)</title><rect x="233" y="580" width="1" height="15" fill="rgb(213,45,34)"/><text x="236.00" y="590.50"></text></g><g><title>jumpi (eth/vm/logic/flow.py:32) (10 samples, 0.10%)</title><rect x="235" y="564" width="1" height="15" fill="rgb(214,203,30)"/><text x="238.00" y="574.50"></text></g><g><title>get_node (trie/hexary.py:284) (13 samples, 0.13%)</title><rect x="241" y="740" width="2" height="15" fill="rgb(244,28,52)"/><text x="244.00" y="750.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (13 samples, 0.13%)</title><rect x="241" y="756" width="2" height="15" fill="rgb(252,68,45)"/><text x="244.00" y="766.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (18 samples, 0.19%)</title><rect x="241" y="724" width="3" height="15" fill="rgb(227,13,47)"/><text x="244.00" y="734.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (13 samples, 0.13%)</title><rect x="244" y="756" width="1" height="15" fill="rgb(247,22,28)"/><text x="247.00" y="766.50"></text></g><g><title>get_node (trie/hexary.py:284) (20 samples, 0.21%)</title><rect x="245" y="804" width="3" height="15" fill="rgb(221,60,9)"/><text x="248.00" y="814.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (20 samples, 0.21%)</title><rect x="245" y="820" width="3" height="15" fill="rgb(238,171,12)"/><text x="248.00" y="830.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (24 samples, 0.25%)</title><rect x="245" y="788" width="3" height="15" fill="rgb(235,38,14)"/><text x="248.00" y="798.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (9 samples, 0.09%)</title><rect x="248" y="820" width="1" height="15" fill="rgb(251,185,0)"/><text x="251.00" y="830.50"></text></g><g><title>get (eth/db/storage.py:192) (83 samples, 0.86%)</title><rect x="241" y="612" width="10" height="15" fill="rgb(250,229,24)"/><text x="244.00" y="622.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (81 samples, 0.84%)</title><rect x="241" y="628" width="10" height="15" fill="rgb(241,174,30)"/><text x="244.00" y="638.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (81 samples, 0.84%)</title><rect x="241" y="644" width="10" height="15" fill="rgb(214,76,38)"/><text x="244.00" y="654.50"></text></g><g><title>__getitem__ (eth/db/storage.py:88) (80 samples, 0.83%)</title><rect x="241" y="660" width="10" height="15" fill="rgb(249,79,38)"/><text x="244.00" y="670.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (80 samples, 0.83%)</title><rect x="241" y="676" width="10" height="15" fill="rgb(206,11,31)"/><text x="244.00" y="686.50"></text></g><g><title>get (trie/hexary.py:75) (76 samples, 0.79%)</title><rect x="241" y="692" width="10" height="15" fill="rgb(243,27,8)"/><text x="244.00" y="702.50"></text></g><g><title>_get (trie/hexary.py:87) (76 samples, 0.79%)</title><rect x="241" y="708" width="10" height="15" fill="rgb(214,139,24)"/><text x="244.00" y="718.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (58 samples, 0.60%)</title><rect x="244" y="724" width="7" height="15" fill="rgb(230,158,16)"/><text x="247.00" y="734.50"></text></g><g><title>_get (trie/hexary.py:87) (58 samples, 0.60%)</title><rect x="244" y="740" width="7" height="15" fill="rgb(215,53,18)"/><text x="247.00" y="750.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (45 samples, 0.47%)</title><rect x="245" y="756" width="6" height="15" fill="rgb(217,208,30)"/><text x="248.00" y="766.50"></text></g><g><title>_get (trie/hexary.py:87) (45 samples, 0.47%)</title><rect x="245" y="772" width="6" height="15" fill="rgb(248,119,26)"/><text x="248.00" y="782.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (21 samples, 0.22%)</title><rect x="248" y="788" width="3" height="15" fill="rgb(214,195,38)"/><text x="251.00" y="798.50"></text></g><g><title>_get (trie/hexary.py:87) (20 samples, 0.21%)</title><rect x="248" y="804" width="3" height="15" fill="rgb(239,222,18)"/><text x="251.00" y="814.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (11 samples, 0.11%)</title><rect x="249" y="820" width="2" height="15" fill="rgb(246,205,39)"/><text x="252.00" y="830.50"></text></g><g><title>_get (trie/hexary.py:87) (10 samples, 0.10%)</title><rect x="250" y="836" width="1" height="15" fill="rgb(219,216,31)"/><text x="253.00" y="846.50"></text></g><g><title>sload (eth/vm/logic/storage.py:60) (90 samples, 0.93%)</title><rect x="240" y="564" width="11" height="15" fill="rgb(252,7,49)"/><text x="243.00" y="574.50"></text></g><g><title>get_storage (eth/vm/state.py:107) (90 samples, 0.93%)</title><rect x="240" y="580" width="11" height="15" fill="rgb(226,73,9)"/><text x="243.00" y="590.50"></text></g><g><title>get_storage (eth/db/account.py:146) (88 samples, 0.91%)</title><rect x="241" y="596" width="10" height="15" fill="rgb(246,192,17)"/><text x="244.00" y="606.50"></text></g><g><title>apply_computation (eth/vm/computation.py:554) (281 samples, 2.91%)</title><rect x="218" y="532" width="34" height="15" fill="rgb(207,70,33)"/><text x="221.00" y="542.50">ap..</text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:55) (175 samples, 1.81%)</title><rect x="231" y="548" width="21" height="15" fill="rgb(252,228,36)"/><text x="234.00" y="558.50"></text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:77) (300 samples, 3.11%)</title><rect x="216" y="516" width="36" height="15" fill="rgb(210,49,45)"/><text x="219.00" y="526.50">app..</text></g><g><title>__call__ (eth/vm/logic/call.py:135) (320 samples, 3.31%)</title><rect x="214" y="468" width="39" height="15" fill="rgb(210,79,42)"/><text x="217.00" y="478.50">__c..</text></g><g><title>apply_child_computation (eth/vm/computation.py:366) (320 samples, 3.31%)</title><rect x="214" y="484" width="39" height="15" fill="rgb(248,137,54)"/><text x="217.00" y="494.50">app..</text></g><g><title>generate_child_computation (eth/vm/computation.py:381) (320 samples, 3.31%)</title><rect x="214" y="500" width="39" height="15" fill="rgb(213,199,6)"/><text x="217.00" y="510.50">gen..</text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:53) (30 samples, 0.31%)</title><rect x="254" y="468" width="4" height="15" fill="rgb(250,63,30)"/><text x="257.00" y="478.50"></text></g><g><title>consume_gas (eth/vm/computation.py:254) (26 samples, 0.27%)</title><rect x="255" y="484" width="3" height="15" fill="rgb(209,82,0)"/><text x="258.00" y="494.50"></text></g><g><title>_get_account (eth/db/account.py:334) (12 samples, 0.12%)</title><rect x="263" y="548" width="1" height="15" fill="rgb(237,36,43)"/><text x="266.00" y="558.50"></text></g><g><title>_get_encoded_account (eth/db/account.py:323) (12 samples, 0.12%)</title><rect x="263" y="564" width="1" height="15" fill="rgb(246,119,39)"/><text x="266.00" y="574.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (12 samples, 0.12%)</title><rect x="263" y="580" width="1" height="15" fill="rgb(218,216,2)"/><text x="266.00" y="590.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (12 samples, 0.12%)</title><rect x="263" y="596" width="1" height="15" fill="rgb(243,141,50)"/><text x="266.00" y="606.50"></text></g><g><title>__getitem__ (eth/db/keymap.py:28) (12 samples, 0.12%)</title><rect x="263" y="612" width="1" height="15" fill="rgb(220,173,39)"/><text x="266.00" y="622.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (12 samples, 0.12%)</title><rect x="263" y="628" width="1" height="15" fill="rgb(249,109,50)"/><text x="266.00" y="638.50"></text></g><g><title>get (trie/hexary.py:75) (11 samples, 0.11%)</title><rect x="263" y="644" width="1" height="15" fill="rgb(246,148,24)"/><text x="266.00" y="654.50"></text></g><g><title>_get (trie/hexary.py:87) (11 samples, 0.11%)</title><rect x="263" y="660" width="1" height="15" fill="rgb(254,33,18)"/><text x="266.00" y="670.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (11 samples, 0.11%)</title><rect x="263" y="676" width="1" height="15" fill="rgb(235,211,18)"/><text x="266.00" y="686.50"></text></g><g><title>_get (trie/hexary.py:87) (11 samples, 0.11%)</title><rect x="263" y="692" width="1" height="15" fill="rgb(246,159,14)"/><text x="266.00" y="702.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (11 samples, 0.11%)</title><rect x="263" y="708" width="1" height="15" fill="rgb(224,60,15)"/><text x="266.00" y="718.50"></text></g><g><title>_get (trie/hexary.py:87) (11 samples, 0.11%)</title><rect x="263" y="724" width="1" height="15" fill="rgb(245,159,4)"/><text x="266.00" y="734.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (11 samples, 0.11%)</title><rect x="263" y="740" width="1" height="15" fill="rgb(218,31,30)"/><text x="266.00" y="750.50"></text></g><g><title>_get (trie/hexary.py:87) (11 samples, 0.11%)</title><rect x="263" y="756" width="1" height="15" fill="rgb(222,45,38)"/><text x="266.00" y="766.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (9 samples, 0.09%)</title><rect x="263" y="772" width="1" height="15" fill="rgb(253,26,3)"/><text x="266.00" y="782.50"></text></g><g><title>_get (trie/hexary.py:87) (9 samples, 0.09%)</title><rect x="263" y="788" width="1" height="15" fill="rgb(230,124,15)"/><text x="266.00" y="798.50"></text></g><g><title>get_code (eth/db/account.py:253) (14 samples, 0.14%)</title><rect x="262" y="516" width="2" height="15" fill="rgb(235,150,49)"/><text x="265.00" y="526.50"></text></g><g><title>get_code_hash (eth/db/account.py:275) (14 samples, 0.14%)</title><rect x="262" y="532" width="2" height="15" fill="rgb(247,181,12)"/><text x="265.00" y="542.50"></text></g><g><title>extcodesize (eth/vm/logic/context.py:131) (22 samples, 0.23%)</title><rect x="262" y="484" width="3" height="15" fill="rgb(231,56,27)"/><text x="265.00" y="494.50"></text></g><g><title>get_code (eth/vm/state.py:137) (22 samples, 0.23%)</title><rect x="262" y="500" width="3" height="15" fill="rgb(212,171,20)"/><text x="265.00" y="510.50"></text></g><g><title>jumpi (eth/vm/logic/flow.py:42) (9 samples, 0.09%)</title><rect x="267" y="484" width="1" height="15" fill="rgb(222,141,22)"/><text x="270.00" y="494.50"></text></g><g><title>mload (eth/vm/logic/memory.py:31) (11 samples, 0.11%)</title><rect x="268" y="484" width="2" height="15" fill="rgb(236,76,50)"/><text x="271.00" y="494.50"></text></g><g><title>mstore (eth/vm/logic/memory.py:13) (16 samples, 0.17%)</title><rect x="271" y="484" width="1" height="15" fill="rgb(253,53,44)"/><text x="274.00" y="494.50"></text></g><g><title>memory_write (eth/vm/computation.py:239) (16 samples, 0.17%)</title><rect x="271" y="500" width="1" height="15" fill="rgb(250,86,41)"/><text x="274.00" y="510.50"></text></g><g><title>get (trie/hexary.py:73) (9 samples, 0.09%)</title><rect x="276" y="612" width="1" height="15" fill="rgb(218,137,36)"/><text x="279.00" y="622.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (10 samples, 0.10%)</title><rect x="277" y="676" width="1" height="15" fill="rgb(250,37,18)"/><text x="280.00" y="686.50"></text></g><g><title>get_node (trie/hexary.py:284) (12 samples, 0.12%)</title><rect x="277" y="660" width="2" height="15" fill="rgb(210,114,13)"/><text x="280.00" y="670.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (19 samples, 0.20%)</title><rect x="277" y="644" width="2" height="15" fill="rgb(220,50,54)"/><text x="280.00" y="654.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (10 samples, 0.10%)</title><rect x="280" y="708" width="1" height="15" fill="rgb(214,11,12)"/><text x="283.00" y="718.50"></text></g><g><title>get_node (trie/hexary.py:284) (12 samples, 0.12%)</title><rect x="280" y="692" width="1" height="15" fill="rgb(211,56,8)"/><text x="283.00" y="702.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (16 samples, 0.17%)</title><rect x="280" y="676" width="2" height="15" fill="rgb(242,20,41)"/><text x="283.00" y="686.50"></text></g><g><title>get_node (trie/hexary.py:284) (16 samples, 0.17%)</title><rect x="282" y="724" width="2" height="15" fill="rgb(212,93,27)"/><text x="285.00" y="734.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (16 samples, 0.17%)</title><rect x="282" y="740" width="2" height="15" fill="rgb(223,59,42)"/><text x="285.00" y="750.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (23 samples, 0.24%)</title><rect x="282" y="708" width="3" height="15" fill="rgb(212,199,10)"/><text x="285.00" y="718.50"></text></g><g><title>get (eth/db/storage.py:192) (94 samples, 0.97%)</title><rect x="275" y="532" width="12" height="15" fill="rgb(212,226,28)"/><text x="278.00" y="542.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (94 samples, 0.97%)</title><rect x="275" y="548" width="12" height="15" fill="rgb(227,49,16)"/><text x="278.00" y="558.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (93 samples, 0.96%)</title><rect x="275" y="564" width="12" height="15" fill="rgb(233,96,53)"/><text x="278.00" y="574.50"></text></g><g><title>__getitem__ (eth/db/storage.py:88) (89 samples, 0.92%)</title><rect x="276" y="580" width="11" height="15" fill="rgb(250,130,22)"/><text x="279.00" y="590.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (89 samples, 0.92%)</title><rect x="276" y="596" width="11" height="15" fill="rgb(206,114,6)"/><text x="279.00" y="606.50"></text></g><g><title>get (trie/hexary.py:75) (78 samples, 0.81%)</title><rect x="277" y="612" width="10" height="15" fill="rgb(212,122,39)"/><text x="280.00" y="622.50"></text></g><g><title>_get (trie/hexary.py:87) (78 samples, 0.81%)</title><rect x="277" y="628" width="10" height="15" fill="rgb(239,20,25)"/><text x="280.00" y="638.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (59 samples, 0.61%)</title><rect x="279" y="644" width="8" height="15" fill="rgb(231,67,11)"/><text x="282.00" y="654.50"></text></g><g><title>_get (trie/hexary.py:87) (58 samples, 0.60%)</title><rect x="280" y="660" width="7" height="15" fill="rgb(216,50,38)"/><text x="283.00" y="670.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (42 samples, 0.43%)</title><rect x="282" y="676" width="5" height="15" fill="rgb(216,81,38)"/><text x="285.00" y="686.50"></text></g><g><title>_get (trie/hexary.py:87) (37 samples, 0.38%)</title><rect x="282" y="692" width="5" height="15" fill="rgb(241,68,27)"/><text x="285.00" y="702.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (13 samples, 0.13%)</title><rect x="285" y="708" width="2" height="15" fill="rgb(217,67,9)"/><text x="288.00" y="718.50"></text></g><g><title>_get (trie/hexary.py:87) (13 samples, 0.13%)</title><rect x="285" y="724" width="2" height="15" fill="rgb(243,98,34)"/><text x="288.00" y="734.50"></text></g><g><title>sload (eth/vm/logic/storage.py:60) (100 samples, 1.04%)</title><rect x="275" y="484" width="12" height="15" fill="rgb(211,199,54)"/><text x="278.00" y="494.50"></text></g><g><title>get_storage (eth/vm/state.py:107) (100 samples, 1.04%)</title><rect x="275" y="500" width="12" height="15" fill="rgb(251,106,4)"/><text x="278.00" y="510.50"></text></g><g><title>get_storage (eth/db/account.py:146) (100 samples, 1.04%)</title><rect x="275" y="516" width="12" height="15" fill="rgb(215,137,40)"/><text x="278.00" y="526.50"></text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:77) (641 samples, 6.64%)</title><rect x="210" y="436" width="78" height="15" fill="rgb(208,27,26)"/><text x="213.00" y="446.50">apply_mes..</text></g><g><title>apply_computation (eth/vm/computation.py:554) (623 samples, 6.45%)</title><rect x="212" y="452" width="76" height="15" fill="rgb(210,158,35)"/><text x="215.00" y="462.50">apply_co..</text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:55) (249 samples, 2.58%)</title><rect x="258" y="468" width="30" height="15" fill="rgb(210,97,45)"/><text x="261.00" y="478.50">wr..</text></g><g><title>__call__ (eth/vm/logic/call.py:135) (660 samples, 6.84%)</title><rect x="208" y="388" width="81" height="15" fill="rgb(233,64,45)"/><text x="211.00" y="398.50">__call__ ..</text></g><g><title>apply_child_computation (eth/vm/computation.py:366) (660 samples, 6.84%)</title><rect x="208" y="404" width="81" height="15" fill="rgb(218,1,11)"/><text x="211.00" y="414.50">apply_chi..</text></g><g><title>generate_child_computation (eth/vm/computation.py:381) (659 samples, 6.82%)</title><rect x="208" y="420" width="81" height="15" fill="rgb(230,199,40)"/><text x="211.00" y="430.50">generate_..</text></g><g><title>__call__ (eth/vm/logic/call.py:86) (9 samples, 0.09%)</title><rect x="290" y="388" width="1" height="15" fill="rgb(245,1,7)"/><text x="293.00" y="398.50"></text></g><g><title>compute_msg_gas (eth/vm/logic/call.py:285) (9 samples, 0.09%)</title><rect x="290" y="404" width="1" height="15" fill="rgb(240,209,20)"/><text x="293.00" y="414.50"></text></g><g><title>sstore (eth/vm/logic/storage.py:16) (9 samples, 0.09%)</title><rect x="291" y="404" width="1" height="15" fill="rgb(238,17,39)"/><text x="294.00" y="414.50"></text></g><g><title>get_storage (eth/vm/state.py:107) (9 samples, 0.09%)</title><rect x="291" y="420" width="1" height="15" fill="rgb(241,201,29)"/><text x="294.00" y="430.50"></text></g><g><title>get_storage (eth/db/account.py:146) (9 samples, 0.09%)</title><rect x="291" y="436" width="1" height="15" fill="rgb(218,121,53)"/><text x="294.00" y="446.50"></text></g><g><title>get (eth/db/storage.py:192) (9 samples, 0.09%)</title><rect x="291" y="452" width="1" height="15" fill="rgb(246,21,47)"/><text x="294.00" y="462.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (9 samples, 0.09%)</title><rect x="291" y="468" width="1" height="15" fill="rgb(237,136,23)"/><text x="294.00" y="478.50"></text></g><g><title>inner (eth/vm/forks/byzantium/opcodes.py:42) (12 samples, 0.12%)</title><rect x="291" y="388" width="1" height="15" fill="rgb(218,210,20)"/><text x="294.00" y="398.50"></text></g><g><title>consume_gas (eth/vm/gas_meter.py:66) (13 samples, 0.13%)</title><rect x="297" y="420" width="1" height="15" fill="rgb(207,159,52)"/><text x="300.00" y="430.50"></text></g><g><title>consume_gas (eth/vm/gas_meter.py:68) (11 samples, 0.11%)</title><rect x="298" y="420" width="2" height="15" fill="rgb(218,22,52)"/><text x="301.00" y="430.50"></text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:53) (57 samples, 0.59%)</title><rect x="293" y="388" width="7" height="15" fill="rgb(232,79,17)"/><text x="296.00" y="398.50"></text></g><g><title>consume_gas (eth/vm/computation.py:254) (49 samples, 0.51%)</title><rect x="294" y="404" width="6" height="15" fill="rgb(224,144,42)"/><text x="297.00" y="414.50"></text></g><g><title>dup_XX (eth/vm/logic/duplication.py:10) (21 samples, 0.22%)</title><rect x="306" y="404" width="2" height="15" fill="rgb(241,162,15)"/><text x="309.00" y="414.50"></text></g><g><title>stack_dup (eth/vm/computation.py:290) (18 samples, 0.19%)</title><rect x="306" y="420" width="2" height="15" fill="rgb(206,134,13)"/><text x="309.00" y="430.50"></text></g><g><title>extcodesize (eth/vm/logic/context.py:131) (17 samples, 0.18%)</title><rect x="310" y="404" width="2" height="15" fill="rgb(251,95,24)"/><text x="313.00" y="414.50"></text></g><g><title>get_code (eth/vm/state.py:137) (17 samples, 0.18%)</title><rect x="310" y="420" width="2" height="15" fill="rgb(239,72,7)"/><text x="313.00" y="430.50"></text></g><g><title>get_code (eth/db/account.py:258) (9 samples, 0.09%)</title><rect x="311" y="436" width="1" height="15" fill="rgb(229,168,42)"/><text x="314.00" y="446.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (9 samples, 0.09%)</title><rect x="311" y="452" width="1" height="15" fill="rgb(225,102,27)"/><text x="314.00" y="462.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (9 samples, 0.09%)</title><rect x="311" y="468" width="1" height="15" fill="rgb(239,172,48)"/><text x="314.00" y="478.50"></text></g><g><title>jump (eth/vm/logic/flow.py:27) (13 samples, 0.13%)</title><rect x="314" y="404" width="1" height="15" fill="rgb(245,142,49)"/><text x="317.00" y="414.50"></text></g><g><title>jumpi (eth/vm/logic/flow.py:32) (13 samples, 0.13%)</title><rect x="315" y="404" width="2" height="15" fill="rgb(211,169,9)"/><text x="318.00" y="414.50"></text></g><g><title>jumpi (eth/vm/logic/flow.py:42) (21 samples, 0.22%)</title><rect x="317" y="404" width="3" height="15" fill="rgb(232,128,42)"/><text x="320.00" y="414.50"></text></g><g><title>is_valid_opcode (eth/vm/code_stream.py:99) (15 samples, 0.16%)</title><rect x="318" y="420" width="2" height="15" fill="rgb(208,32,13)"/><text x="321.00" y="430.50"></text></g><g><title>mload (eth/vm/logic/memory.py:31) (11 samples, 0.11%)</title><rect x="320" y="404" width="1" height="15" fill="rgb(221,105,13)"/><text x="323.00" y="414.50"></text></g><g><title>mstore (eth/vm/logic/memory.py:11) (27 samples, 0.28%)</title><rect x="322" y="404" width="3" height="15" fill="rgb(241,39,11)"/><text x="325.00" y="414.50"></text></g><g><title>mstore (eth/vm/logic/memory.py:13) (20 samples, 0.21%)</title><rect x="325" y="404" width="2" height="15" fill="rgb(205,172,38)"/><text x="328.00" y="414.50"></text></g><g><title>memory_write (eth/vm/computation.py:239) (19 samples, 0.20%)</title><rect x="325" y="420" width="2" height="15" fill="rgb(245,143,17)"/><text x="328.00" y="430.50"></text></g><g><title>push_XX (eth/vm/logic/stack.py:11) (13 samples, 0.13%)</title><rect x="330" y="404" width="2" height="15" fill="rgb(245,153,12)"/><text x="333.00" y="414.50"></text></g><g><title>push_XX (eth/vm/logic/stack.py:19) (16 samples, 0.17%)</title><rect x="332" y="404" width="2" height="15" fill="rgb(246,198,21)"/><text x="335.00" y="414.50"></text></g><g><title>get (trie/hexary.py:73) (9 samples, 0.09%)</title><rect x="337" y="532" width="1" height="15" fill="rgb(234,69,26)"/><text x="340.00" y="542.50"></text></g><g><title>get_node (trie/hexary.py:284) (16 samples, 0.17%)</title><rect x="338" y="580" width="2" height="15" fill="rgb(230,207,35)"/><text x="341.00" y="590.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (16 samples, 0.17%)</title><rect x="338" y="596" width="2" height="15" fill="rgb(230,208,40)"/><text x="341.00" y="606.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (21 samples, 0.22%)</title><rect x="338" y="564" width="3" height="15" fill="rgb(213,211,2)"/><text x="341.00" y="574.50"></text></g><g><title>get_node (trie/hexary.py:284) (21 samples, 0.22%)</title><rect x="341" y="612" width="2" height="15" fill="rgb(247,177,9)"/><text x="344.00" y="622.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (21 samples, 0.22%)</title><rect x="341" y="628" width="2" height="15" fill="rgb(213,227,39)"/><text x="344.00" y="638.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (32 samples, 0.33%)</title><rect x="341" y="596" width="4" height="15" fill="rgb(247,173,18)"/><text x="344.00" y="606.50"></text></g><g><title>get_node (trie/hexary.py:285) (11 samples, 0.11%)</title><rect x="343" y="612" width="2" height="15" fill="rgb(236,229,54)"/><text x="346.00" y="622.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (11 samples, 0.11%)</title><rect x="343" y="628" width="2" height="15" fill="rgb(212,160,49)"/><text x="346.00" y="638.50"></text></g><g><title>decode (rlp/codec.py:230) (11 samples, 0.11%)</title><rect x="343" y="644" width="2" height="15" fill="rgb(230,175,46)"/><text x="346.00" y="654.50"></text></g><g><title>consume_item (rlp/codec.py:206) (9 samples, 0.09%)</title><rect x="344" y="660" width="1" height="15" fill="rgb(211,206,1)"/><text x="347.00" y="670.50"></text></g><g><title>get_node (trie/hexary.py:284) (17 samples, 0.18%)</title><rect x="345" y="644" width="2" height="15" fill="rgb(213,80,52)"/><text x="348.00" y="654.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (16 samples, 0.17%)</title><rect x="345" y="660" width="2" height="15" fill="rgb(228,127,32)"/><text x="348.00" y="670.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (21 samples, 0.22%)</title><rect x="345" y="628" width="3" height="15" fill="rgb(241,102,21)"/><text x="348.00" y="638.50"></text></g><g><title>get_node (trie/hexary.py:284) (14 samples, 0.14%)</title><rect x="348" y="676" width="2" height="15" fill="rgb(214,223,29)"/><text x="351.00" y="686.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (13 samples, 0.13%)</title><rect x="348" y="692" width="2" height="15" fill="rgb(210,43,20)"/><text x="351.00" y="702.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (23 samples, 0.24%)</title><rect x="348" y="660" width="3" height="15" fill="rgb(207,187,19)"/><text x="351.00" y="670.50"></text></g><g><title>get_node (trie/hexary.py:285) (9 samples, 0.09%)</title><rect x="350" y="676" width="1" height="15" fill="rgb(230,71,33)"/><text x="353.00" y="686.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (9 samples, 0.09%)</title><rect x="351" y="692" width="1" height="15" fill="rgb(234,74,51)"/><text x="354.00" y="702.50"></text></g><g><title>get (eth/db/storage.py:192) (147 samples, 1.52%)</title><rect x="336" y="452" width="18" height="15" fill="rgb(242,11,16)"/><text x="339.00" y="462.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (147 samples, 1.52%)</title><rect x="336" y="468" width="18" height="15" fill="rgb(239,112,24)"/><text x="339.00" y="478.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (146 samples, 1.51%)</title><rect x="336" y="484" width="18" height="15" fill="rgb(213,214,20)"/><text x="339.00" y="494.50"></text></g><g><title>__getitem__ (eth/db/storage.py:88) (143 samples, 1.48%)</title><rect x="337" y="500" width="17" height="15" fill="rgb(225,30,26)"/><text x="340.00" y="510.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (142 samples, 1.47%)</title><rect x="337" y="516" width="17" height="15" fill="rgb(222,21,38)"/><text x="340.00" y="526.50"></text></g><g><title>get (trie/hexary.py:75) (132 samples, 1.37%)</title><rect x="338" y="532" width="16" height="15" fill="rgb(219,72,18)"/><text x="341.00" y="542.50"></text></g><g><title>_get (trie/hexary.py:87) (131 samples, 1.36%)</title><rect x="338" y="548" width="16" height="15" fill="rgb(252,84,7)"/><text x="341.00" y="558.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (109 samples, 1.13%)</title><rect x="341" y="564" width="13" height="15" fill="rgb(213,114,12)"/><text x="344.00" y="574.50"></text></g><g><title>_get (trie/hexary.py:87) (109 samples, 1.13%)</title><rect x="341" y="580" width="13" height="15" fill="rgb(221,105,43)"/><text x="344.00" y="590.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (76 samples, 0.79%)</title><rect x="345" y="596" width="9" height="15" fill="rgb(228,174,29)"/><text x="348.00" y="606.50"></text></g><g><title>_get (trie/hexary.py:87) (73 samples, 0.76%)</title><rect x="345" y="612" width="9" height="15" fill="rgb(249,44,20)"/><text x="348.00" y="622.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (52 samples, 0.54%)</title><rect x="348" y="628" width="6" height="15" fill="rgb(254,7,26)"/><text x="351.00" y="638.50"></text></g><g><title>_get (trie/hexary.py:87) (48 samples, 0.50%)</title><rect x="348" y="644" width="6" height="15" fill="rgb(230,113,22)"/><text x="351.00" y="654.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (25 samples, 0.26%)</title><rect x="351" y="660" width="3" height="15" fill="rgb(209,35,20)"/><text x="354.00" y="670.50"></text></g><g><title>_get (trie/hexary.py:87) (24 samples, 0.25%)</title><rect x="351" y="676" width="3" height="15" fill="rgb(235,183,41)"/><text x="354.00" y="686.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (15 samples, 0.16%)</title><rect x="352" y="692" width="2" height="15" fill="rgb(218,206,34)"/><text x="355.00" y="702.50"></text></g><g><title>_get (trie/hexary.py:87) (12 samples, 0.12%)</title><rect x="353" y="708" width="1" height="15" fill="rgb(253,211,32)"/><text x="356.00" y="718.50"></text></g><g><title>sload (eth/vm/logic/storage.py:60) (161 samples, 1.67%)</title><rect x="335" y="404" width="20" height="15" fill="rgb(218,6,2)"/><text x="338.00" y="414.50"></text></g><g><title>get_storage (eth/vm/state.py:107) (161 samples, 1.67%)</title><rect x="335" y="420" width="20" height="15" fill="rgb(219,49,28)"/><text x="338.00" y="430.50"></text></g><g><title>get_storage (eth/db/account.py:146) (154 samples, 1.59%)</title><rect x="336" y="436" width="19" height="15" fill="rgb(245,10,27)"/><text x="339.00" y="446.50"></text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:77) (1,324 samples, 13.71%)</title><rect x="195" y="356" width="162" height="15" fill="rgb(209,6,51)"/><text x="198.00" y="366.50">apply_message (eth/v..</text></g><g><title>apply_computation (eth/vm/computation.py:554) (1,267 samples, 13.12%)</title><rect x="202" y="372" width="155" height="15" fill="rgb(224,193,42)"/><text x="205.00" y="382.50">apply_computation (..</text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:55) (467 samples, 4.84%)</title><rect x="300" y="388" width="57" height="15" fill="rgb(244,143,28)"/><text x="303.00" y="398.50">wrappe..</text></g><g><title>apply_child_computation (eth/vm/computation.py:366) (1,357 samples, 14.05%)</title><rect x="193" y="324" width="165" height="15" fill="rgb(209,219,19)"/><text x="196.00" y="334.50">apply_child_computati..</text></g><g><title>generate_child_computation (eth/vm/computation.py:381) (1,357 samples, 14.05%)</title><rect x="193" y="340" width="165" height="15" fill="rgb(247,77,12)"/><text x="196.00" y="350.50">generate_child_comput..</text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:83) (13 samples, 0.13%)</title><rect x="357" y="356" width="1" height="15" fill="rgb(211,144,38)"/><text x="360.00" y="366.50"></text></g><g><title>commit (eth/vm/state.py:176) (13 samples, 0.13%)</title><rect x="357" y="372" width="1" height="15" fill="rgb(208,166,6)"/><text x="360.00" y="382.50"></text></g><g><title>commit (eth/db/account.py:371) (12 samples, 0.12%)</title><rect x="357" y="388" width="1" height="15" fill="rgb(247,205,43)"/><text x="360.00" y="398.50"></text></g><g><title>__call__ (eth/vm/logic/call.py:135) (1,358 samples, 14.06%)</title><rect x="193" y="308" width="166" height="15" fill="rgb(254,101,52)"/><text x="196.00" y="318.50">__call__ (eth/vm/logi..</text></g><g><title>compute_msg_extra_gas (eth/vm/logic/call.py:368) (14 samples, 0.14%)</title><rect x="359" y="340" width="2" height="15" fill="rgb(205,153,40)"/><text x="362.00" y="350.50"></text></g><g><title>account_exists (eth/vm/state.py:152) (14 samples, 0.14%)</title><rect x="359" y="356" width="2" height="15" fill="rgb(236,40,54)"/><text x="362.00" y="366.50"></text></g><g><title>account_exists (eth/db/account.py:304) (14 samples, 0.14%)</title><rect x="359" y="372" width="2" height="15" fill="rgb(235,194,40)"/><text x="362.00" y="382.50"></text></g><g><title>_get_encoded_account (eth/db/account.py:323) (14 samples, 0.14%)</title><rect x="359" y="388" width="2" height="15" fill="rgb(237,184,13)"/><text x="362.00" y="398.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (13 samples, 0.13%)</title><rect x="359" y="404" width="2" height="15" fill="rgb(212,71,53)"/><text x="362.00" y="414.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (13 samples, 0.13%)</title><rect x="359" y="420" width="2" height="15" fill="rgb(248,153,16)"/><text x="362.00" y="430.50"></text></g><g><title>__getitem__ (eth/db/keymap.py:28) (13 samples, 0.13%)</title><rect x="359" y="436" width="2" height="15" fill="rgb(247,20,11)"/><text x="362.00" y="446.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (13 samples, 0.13%)</title><rect x="359" y="452" width="2" height="15" fill="rgb(252,49,35)"/><text x="362.00" y="462.50"></text></g><g><title>get (trie/hexary.py:75) (12 samples, 0.12%)</title><rect x="359" y="468" width="2" height="15" fill="rgb(212,188,46)"/><text x="362.00" y="478.50"></text></g><g><title>_get (trie/hexary.py:87) (12 samples, 0.12%)</title><rect x="359" y="484" width="2" height="15" fill="rgb(231,125,0)"/><text x="362.00" y="494.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (12 samples, 0.12%)</title><rect x="359" y="500" width="2" height="15" fill="rgb(228,138,44)"/><text x="362.00" y="510.50"></text></g><g><title>_get (trie/hexary.py:87) (12 samples, 0.12%)</title><rect x="359" y="516" width="2" height="15" fill="rgb(212,13,45)"/><text x="362.00" y="526.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (11 samples, 0.11%)</title><rect x="360" y="532" width="1" height="15" fill="rgb(224,53,51)"/><text x="363.00" y="542.50"></text></g><g><title>_get (trie/hexary.py:87) (11 samples, 0.11%)</title><rect x="360" y="548" width="1" height="15" fill="rgb(237,95,12)"/><text x="363.00" y="558.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (11 samples, 0.11%)</title><rect x="360" y="564" width="1" height="15" fill="rgb(251,49,34)"/><text x="363.00" y="574.50"></text></g><g><title>_get (trie/hexary.py:87) (11 samples, 0.11%)</title><rect x="360" y="580" width="1" height="15" fill="rgb(211,13,41)"/><text x="363.00" y="590.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (9 samples, 0.09%)</title><rect x="360" y="596" width="1" height="15" fill="rgb(238,202,9)"/><text x="363.00" y="606.50"></text></g><g><title>_get (trie/hexary.py:87) (9 samples, 0.09%)</title><rect x="360" y="612" width="1" height="15" fill="rgb(216,16,52)"/><text x="363.00" y="622.50"></text></g><g><title>compute_msg_gas (eth/vm/logic/call.py:285) (16 samples, 0.17%)</title><rect x="359" y="324" width="2" height="15" fill="rgb(245,21,15)"/><text x="362.00" y="334.50"></text></g><g><title>__call__ (eth/vm/logic/call.py:86) (17 samples, 0.18%)</title><rect x="359" y="308" width="2" height="15" fill="rgb(217,134,44)"/><text x="362.00" y="318.50"></text></g><g><title>get_node (trie/hexary.py:284) (9 samples, 0.09%)</title><rect x="363" y="628" width="1" height="15" fill="rgb(242,107,0)"/><text x="366.00" y="638.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (9 samples, 0.09%)</title><rect x="363" y="644" width="1" height="15" fill="rgb(227,22,40)"/><text x="366.00" y="654.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (11 samples, 0.11%)</title><rect x="363" y="612" width="2" height="15" fill="rgb(247,52,17)"/><text x="366.00" y="622.50"></text></g><g><title>get (eth/db/storage.py:192) (28 samples, 0.29%)</title><rect x="361" y="372" width="4" height="15" fill="rgb(219,164,50)"/><text x="364.00" y="382.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (28 samples, 0.29%)</title><rect x="361" y="388" width="4" height="15" fill="rgb(228,118,25)"/><text x="364.00" y="398.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (28 samples, 0.29%)</title><rect x="361" y="404" width="4" height="15" fill="rgb(210,216,52)"/><text x="364.00" y="414.50"></text></g><g><title>__getitem__ (eth/db/storage.py:88) (28 samples, 0.29%)</title><rect x="361" y="420" width="4" height="15" fill="rgb(253,96,45)"/><text x="364.00" y="430.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (28 samples, 0.29%)</title><rect x="361" y="436" width="4" height="15" fill="rgb(220,58,31)"/><text x="364.00" y="446.50"></text></g><g><title>get (trie/hexary.py:75) (28 samples, 0.29%)</title><rect x="361" y="452" width="4" height="15" fill="rgb(247,107,7)"/><text x="364.00" y="462.50"></text></g><g><title>_get (trie/hexary.py:87) (28 samples, 0.29%)</title><rect x="361" y="468" width="4" height="15" fill="rgb(230,186,47)"/><text x="364.00" y="478.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (23 samples, 0.24%)</title><rect x="362" y="484" width="3" height="15" fill="rgb(208,175,12)"/><text x="365.00" y="494.50"></text></g><g><title>_get (trie/hexary.py:87) (23 samples, 0.24%)</title><rect x="362" y="500" width="3" height="15" fill="rgb(212,197,40)"/><text x="365.00" y="510.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (21 samples, 0.22%)</title><rect x="362" y="516" width="3" height="15" fill="rgb(210,33,17)"/><text x="365.00" y="526.50"></text></g><g><title>_get (trie/hexary.py:87) (21 samples, 0.22%)</title><rect x="362" y="532" width="3" height="15" fill="rgb(229,3,19)"/><text x="365.00" y="542.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (18 samples, 0.19%)</title><rect x="363" y="548" width="2" height="15" fill="rgb(248,53,6)"/><text x="366.00" y="558.50"></text></g><g><title>_get (trie/hexary.py:87) (18 samples, 0.19%)</title><rect x="363" y="564" width="2" height="15" fill="rgb(238,48,24)"/><text x="366.00" y="574.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (12 samples, 0.12%)</title><rect x="363" y="580" width="2" height="15" fill="rgb(210,91,32)"/><text x="366.00" y="590.50"></text></g><g><title>_get (trie/hexary.py:87) (12 samples, 0.12%)</title><rect x="363" y="596" width="2" height="15" fill="rgb(207,126,31)"/><text x="366.00" y="606.50"></text></g><g><title>sstore (eth/vm/logic/storage.py:16) (29 samples, 0.30%)</title><rect x="361" y="324" width="4" height="15" fill="rgb(237,161,8)"/><text x="364.00" y="334.50"></text></g><g><title>get_storage (eth/vm/state.py:107) (29 samples, 0.30%)</title><rect x="361" y="340" width="4" height="15" fill="rgb(207,118,10)"/><text x="364.00" y="350.50"></text></g><g><title>get_storage (eth/db/account.py:146) (29 samples, 0.30%)</title><rect x="361" y="356" width="4" height="15" fill="rgb(210,17,35)"/><text x="364.00" y="366.50"></text></g><g><title>inner (eth/vm/forks/byzantium/opcodes.py:42) (39 samples, 0.40%)</title><rect x="361" y="308" width="5" height="15" fill="rgb(224,12,14)"/><text x="364.00" y="318.50"></text></g><g><title>consume_gas (eth/vm/gas_meter.py:66) (12 samples, 0.12%)</title><rect x="370" y="340" width="2" height="15" fill="rgb(249,54,23)"/><text x="373.00" y="350.50"></text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:53) (52 samples, 0.54%)</title><rect x="366" y="308" width="7" height="15" fill="rgb(250,131,17)"/><text x="369.00" y="318.50"></text></g><g><title>consume_gas (eth/vm/computation.py:254) (41 samples, 0.42%)</title><rect x="368" y="324" width="5" height="15" fill="rgb(218,168,6)"/><text x="371.00" y="334.50"></text></g><g><title>add (eth/vm/logic/arithmetic.py:20) (13 samples, 0.13%)</title><rect x="376" y="324" width="2" height="15" fill="rgb(209,40,49)"/><text x="379.00" y="334.50"></text></g><g><title>dup_XX (eth/vm/logic/duplication.py:10) (14 samples, 0.14%)</title><rect x="380" y="324" width="2" height="15" fill="rgb(242,229,16)"/><text x="383.00" y="334.50"></text></g><g><title>stack_dup (eth/vm/computation.py:290) (13 samples, 0.13%)</title><rect x="380" y="340" width="2" height="15" fill="rgb(230,116,9)"/><text x="383.00" y="350.50"></text></g><g><title>_get_account (eth/db/account.py:334) (22 samples, 0.23%)</title><rect x="383" y="388" width="3" height="15" fill="rgb(224,13,11)"/><text x="386.00" y="398.50"></text></g><g><title>_get_encoded_account (eth/db/account.py:323) (22 samples, 0.23%)</title><rect x="383" y="404" width="3" height="15" fill="rgb(254,223,15)"/><text x="386.00" y="414.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (22 samples, 0.23%)</title><rect x="383" y="420" width="3" height="15" fill="rgb(253,222,40)"/><text x="386.00" y="430.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (21 samples, 0.22%)</title><rect x="384" y="436" width="2" height="15" fill="rgb(216,57,4)"/><text x="387.00" y="446.50"></text></g><g><title>__getitem__ (eth/db/keymap.py:28) (21 samples, 0.22%)</title><rect x="384" y="452" width="2" height="15" fill="rgb(254,7,8)"/><text x="387.00" y="462.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (21 samples, 0.22%)</title><rect x="384" y="468" width="2" height="15" fill="rgb(227,153,0)"/><text x="387.00" y="478.50"></text></g><g><title>get (trie/hexary.py:75) (18 samples, 0.19%)</title><rect x="384" y="484" width="2" height="15" fill="rgb(236,217,25)"/><text x="387.00" y="494.50"></text></g><g><title>_get (trie/hexary.py:87) (18 samples, 0.19%)</title><rect x="384" y="500" width="2" height="15" fill="rgb(220,10,11)"/><text x="387.00" y="510.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (14 samples, 0.14%)</title><rect x="384" y="516" width="2" height="15" fill="rgb(230,122,32)"/><text x="387.00" y="526.50"></text></g><g><title>_get (trie/hexary.py:87) (13 samples, 0.13%)</title><rect x="385" y="532" width="1" height="15" fill="rgb(238,222,31)"/><text x="388.00" y="542.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (12 samples, 0.12%)</title><rect x="385" y="548" width="1" height="15" fill="rgb(213,4,36)"/><text x="388.00" y="558.50"></text></g><g><title>_get (trie/hexary.py:87) (12 samples, 0.12%)</title><rect x="385" y="564" width="1" height="15" fill="rgb(239,228,21)"/><text x="388.00" y="574.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (12 samples, 0.12%)</title><rect x="385" y="580" width="1" height="15" fill="rgb(206,162,29)"/><text x="388.00" y="590.50"></text></g><g><title>_get (trie/hexary.py:87) (12 samples, 0.12%)</title><rect x="385" y="596" width="1" height="15" fill="rgb(231,63,41)"/><text x="388.00" y="606.50"></text></g><g><title>get_code (eth/db/account.py:253) (29 samples, 0.30%)</title><rect x="383" y="356" width="4" height="15" fill="rgb(223,115,22)"/><text x="386.00" y="366.50"></text></g><g><title>get_code_hash (eth/db/account.py:275) (29 samples, 0.30%)</title><rect x="383" y="372" width="4" height="15" fill="rgb(221,227,51)"/><text x="386.00" y="382.50"></text></g><g><title>extcodesize (eth/vm/logic/context.py:131) (43 samples, 0.45%)</title><rect x="383" y="324" width="6" height="15" fill="rgb(210,79,14)"/><text x="386.00" y="334.50"></text></g><g><title>get_code (eth/vm/state.py:137) (43 samples, 0.45%)</title><rect x="383" y="340" width="6" height="15" fill="rgb(235,154,54)"/><text x="386.00" y="350.50"></text></g><g><title>get_code (eth/db/account.py:258) (14 samples, 0.14%)</title><rect x="387" y="356" width="2" height="15" fill="rgb(232,126,33)"/><text x="390.00" y="366.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (12 samples, 0.12%)</title><rect x="387" y="372" width="2" height="15" fill="rgb(246,118,24)"/><text x="390.00" y="382.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (12 samples, 0.12%)</title><rect x="387" y="388" width="2" height="15" fill="rgb(232,168,38)"/><text x="390.00" y="398.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (11 samples, 0.11%)</title><rect x="387" y="404" width="2" height="15" fill="rgb(210,149,18)"/><text x="390.00" y="414.50"></text></g><g><title>inner (eth/vm/forks/byzantium/opcodes.py:42) (9 samples, 0.09%)</title><rect x="389" y="324" width="1" height="15" fill="rgb(231,57,49)"/><text x="392.00" y="334.50"></text></g><g><title>jump (eth/vm/logic/flow.py:27) (11 samples, 0.11%)</title><rect x="392" y="324" width="1" height="15" fill="rgb(217,98,24)"/><text x="395.00" y="334.50"></text></g><g><title>jumpi (eth/vm/logic/flow.py:32) (10 samples, 0.10%)</title><rect x="393" y="324" width="1" height="15" fill="rgb(239,143,44)"/><text x="396.00" y="334.50"></text></g><g><title>jumpi (eth/vm/logic/flow.py:42) (17 samples, 0.18%)</title><rect x="394" y="324" width="3" height="15" fill="rgb(225,71,6)"/><text x="397.00" y="334.50"></text></g><g><title>mstore (eth/vm/logic/memory.py:11) (18 samples, 0.19%)</title><rect x="399" y="324" width="2" height="15" fill="rgb(236,137,19)"/><text x="402.00" y="334.50"></text></g><g><title>mstore (eth/vm/logic/memory.py:13) (16 samples, 0.17%)</title><rect x="401" y="324" width="2" height="15" fill="rgb(251,223,17)"/><text x="404.00" y="334.50"></text></g><g><title>memory_write (eth/vm/computation.py:239) (16 samples, 0.17%)</title><rect x="401" y="340" width="2" height="15" fill="rgb(249,58,52)"/><text x="404.00" y="350.50"></text></g><g><title>push_XX (eth/vm/logic/stack.py:11) (13 samples, 0.13%)</title><rect x="405" y="324" width="1" height="15" fill="rgb(216,229,5)"/><text x="408.00" y="334.50"></text></g><g><title>push_XX (eth/vm/logic/stack.py:19) (12 samples, 0.12%)</title><rect x="407" y="324" width="1" height="15" fill="rgb(243,45,20)"/><text x="410.00" y="334.50"></text></g><g><title>get (trie/hexary.py:73) (21 samples, 0.22%)</title><rect x="411" y="452" width="3" height="15" fill="rgb(222,125,35)"/><text x="414.00" y="462.50"></text></g><g><title>get_node (trie/hexary.py:285) (13 samples, 0.13%)</title><rect x="412" y="468" width="2" height="15" fill="rgb(250,225,12)"/><text x="415.00" y="478.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (12 samples, 0.12%)</title><rect x="412" y="484" width="2" height="15" fill="rgb(238,196,9)"/><text x="415.00" y="494.50"></text></g><g><title>decode (rlp/codec.py:230) (10 samples, 0.10%)</title><rect x="412" y="500" width="2" height="15" fill="rgb(248,146,15)"/><text x="415.00" y="510.50"></text></g><g><title>consume_item (rlp/codec.py:206) (9 samples, 0.09%)</title><rect x="412" y="516" width="2" height="15" fill="rgb(206,130,43)"/><text x="415.00" y="526.50"></text></g><g><title>get_node (trie/hexary.py:284) (14 samples, 0.14%)</title><rect x="414" y="500" width="1" height="15" fill="rgb(205,34,15)"/><text x="417.00" y="510.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (14 samples, 0.14%)</title><rect x="414" y="516" width="1" height="15" fill="rgb(238,18,25)"/><text x="417.00" y="526.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (27 samples, 0.28%)</title><rect x="414" y="484" width="3" height="15" fill="rgb(238,196,39)"/><text x="417.00" y="494.50"></text></g><g><title>get_node (trie/hexary.py:285) (13 samples, 0.13%)</title><rect x="415" y="500" width="2" height="15" fill="rgb(253,17,15)"/><text x="418.00" y="510.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (13 samples, 0.13%)</title><rect x="415" y="516" width="2" height="15" fill="rgb(237,11,31)"/><text x="418.00" y="526.50"></text></g><g><title>decode (rlp/codec.py:230) (11 samples, 0.11%)</title><rect x="416" y="532" width="1" height="15" fill="rgb(206,130,45)"/><text x="419.00" y="542.50"></text></g><g><title>consume_item (rlp/codec.py:206) (9 samples, 0.09%)</title><rect x="416" y="548" width="1" height="15" fill="rgb(251,218,14)"/><text x="419.00" y="558.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (44 samples, 0.46%)</title><rect x="417" y="548" width="6" height="15" fill="rgb(237,77,13)"/><text x="420.00" y="558.50"></text></g><g><title>get_node (trie/hexary.py:284) (45 samples, 0.47%)</title><rect x="417" y="532" width="6" height="15" fill="rgb(214,191,44)"/><text x="420.00" y="542.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (56 samples, 0.58%)</title><rect x="417" y="516" width="7" height="15" fill="rgb(252,2,12)"/><text x="420.00" y="526.50"></text></g><g><title>get_node (trie/hexary.py:285) (11 samples, 0.11%)</title><rect x="423" y="532" width="1" height="15" fill="rgb(219,227,31)"/><text x="426.00" y="542.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (11 samples, 0.11%)</title><rect x="423" y="548" width="1" height="15" fill="rgb(220,208,28)"/><text x="426.00" y="558.50"></text></g><g><title>decode (rlp/codec.py:230) (9 samples, 0.09%)</title><rect x="423" y="564" width="1" height="15" fill="rgb(249,228,17)"/><text x="426.00" y="574.50"></text></g><g><title>consume_item (rlp/codec.py:206) (9 samples, 0.09%)</title><rect x="423" y="580" width="1" height="15" fill="rgb(235,214,48)"/><text x="426.00" y="590.50"></text></g><g><title>get_node (trie/hexary.py:284) (50 samples, 0.52%)</title><rect x="425" y="564" width="6" height="15" fill="rgb(213,88,11)"/><text x="428.00" y="574.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (50 samples, 0.52%)</title><rect x="425" y="580" width="6" height="15" fill="rgb(206,167,17)"/><text x="428.00" y="590.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (72 samples, 0.75%)</title><rect x="425" y="548" width="9" height="15" fill="rgb(219,11,6)"/><text x="428.00" y="558.50"></text></g><g><title>get_node (trie/hexary.py:285) (21 samples, 0.22%)</title><rect x="431" y="564" width="3" height="15" fill="rgb(227,75,49)"/><text x="434.00" y="574.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (15 samples, 0.16%)</title><rect x="432" y="580" width="2" height="15" fill="rgb(244,179,28)"/><text x="435.00" y="590.50"></text></g><g><title>decode (rlp/codec.py:230) (15 samples, 0.16%)</title><rect x="432" y="596" width="2" height="15" fill="rgb(253,146,5)"/><text x="435.00" y="606.50"></text></g><g><title>consume_item (rlp/codec.py:206) (10 samples, 0.10%)</title><rect x="432" y="612" width="2" height="15" fill="rgb(253,89,18)"/><text x="435.00" y="622.50"></text></g><g><title>get_node (trie/hexary.py:284) (38 samples, 0.39%)</title><rect x="434" y="596" width="5" height="15" fill="rgb(239,205,10)"/><text x="437.00" y="606.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (38 samples, 0.39%)</title><rect x="434" y="612" width="5" height="15" fill="rgb(215,175,18)"/><text x="437.00" y="622.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (61 samples, 0.63%)</title><rect x="434" y="580" width="7" height="15" fill="rgb(230,147,21)"/><text x="437.00" y="590.50"></text></g><g><title>get_node (trie/hexary.py:285) (21 samples, 0.22%)</title><rect x="439" y="596" width="2" height="15" fill="rgb(240,177,45)"/><text x="442.00" y="606.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (19 samples, 0.20%)</title><rect x="439" y="612" width="2" height="15" fill="rgb(225,100,52)"/><text x="442.00" y="622.50"></text></g><g><title>decode (rlp/codec.py:230) (16 samples, 0.17%)</title><rect x="439" y="628" width="2" height="15" fill="rgb(236,16,53)"/><text x="442.00" y="638.50"></text></g><g><title>consume_item (rlp/codec.py:206) (12 samples, 0.12%)</title><rect x="440" y="644" width="1" height="15" fill="rgb(227,11,47)"/><text x="443.00" y="654.50"></text></g><g><title>get_node (trie/hexary.py:284) (25 samples, 0.26%)</title><rect x="443" y="628" width="3" height="15" fill="rgb(216,146,36)"/><text x="446.00" y="638.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (24 samples, 0.25%)</title><rect x="443" y="644" width="3" height="15" fill="rgb(215,10,16)"/><text x="446.00" y="654.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (27 samples, 0.28%)</title><rect x="443" y="612" width="3" height="15" fill="rgb(229,51,44)"/><text x="446.00" y="622.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (310 samples, 3.21%)</title><rect x="409" y="404" width="38" height="15" fill="rgb(240,97,37)"/><text x="412.00" y="414.50">__g..</text></g><g><title>__getitem__ (eth/db/storage.py:88) (303 samples, 3.14%)</title><rect x="410" y="420" width="37" height="15" fill="rgb(241,157,13)"/><text x="413.00" y="430.50">__g..</text></g><g><title>__getitem__ (trie/hexary.py:515) (303 samples, 3.14%)</title><rect x="410" y="436" width="37" height="15" fill="rgb(234,89,52)"/><text x="413.00" y="446.50">__g..</text></g><g><title>get (trie/hexary.py:75) (277 samples, 2.87%)</title><rect x="414" y="452" width="33" height="15" fill="rgb(224,78,13)"/><text x="417.00" y="462.50">ge..</text></g><g><title>_get (trie/hexary.py:87) (276 samples, 2.86%)</title><rect x="414" y="468" width="33" height="15" fill="rgb(213,211,4)"/><text x="417.00" y="478.50">_g..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (249 samples, 2.58%)</title><rect x="417" y="484" width="30" height="15" fill="rgb(238,41,28)"/><text x="420.00" y="494.50">_g..</text></g><g><title>_get (trie/hexary.py:87) (248 samples, 2.57%)</title><rect x="417" y="500" width="30" height="15" fill="rgb(233,151,6)"/><text x="420.00" y="510.50">_g..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (191 samples, 1.98%)</title><rect x="424" y="516" width="23" height="15" fill="rgb(237,95,25)"/><text x="427.00" y="526.50">_..</text></g><g><title>_get (trie/hexary.py:87) (186 samples, 1.93%)</title><rect x="425" y="532" width="22" height="15" fill="rgb(230,171,10)"/><text x="428.00" y="542.50">_..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (113 samples, 1.17%)</title><rect x="434" y="548" width="13" height="15" fill="rgb(225,172,39)"/><text x="437.00" y="558.50"></text></g><g><title>_get (trie/hexary.py:87) (112 samples, 1.16%)</title><rect x="434" y="564" width="13" height="15" fill="rgb(230,161,28)"/><text x="437.00" y="574.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (51 samples, 0.53%)</title><rect x="441" y="580" width="6" height="15" fill="rgb(221,1,37)"/><text x="444.00" y="590.50"></text></g><g><title>_get (trie/hexary.py:87) (39 samples, 0.40%)</title><rect x="443" y="596" width="4" height="15" fill="rgb(209,133,40)"/><text x="446.00" y="606.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (12 samples, 0.12%)</title><rect x="446" y="612" width="1" height="15" fill="rgb(210,179,12)"/><text x="449.00" y="622.50"></text></g><g><title>get (eth/db/storage.py:192) (311 samples, 3.22%)</title><rect x="409" y="372" width="38" height="15" fill="rgb(245,122,19)"/><text x="412.00" y="382.50">get..</text></g><g><title>__getitem__ (eth/db/journal.py:336) (311 samples, 3.22%)</title><rect x="409" y="388" width="38" height="15" fill="rgb(211,169,21)"/><text x="412.00" y="398.50">__g..</text></g><g><title>sload (eth/vm/logic/storage.py:60) (317 samples, 3.28%)</title><rect x="409" y="324" width="39" height="15" fill="rgb(238,154,26)"/><text x="412.00" y="334.50">slo..</text></g><g><title>get_storage (eth/vm/state.py:107) (317 samples, 3.28%)</title><rect x="409" y="340" width="39" height="15" fill="rgb(208,34,38)"/><text x="412.00" y="350.50">get..</text></g><g><title>get_storage (eth/db/account.py:146) (316 samples, 3.27%)</title><rect x="409" y="356" width="39" height="15" fill="rgb(222,156,20)"/><text x="412.00" y="366.50">get..</text></g><g><title>apply_computation (eth/vm/computation.py:554) (2,146 samples, 22.22%)</title><rect x="187" y="292" width="263" height="15" fill="rgb(225,95,23)"/><text x="190.00" y="302.50">apply_computation (eth/vm/computati..</text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:55) (628 samples, 6.50%)</title><rect x="373" y="308" width="77" height="15" fill="rgb(245,113,15)"/><text x="376.00" y="318.50">wrapped_..</text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:77) (2,191 samples, 22.69%)</title><rect x="182" y="276" width="268" height="15" fill="rgb(253,76,51)"/><text x="185.00" y="286.50">apply_message (eth/vm/forks/frontie..</text></g><g><title>commit (eth/db/storage.py:233) (12 samples, 0.12%)</title><rect x="450" y="324" width="2" height="15" fill="rgb(243,116,25)"/><text x="453.00" y="334.50"></text></g><g><title>has_checkpoint (eth/db/journal.py:389) (10 samples, 0.10%)</title><rect x="450" y="340" width="2" height="15" fill="rgb(245,221,28)"/><text x="453.00" y="350.50"></text></g><g><title>__call__ (eth/vm/logic/call.py:135) (2,251 samples, 23.31%)</title><rect x="178" y="228" width="275" height="15" fill="rgb(221,204,10)"/><text x="181.00" y="238.50">__call__ (eth/vm/logic/call.py:135)</text></g><g><title>apply_child_computation (eth/vm/computation.py:366) (2,251 samples, 23.31%)</title><rect x="178" y="244" width="275" height="15" fill="rgb(209,25,21)"/><text x="181.00" y="254.50">apply_child_computation (eth/vm/comp..</text></g><g><title>generate_child_computation (eth/vm/computation.py:381) (2,251 samples, 23.31%)</title><rect x="178" y="260" width="275" height="15" fill="rgb(233,99,54)"/><text x="181.00" y="270.50">generate_child_computation (eth/vm/c..</text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:83) (30 samples, 0.31%)</title><rect x="450" y="276" width="3" height="15" fill="rgb(238,126,29)"/><text x="453.00" y="286.50"></text></g><g><title>commit (eth/vm/state.py:176) (30 samples, 0.31%)</title><rect x="450" y="292" width="3" height="15" fill="rgb(254,120,50)"/><text x="453.00" y="302.50"></text></g><g><title>commit (eth/db/account.py:371) (28 samples, 0.29%)</title><rect x="450" y="308" width="3" height="15" fill="rgb(240,190,4)"/><text x="453.00" y="318.50"></text></g><g><title>commit (eth/db/storage.py:234) (15 samples, 0.16%)</title><rect x="452" y="324" width="1" height="15" fill="rgb(222,214,35)"/><text x="455.00" y="334.50"></text></g><g><title>account_exists (eth/db/account.py:304) (18 samples, 0.19%)</title><rect x="454" y="292" width="3" height="15" fill="rgb(233,178,18)"/><text x="457.00" y="302.50"></text></g><g><title>_get_encoded_account (eth/db/account.py:323) (18 samples, 0.19%)</title><rect x="454" y="308" width="3" height="15" fill="rgb(229,229,8)"/><text x="457.00" y="318.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (18 samples, 0.19%)</title><rect x="454" y="324" width="3" height="15" fill="rgb(247,141,37)"/><text x="457.00" y="334.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (18 samples, 0.19%)</title><rect x="454" y="340" width="3" height="15" fill="rgb(242,172,9)"/><text x="457.00" y="350.50"></text></g><g><title>__getitem__ (eth/db/keymap.py:28) (18 samples, 0.19%)</title><rect x="454" y="356" width="3" height="15" fill="rgb(246,157,6)"/><text x="457.00" y="366.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (18 samples, 0.19%)</title><rect x="454" y="372" width="3" height="15" fill="rgb(246,138,21)"/><text x="457.00" y="382.50"></text></g><g><title>get (trie/hexary.py:75) (18 samples, 0.19%)</title><rect x="454" y="388" width="3" height="15" fill="rgb(242,135,40)"/><text x="457.00" y="398.50"></text></g><g><title>_get (trie/hexary.py:87) (18 samples, 0.19%)</title><rect x="454" y="404" width="3" height="15" fill="rgb(229,104,4)"/><text x="457.00" y="414.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (16 samples, 0.17%)</title><rect x="455" y="420" width="2" height="15" fill="rgb(236,191,7)"/><text x="458.00" y="430.50"></text></g><g><title>_get (trie/hexary.py:87) (16 samples, 0.17%)</title><rect x="455" y="436" width="2" height="15" fill="rgb(214,202,0)"/><text x="458.00" y="446.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (16 samples, 0.17%)</title><rect x="455" y="452" width="2" height="15" fill="rgb(248,47,29)"/><text x="458.00" y="462.50"></text></g><g><title>_get (trie/hexary.py:87) (16 samples, 0.17%)</title><rect x="455" y="468" width="2" height="15" fill="rgb(230,107,35)"/><text x="458.00" y="478.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (14 samples, 0.14%)</title><rect x="455" y="484" width="2" height="15" fill="rgb(208,112,19)"/><text x="458.00" y="494.50"></text></g><g><title>_get (trie/hexary.py:87) (14 samples, 0.14%)</title><rect x="455" y="500" width="2" height="15" fill="rgb(224,220,0)"/><text x="458.00" y="510.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (13 samples, 0.13%)</title><rect x="455" y="516" width="2" height="15" fill="rgb(247,162,16)"/><text x="458.00" y="526.50"></text></g><g><title>_get (trie/hexary.py:87) (13 samples, 0.13%)</title><rect x="455" y="532" width="2" height="15" fill="rgb(214,69,52)"/><text x="458.00" y="542.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (9 samples, 0.09%)</title><rect x="455" y="548" width="2" height="15" fill="rgb(247,54,8)"/><text x="458.00" y="558.50"></text></g><g><title>_get (trie/hexary.py:87) (9 samples, 0.09%)</title><rect x="455" y="564" width="2" height="15" fill="rgb(210,146,8)"/><text x="458.00" y="574.50"></text></g><g><title>compute_msg_extra_gas (eth/vm/logic/call.py:368) (19 samples, 0.20%)</title><rect x="454" y="260" width="3" height="15" fill="rgb(225,219,13)"/><text x="457.00" y="270.50"></text></g><g><title>account_exists (eth/vm/state.py:152) (19 samples, 0.20%)</title><rect x="454" y="276" width="3" height="15" fill="rgb(253,153,50)"/><text x="457.00" y="286.50"></text></g><g><title>__call__ (eth/vm/logic/call.py:86) (29 samples, 0.30%)</title><rect x="454" y="228" width="4" height="15" fill="rgb(230,201,37)"/><text x="457.00" y="238.50"></text></g><g><title>compute_msg_gas (eth/vm/logic/call.py:285) (27 samples, 0.28%)</title><rect x="454" y="244" width="4" height="15" fill="rgb(243,58,9)"/><text x="457.00" y="254.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (10 samples, 0.10%)</title><rect x="461" y="468" width="2" height="15" fill="rgb(237,190,37)"/><text x="464.00" y="478.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (34 samples, 0.35%)</title><rect x="459" y="324" width="5" height="15" fill="rgb(244,110,19)"/><text x="462.00" y="334.50"></text></g><g><title>__getitem__ (eth/db/storage.py:88) (34 samples, 0.35%)</title><rect x="459" y="340" width="5" height="15" fill="rgb(238,182,45)"/><text x="462.00" y="350.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (34 samples, 0.35%)</title><rect x="459" y="356" width="5" height="15" fill="rgb(230,93,28)"/><text x="462.00" y="366.50"></text></g><g><title>get (trie/hexary.py:75) (30 samples, 0.31%)</title><rect x="460" y="372" width="4" height="15" fill="rgb(211,139,5)"/><text x="463.00" y="382.50"></text></g><g><title>_get (trie/hexary.py:87) (30 samples, 0.31%)</title><rect x="460" y="388" width="4" height="15" fill="rgb(235,111,36)"/><text x="463.00" y="398.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (27 samples, 0.28%)</title><rect x="460" y="404" width="4" height="15" fill="rgb(211,108,45)"/><text x="463.00" y="414.50"></text></g><g><title>_get (trie/hexary.py:87) (27 samples, 0.28%)</title><rect x="460" y="420" width="4" height="15" fill="rgb(246,160,3)"/><text x="463.00" y="430.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (20 samples, 0.21%)</title><rect x="461" y="436" width="3" height="15" fill="rgb(213,129,44)"/><text x="464.00" y="446.50"></text></g><g><title>_get (trie/hexary.py:87) (19 samples, 0.20%)</title><rect x="461" y="452" width="3" height="15" fill="rgb(223,36,3)"/><text x="464.00" y="462.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (9 samples, 0.09%)</title><rect x="463" y="468" width="1" height="15" fill="rgb(224,160,45)"/><text x="466.00" y="478.50"></text></g><g><title>get (eth/db/storage.py:192) (37 samples, 0.38%)</title><rect x="459" y="292" width="5" height="15" fill="rgb(226,101,24)"/><text x="462.00" y="302.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (36 samples, 0.37%)</title><rect x="459" y="308" width="5" height="15" fill="rgb(239,157,54)"/><text x="462.00" y="318.50"></text></g><g><title>sstore (eth/vm/logic/storage.py:16) (43 samples, 0.45%)</title><rect x="459" y="244" width="5" height="15" fill="rgb(243,16,31)"/><text x="462.00" y="254.50"></text></g><g><title>get_storage (eth/vm/state.py:107) (42 samples, 0.43%)</title><rect x="459" y="260" width="5" height="15" fill="rgb(248,105,13)"/><text x="462.00" y="270.50"></text></g><g><title>get_storage (eth/db/account.py:146) (41 samples, 0.42%)</title><rect x="459" y="276" width="5" height="15" fill="rgb(226,36,10)"/><text x="462.00" y="286.50"></text></g><g><title>set (eth/db/storage.py:206) (11 samples, 0.11%)</title><rect x="466" y="292" width="1" height="15" fill="rgb(223,201,42)"/><text x="469.00" y="302.50"></text></g><g><title>inner (eth/vm/forks/byzantium/opcodes.py:42) (71 samples, 0.74%)</title><rect x="458" y="228" width="9" height="15" fill="rgb(212,120,26)"/><text x="461.00" y="238.50"></text></g><g><title>sstore (eth/vm/logic/storage.py:51) (19 samples, 0.20%)</title><rect x="465" y="244" width="2" height="15" fill="rgb(239,57,10)"/><text x="468.00" y="254.50"></text></g><g><title>set_storage (eth/vm/state.py:110) (19 samples, 0.20%)</title><rect x="465" y="260" width="2" height="15" fill="rgb(250,157,18)"/><text x="468.00" y="270.50"></text></g><g><title>set_storage (eth/db/account.py:155) (18 samples, 0.19%)</title><rect x="465" y="276" width="2" height="15" fill="rgb(253,89,41)"/><text x="468.00" y="286.50"></text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:51) (16 samples, 0.17%)</title><rect x="467" y="228" width="2" height="15" fill="rgb(235,7,32)"/><text x="470.00" y="238.50"></text></g><g><title>consume_gas (eth/vm/gas_meter.py:59) (11 samples, 0.11%)</title><rect x="476" y="260" width="1" height="15" fill="rgb(209,160,27)"/><text x="479.00" y="270.50"></text></g><g><title>consume_gas (eth/vm/gas_meter.py:66) (16 samples, 0.17%)</title><rect x="477" y="260" width="2" height="15" fill="rgb(254,167,3)"/><text x="480.00" y="270.50"></text></g><g><title>consume_gas (eth/vm/gas_meter.py:68) (18 samples, 0.19%)</title><rect x="479" y="260" width="2" height="15" fill="rgb(239,191,52)"/><text x="482.00" y="270.50"></text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:53) (100 samples, 1.04%)</title><rect x="469" y="228" width="13" height="15" fill="rgb(232,128,30)"/><text x="472.00" y="238.50"></text></g><g><title>consume_gas (eth/vm/computation.py:254) (87 samples, 0.90%)</title><rect x="471" y="244" width="11" height="15" fill="rgb(237,14,32)"/><text x="474.00" y="254.50"></text></g><g><title>and_op (eth/vm/logic/comparison.py:105) (15 samples, 0.16%)</title><rect x="489" y="244" width="2" height="15" fill="rgb(207,19,44)"/><text x="492.00" y="254.50"></text></g><g><title>dup_XX (eth/vm/logic/duplication.py:10) (30 samples, 0.31%)</title><rect x="495" y="244" width="4" height="15" fill="rgb(242,147,46)"/><text x="498.00" y="254.50"></text></g><g><title>stack_dup (eth/vm/computation.py:290) (20 samples, 0.21%)</title><rect x="496" y="260" width="3" height="15" fill="rgb(215,21,15)"/><text x="499.00" y="270.50"></text></g><g><title>eq (eth/vm/logic/comparison.py:77) (9 samples, 0.09%)</title><rect x="499" y="244" width="1" height="15" fill="rgb(205,155,39)"/><text x="502.00" y="254.50"></text></g><g><title>_get_account (eth/db/account.py:334) (21 samples, 0.22%)</title><rect x="502" y="308" width="2" height="15" fill="rgb(236,47,22)"/><text x="505.00" y="318.50"></text></g><g><title>_get_encoded_account (eth/db/account.py:323) (21 samples, 0.22%)</title><rect x="502" y="324" width="2" height="15" fill="rgb(231,75,23)"/><text x="505.00" y="334.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (21 samples, 0.22%)</title><rect x="502" y="340" width="2" height="15" fill="rgb(232,93,19)"/><text x="505.00" y="350.50"></text></g><g><title>__getitem__ (eth/db/cache.py:22) (21 samples, 0.22%)</title><rect x="502" y="356" width="2" height="15" fill="rgb(223,185,37)"/><text x="505.00" y="366.50"></text></g><g><title>__getitem__ (eth/db/keymap.py:28) (20 samples, 0.21%)</title><rect x="502" y="372" width="2" height="15" fill="rgb(233,137,23)"/><text x="505.00" y="382.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (20 samples, 0.21%)</title><rect x="502" y="388" width="2" height="15" fill="rgb(210,102,35)"/><text x="505.00" y="398.50"></text></g><g><title>get (trie/hexary.py:75) (15 samples, 0.16%)</title><rect x="503" y="404" width="1" height="15" fill="rgb(207,74,43)"/><text x="506.00" y="414.50"></text></g><g><title>_get (trie/hexary.py:87) (15 samples, 0.16%)</title><rect x="503" y="420" width="1" height="15" fill="rgb(240,110,46)"/><text x="506.00" y="430.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (15 samples, 0.16%)</title><rect x="503" y="436" width="1" height="15" fill="rgb(243,140,48)"/><text x="506.00" y="446.50"></text></g><g><title>_get (trie/hexary.py:87) (15 samples, 0.16%)</title><rect x="503" y="452" width="1" height="15" fill="rgb(212,64,1)"/><text x="506.00" y="462.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (13 samples, 0.13%)</title><rect x="503" y="468" width="1" height="15" fill="rgb(207,0,27)"/><text x="506.00" y="478.50"></text></g><g><title>_get (trie/hexary.py:87) (13 samples, 0.13%)</title><rect x="503" y="484" width="1" height="15" fill="rgb(214,62,27)"/><text x="506.00" y="494.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (12 samples, 0.12%)</title><rect x="503" y="500" width="1" height="15" fill="rgb(219,159,51)"/><text x="506.00" y="510.50"></text></g><g><title>_get (trie/hexary.py:87) (12 samples, 0.12%)</title><rect x="503" y="516" width="1" height="15" fill="rgb(244,226,27)"/><text x="506.00" y="526.50"></text></g><g><title>get_code (eth/db/account.py:253) (26 samples, 0.27%)</title><rect x="502" y="276" width="3" height="15" fill="rgb(240,50,31)"/><text x="505.00" y="286.50"></text></g><g><title>get_code_hash (eth/db/account.py:275) (26 samples, 0.27%)</title><rect x="502" y="292" width="3" height="15" fill="rgb(217,151,54)"/><text x="505.00" y="302.50"></text></g><g><title>extcodesize (eth/vm/logic/context.py:131) (55 samples, 0.57%)</title><rect x="502" y="244" width="6" height="15" fill="rgb(238,121,1)"/><text x="505.00" y="254.50"></text></g><g><title>get_code (eth/vm/state.py:137) (55 samples, 0.57%)</title><rect x="502" y="260" width="6" height="15" fill="rgb(215,218,35)"/><text x="505.00" y="270.50"></text></g><g><title>get_code (eth/db/account.py:258) (29 samples, 0.30%)</title><rect x="505" y="276" width="3" height="15" fill="rgb(225,182,34)"/><text x="508.00" y="286.50"></text></g><g><title>__getitem__ (eth/db/journal.py:336) (28 samples, 0.29%)</title><rect x="505" y="292" width="3" height="15" fill="rgb(206,58,27)"/><text x="508.00" y="302.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (26 samples, 0.27%)</title><rect x="505" y="308" width="3" height="15" fill="rgb(235,80,43)"/><text x="508.00" y="318.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (25 samples, 0.26%)</title><rect x="505" y="324" width="3" height="15" fill="rgb(224,194,43)"/><text x="508.00" y="334.50"></text></g><g><title>jump (eth/vm/logic/flow.py:27) (25 samples, 0.26%)</title><rect x="510" y="244" width="3" height="15" fill="rgb(207,61,33)"/><text x="513.00" y="254.50"></text></g><g><title>is_valid_opcode (eth/vm/code_stream.py:99) (22 samples, 0.23%)</title><rect x="511" y="260" width="2" height="15" fill="rgb(224,192,31)"/><text x="514.00" y="270.50"></text></g><g><title>jumpi (eth/vm/logic/flow.py:32) (20 samples, 0.21%)</title><rect x="514" y="244" width="2" height="15" fill="rgb(248,168,4)"/><text x="517.00" y="254.50"></text></g><g><title>is_valid_opcode (eth/vm/code_stream.py:101) (9 samples, 0.09%)</title><rect x="516" y="260" width="1" height="15" fill="rgb(211,86,40)"/><text x="519.00" y="270.50"></text></g><g><title>jumpi (eth/vm/logic/flow.py:42) (31 samples, 0.32%)</title><rect x="516" y="244" width="4" height="15" fill="rgb(215,171,40)"/><text x="519.00" y="254.50"></text></g><g><title>is_valid_opcode (eth/vm/code_stream.py:99) (18 samples, 0.19%)</title><rect x="518" y="260" width="2" height="15" fill="rgb(212,200,50)"/><text x="521.00" y="270.50"></text></g><g><title>mload (eth/vm/logic/memory.py:31) (18 samples, 0.19%)</title><rect x="521" y="244" width="2" height="15" fill="rgb(213,54,54)"/><text x="524.00" y="254.50"></text></g><g><title>mstore (eth/vm/logic/memory.py:11) (31 samples, 0.32%)</title><rect x="524" y="244" width="4" height="15" fill="rgb(252,45,5)"/><text x="527.00" y="254.50"></text></g><g><title>write (eth/vm/memory.py:55) (11 samples, 0.11%)</title><rect x="530" y="276" width="2" height="15" fill="rgb(205,207,18)"/><text x="533.00" y="286.50"></text></g><g><title>mstore (eth/vm/logic/memory.py:13) (41 samples, 0.42%)</title><rect x="528" y="244" width="5" height="15" fill="rgb(223,198,47)"/><text x="531.00" y="254.50"></text></g><g><title>memory_write (eth/vm/computation.py:239) (40 samples, 0.41%)</title><rect x="528" y="260" width="5" height="15" fill="rgb(209,143,21)"/><text x="531.00" y="270.50"></text></g><g><title>write (eth/vm/memory.py:56) (10 samples, 0.10%)</title><rect x="532" y="276" width="1" height="15" fill="rgb(230,117,25)"/><text x="535.00" y="286.50"></text></g><g><title>mstore (eth/vm/logic/memory.py:5) (9 samples, 0.09%)</title><rect x="533" y="244" width="1" height="15" fill="rgb(205,98,40)"/><text x="536.00" y="254.50"></text></g><g><title>push_XX (eth/vm/logic/stack.py:11) (21 samples, 0.22%)</title><rect x="536" y="244" width="2" height="15" fill="rgb(254,157,36)"/><text x="539.00" y="254.50"></text></g><g><title>push_bytes (eth/vm/stack.py:69) (11 samples, 0.11%)</title><rect x="541" y="260" width="1" height="15" fill="rgb(240,134,54)"/><text x="544.00" y="270.50"></text></g><g><title>push_XX (eth/vm/logic/stack.py:19) (38 samples, 0.39%)</title><rect x="539" y="244" width="5" height="15" fill="rgb(235,39,49)"/><text x="542.00" y="254.50"></text></g><g><title>push_bytes (eth/vm/stack.py:71) (10 samples, 0.10%)</title><rect x="542" y="260" width="2" height="15" fill="rgb(211,58,24)"/><text x="545.00" y="270.50"></text></g><g><title>sha3 (eth/vm/logic/sha3.py:13) (9 samples, 0.09%)</title><rect x="545" y="244" width="1" height="15" fill="rgb(212,15,6)"/><text x="548.00" y="254.50"></text></g><g><title>get_node (trie/hexary.py:284) (18 samples, 0.19%)</title><rect x="552" y="388" width="2" height="15" fill="rgb(227,160,3)"/><text x="555.00" y="398.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (17 samples, 0.18%)</title><rect x="552" y="404" width="2" height="15" fill="rgb(233,51,45)"/><text x="555.00" y="414.50"></text></g><g><title>consume_payload (rlp/codec.py:179) (10 samples, 0.10%)</title><rect x="556" y="452" width="1" height="15" fill="rgb(241,76,10)"/><text x="559.00" y="462.50"></text></g><g><title>get (trie/hexary.py:73) (50 samples, 0.52%)</title><rect x="552" y="372" width="6" height="15" fill="rgb(206,12,9)"/><text x="555.00" y="382.50"></text></g><g><title>get_node (trie/hexary.py:285) (31 samples, 0.32%)</title><rect x="554" y="388" width="4" height="15" fill="rgb(219,143,11)"/><text x="557.00" y="398.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (29 samples, 0.30%)</title><rect x="555" y="404" width="3" height="15" fill="rgb(254,93,20)"/><text x="558.00" y="414.50"></text></g><g><title>decode (rlp/codec.py:230) (29 samples, 0.30%)</title><rect x="555" y="420" width="3" height="15" fill="rgb(234,70,27)"/><text x="558.00" y="430.50"></text></g><g><title>consume_item (rlp/codec.py:206) (25 samples, 0.26%)</title><rect x="555" y="436" width="3" height="15" fill="rgb(251,127,50)"/><text x="558.00" y="446.50"></text></g><g><title>get_node (trie/hexary.py:284) (74 samples, 0.77%)</title><rect x="559" y="420" width="9" height="15" fill="rgb(234,198,40)"/><text x="562.00" y="430.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (74 samples, 0.77%)</title><rect x="559" y="436" width="9" height="15" fill="rgb(207,175,50)"/><text x="562.00" y="446.50"></text></g><g><title>consume_payload (rlp/codec.py:179) (11 samples, 0.11%)</title><rect x="570" y="484" width="2" height="15" fill="rgb(206,140,10)"/><text x="573.00" y="494.50"></text></g><g><title>decode (rlp/codec.py:230) (34 samples, 0.35%)</title><rect x="568" y="452" width="4" height="15" fill="rgb(244,30,27)"/><text x="571.00" y="462.50"></text></g><g><title>consume_item (rlp/codec.py:206) (27 samples, 0.28%)</title><rect x="569" y="468" width="3" height="15" fill="rgb(213,133,33)"/><text x="572.00" y="478.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (115 samples, 1.19%)</title><rect x="558" y="404" width="14" height="15" fill="rgb(222,34,4)"/><text x="561.00" y="414.50"></text></g><g><title>get_node (trie/hexary.py:285) (40 samples, 0.41%)</title><rect x="568" y="420" width="4" height="15" fill="rgb(223,4,49)"/><text x="571.00" y="430.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (37 samples, 0.38%)</title><rect x="568" y="436" width="4" height="15" fill="rgb(249,105,15)"/><text x="571.00" y="446.50"></text></g><g><title>get_node (trie/hexary.py:284) (105 samples, 1.09%)</title><rect x="573" y="452" width="13" height="15" fill="rgb(208,85,16)"/><text x="576.00" y="462.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (105 samples, 1.09%)</title><rect x="573" y="468" width="13" height="15" fill="rgb(228,119,24)"/><text x="576.00" y="478.50"></text></g><g><title>consume_payload (rlp/codec.py:179) (15 samples, 0.16%)</title><rect x="589" y="516" width="2" height="15" fill="rgb(215,116,6)"/><text x="592.00" y="526.50"></text></g><g><title>decode (rlp/codec.py:230) (36 samples, 0.37%)</title><rect x="587" y="484" width="4" height="15" fill="rgb(237,95,45)"/><text x="590.00" y="494.50"></text></g><g><title>consume_item (rlp/codec.py:206) (31 samples, 0.32%)</title><rect x="588" y="500" width="3" height="15" fill="rgb(250,86,38)"/><text x="591.00" y="510.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (150 samples, 1.55%)</title><rect x="573" y="436" width="19" height="15" fill="rgb(245,94,17)"/><text x="576.00" y="446.50"></text></g><g><title>get_node (trie/hexary.py:285) (45 samples, 0.47%)</title><rect x="586" y="452" width="6" height="15" fill="rgb(230,87,40)"/><text x="589.00" y="462.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (42 samples, 0.43%)</title><rect x="586" y="468" width="6" height="15" fill="rgb(211,139,27)"/><text x="589.00" y="478.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (108 samples, 1.12%)</title><rect x="594" y="500" width="14" height="15" fill="rgb(216,81,40)"/><text x="597.00" y="510.50"></text></g><g><title>get_node (trie/hexary.py:284) (112 samples, 1.16%)</title><rect x="594" y="484" width="14" height="15" fill="rgb(222,12,17)"/><text x="597.00" y="494.50"></text></g><g><title>consume_item (rlp/codec.py:205) (12 samples, 0.12%)</title><rect x="609" y="532" width="1" height="15" fill="rgb(245,128,45)"/><text x="612.00" y="542.50"></text></g><g><title>consume_payload (rlp/codec.py:178) (14 samples, 0.14%)</title><rect x="611" y="548" width="1" height="15" fill="rgb(252,158,24)"/><text x="614.00" y="558.50"></text></g><g><title>consume_payload (rlp/codec.py:179) (15 samples, 0.16%)</title><rect x="612" y="548" width="2" height="15" fill="rgb(234,223,10)"/><text x="615.00" y="558.50"></text></g><g><title>decode (rlp/codec.py:230) (54 samples, 0.56%)</title><rect x="609" y="516" width="7" height="15" fill="rgb(232,123,49)"/><text x="612.00" y="526.50"></text></g><g><title>consume_item (rlp/codec.py:206) (42 samples, 0.43%)</title><rect x="610" y="532" width="6" height="15" fill="rgb(228,204,18)"/><text x="613.00" y="542.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (178 samples, 1.84%)</title><rect x="594" y="468" width="22" height="15" fill="rgb(244,221,37)"/><text x="597.00" y="478.50">_..</text></g><g><title>get_node (trie/hexary.py:285) (65 samples, 0.67%)</title><rect x="608" y="484" width="8" height="15" fill="rgb(232,93,26)"/><text x="611.00" y="494.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (60 samples, 0.62%)</title><rect x="608" y="500" width="8" height="15" fill="rgb(225,2,36)"/><text x="611.00" y="510.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (120 samples, 1.24%)</title><rect x="617" y="532" width="15" height="15" fill="rgb(234,170,9)"/><text x="620.00" y="542.50"></text></g><g><title>get_node (trie/hexary.py:284) (121 samples, 1.25%)</title><rect x="617" y="516" width="15" height="15" fill="rgb(236,113,47)"/><text x="620.00" y="526.50"></text></g><g><title>consume_item (rlp/codec.py:205) (12 samples, 0.12%)</title><rect x="633" y="564" width="1" height="15" fill="rgb(245,121,41)"/><text x="636.00" y="574.50"></text></g><g><title>consume_payload (rlp/codec.py:179) (15 samples, 0.16%)</title><rect x="635" y="580" width="2" height="15" fill="rgb(225,216,26)"/><text x="638.00" y="590.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (179 samples, 1.85%)</title><rect x="617" y="500" width="22" height="15" fill="rgb(237,51,6)"/><text x="620.00" y="510.50">_..</text></g><g><title>get_node (trie/hexary.py:285) (57 samples, 0.59%)</title><rect x="632" y="516" width="7" height="15" fill="rgb(231,189,49)"/><text x="635.00" y="526.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (54 samples, 0.56%)</title><rect x="632" y="532" width="7" height="15" fill="rgb(227,221,12)"/><text x="635.00" y="542.50"></text></g><g><title>decode (rlp/codec.py:230) (51 samples, 0.53%)</title><rect x="633" y="548" width="6" height="15" fill="rgb(216,126,13)"/><text x="636.00" y="558.50"></text></g><g><title>consume_item (rlp/codec.py:206) (39 samples, 0.40%)</title><rect x="634" y="564" width="5" height="15" fill="rgb(236,221,4)"/><text x="637.00" y="574.50"></text></g><g><title>_get (trie/hexary.py:80) (10 samples, 0.10%)</title><rect x="639" y="516" width="1" height="15" fill="rgb(246,166,31)"/><text x="642.00" y="526.50"></text></g><g><title>get_node_type (trie/utils/nodes.py:42) (10 samples, 0.10%)</title><rect x="639" y="532" width="1" height="15" fill="rgb(223,212,30)"/><text x="642.00" y="542.50"></text></g><g><title>get_node (trie/hexary.py:284) (59 samples, 0.61%)</title><rect x="641" y="548" width="8" height="15" fill="rgb(208,108,0)"/><text x="644.00" y="558.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (59 samples, 0.61%)</title><rect x="641" y="564" width="8" height="15" fill="rgb(233,189,27)"/><text x="644.00" y="574.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (75 samples, 0.78%)</title><rect x="641" y="532" width="9" height="15" fill="rgb(239,35,18)"/><text x="644.00" y="542.50"></text></g><g><title>get_node (trie/hexary.py:285) (16 samples, 0.17%)</title><rect x="649" y="548" width="1" height="15" fill="rgb(228,124,28)"/><text x="652.00" y="558.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (14 samples, 0.14%)</title><rect x="649" y="564" width="1" height="15" fill="rgb(230,92,37)"/><text x="652.00" y="574.50"></text></g><g><title>decode (rlp/codec.py:230) (14 samples, 0.14%)</title><rect x="649" y="580" width="1" height="15" fill="rgb(207,160,47)"/><text x="652.00" y="590.50"></text></g><g><title>consume_item (rlp/codec.py:206) (10 samples, 0.10%)</title><rect x="649" y="596" width="1" height="15" fill="rgb(232,201,10)"/><text x="652.00" y="606.50"></text></g><g><title>get_node_type (trie/utils/nodes.py:42) (13 samples, 0.13%)</title><rect x="651" y="564" width="1" height="15" fill="rgb(245,68,20)"/><text x="654.00" y="574.50"></text></g><g><title>_get (trie/hexary.py:80) (14 samples, 0.14%)</title><rect x="651" y="548" width="1" height="15" fill="rgb(208,37,12)"/><text x="654.00" y="558.50"></text></g><g><title>_get (trie/hexary.py:85) (13 samples, 0.13%)</title><rect x="653" y="548" width="1" height="15" fill="rgb(233,150,52)"/><text x="656.00" y="558.50"></text></g><g><title>get_node (trie/hexary.py:284) (15 samples, 0.16%)</title><rect x="654" y="580" width="2" height="15" fill="rgb(224,55,20)"/><text x="657.00" y="590.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (15 samples, 0.16%)</title><rect x="654" y="596" width="2" height="15" fill="rgb(221,56,45)"/><text x="657.00" y="606.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (16 samples, 0.17%)</title><rect x="654" y="564" width="2" height="15" fill="rgb(238,135,28)"/><text x="657.00" y="574.50"></text></g><g><title>get (eth/db/storage.py:192) (884 samples, 9.15%)</title><rect x="549" y="292" width="108" height="15" fill="rgb(232,140,43)"/><text x="552.00" y="302.50">get (eth/db/s..</text></g><g><title>__getitem__ (eth/db/journal.py:336) (882 samples, 9.13%)</title><rect x="549" y="308" width="108" height="15" fill="rgb(252,26,31)"/><text x="552.00" y="318.50">__getitem__ (..</text></g><g><title>__getitem__ (eth/db/cache.py:22) (880 samples, 9.11%)</title><rect x="549" y="324" width="108" height="15" fill="rgb(238,198,20)"/><text x="552.00" y="334.50">__getitem__ (..</text></g><g><title>__getitem__ (eth/db/storage.py:88) (870 samples, 9.01%)</title><rect x="551" y="340" width="106" height="15" fill="rgb(214,104,6)"/><text x="554.00" y="350.50">__getitem__ ..</text></g><g><title>__getitem__ (trie/hexary.py:515) (870 samples, 9.01%)</title><rect x="551" y="356" width="106" height="15" fill="rgb(236,94,5)"/><text x="554.00" y="366.50">__getitem__ ..</text></g><g><title>get (trie/hexary.py:75) (809 samples, 8.38%)</title><rect x="558" y="372" width="99" height="15" fill="rgb(254,76,8)"/><text x="561.00" y="382.50">get (trie/h..</text></g><g><title>_get (trie/hexary.py:87) (807 samples, 8.36%)</title><rect x="558" y="388" width="99" height="15" fill="rgb(231,113,18)"/><text x="561.00" y="398.50">_get (trie/..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (691 samples, 7.16%)</title><rect x="572" y="404" width="85" height="15" fill="rgb(214,96,34)"/><text x="575.00" y="414.50">_get_branc..</text></g><g><title>_get (trie/hexary.py:87) (688 samples, 7.13%)</title><rect x="573" y="420" width="84" height="15" fill="rgb(221,82,42)"/><text x="576.00" y="430.50">_get (tri..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (535 samples, 5.54%)</title><rect x="592" y="436" width="65" height="15" fill="rgb(217,105,11)"/><text x="595.00" y="446.50">_get_br..</text></g><g><title>_get (trie/hexary.py:87) (517 samples, 5.35%)</title><rect x="594" y="452" width="63" height="15" fill="rgb(209,84,15)"/><text x="597.00" y="462.50">_get (..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (337 samples, 3.49%)</title><rect x="616" y="468" width="41" height="15" fill="rgb(254,30,5)"/><text x="619.00" y="478.50">_ge..</text></g><g><title>_get (trie/hexary.py:87) (328 samples, 3.40%)</title><rect x="617" y="484" width="40" height="15" fill="rgb(215,124,27)"/><text x="620.00" y="494.50">_ge..</text></g><g><title>_get_branch_node (trie/hexary.py:491) (147 samples, 1.52%)</title><rect x="639" y="500" width="18" height="15" fill="rgb(232,200,31)"/><text x="642.00" y="510.50"></text></g><g><title>_get (trie/hexary.py:87) (128 samples, 1.33%)</title><rect x="641" y="516" width="16" height="15" fill="rgb(227,183,13)"/><text x="644.00" y="526.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (53 samples, 0.55%)</title><rect x="650" y="532" width="7" height="15" fill="rgb(237,118,10)"/><text x="653.00" y="542.50"></text></g><g><title>_get (trie/hexary.py:87) (23 samples, 0.24%)</title><rect x="654" y="548" width="3" height="15" fill="rgb(220,156,27)"/><text x="657.00" y="558.50"></text></g><g><title>sload (eth/vm/logic/storage.py:60) (913 samples, 9.46%)</title><rect x="547" y="244" width="112" height="15" fill="rgb(244,226,30)"/><text x="550.00" y="254.50">sload (eth/vm..</text></g><g><title>get_storage (eth/vm/state.py:107) (912 samples, 9.44%)</title><rect x="548" y="260" width="111" height="15" fill="rgb(245,68,20)"/><text x="551.00" y="270.50">get_storage (..</text></g><g><title>get_storage (eth/db/account.py:146) (905 samples, 9.37%)</title><rect x="548" y="276" width="111" height="15" fill="rgb(211,9,8)"/><text x="551.00" y="286.50">get_storage (..</text></g><g><title>get (eth/db/storage.py:201) (16 samples, 0.17%)</title><rect x="657" y="292" width="2" height="15" fill="rgb(222,72,15)"/><text x="660.00" y="302.50"></text></g><g><title>swap_XX (eth/vm/logic/swap.py:10) (11 samples, 0.11%)</title><rect x="660" y="244" width="1" height="15" fill="rgb(216,101,54)"/><text x="663.00" y="254.50"></text></g><g><title>stack_swap (eth/vm/computation.py:287) (10 samples, 0.10%)</title><rect x="660" y="260" width="1" height="15" fill="rgb(223,229,19)"/><text x="663.00" y="270.50"></text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:77) (4,128 samples, 42.75%)</title><rect x="157" y="196" width="504" height="15" fill="rgb(216,72,0)"/><text x="160.00" y="206.50">apply_message (eth/vm/forks/frontier/computation.py:77)</text></g><g><title>apply_computation (eth/vm/computation.py:554) (4,043 samples, 41.87%)</title><rect x="167" y="212" width="494" height="15" fill="rgb(227,33,47)"/><text x="170.00" y="222.50">apply_computation (eth/vm/computation.py:554)</text></g><g><title>wrapped_logic_fn (eth/vm/opcode.py:55) (1,469 samples, 15.21%)</title><rect x="482" y="228" width="179" height="15" fill="rgb(240,161,38)"/><text x="485.00" y="238.50">wrapped_logic_fn (eth/v..</text></g><g><title>commit (eth/db/storage.py:233) (15 samples, 0.16%)</title><rect x="663" y="244" width="2" height="15" fill="rgb(217,18,5)"/><text x="666.00" y="254.50"></text></g><g><title>has_checkpoint (eth/db/journal.py:389) (12 samples, 0.12%)</title><rect x="664" y="260" width="1" height="15" fill="rgb(215,48,36)"/><text x="667.00" y="270.50"></text></g><g><title>has_checkpoint (eth/db/journal.py:117) (11 samples, 0.11%)</title><rect x="664" y="276" width="1" height="15" fill="rgb(230,44,52)"/><text x="667.00" y="286.50"></text></g><g><title>commit (eth/db/storage.py:234) (11 samples, 0.11%)</title><rect x="665" y="244" width="1" height="15" fill="rgb(241,172,12)"/><text x="668.00" y="254.50"></text></g><g><title>apply_message (eth/vm/forks/frontier/computation.py:83) (37 samples, 0.38%)</title><rect x="662" y="196" width="5" height="15" fill="rgb(238,141,50)"/><text x="665.00" y="206.50"></text></g><g><title>commit (eth/vm/state.py:176) (37 samples, 0.38%)</title><rect x="662" y="212" width="5" height="15" fill="rgb(248,0,26)"/><text x="665.00" y="222.50"></text></g><g><title>commit (eth/db/account.py:371) (29 samples, 0.30%)</title><rect x="663" y="228" width="4" height="15" fill="rgb(206,89,6)"/><text x="666.00" y="238.50"></text></g><g><title>__call__ (eth/vm/state.py:264) (4,246 samples, 43.97%)</title><rect x="148" y="164" width="519" height="15" fill="rgb(234,77,20)"/><text x="151.00" y="174.50">__call__ (eth/vm/state.py:264)</text></g><g><title>build_computation (eth/vm/forks/frontier/state.py:133) (4,235 samples, 43.86%)</title><rect x="150" y="180" width="517" height="15" fill="rgb(223,184,15)"/><text x="153.00" y="190.50">build_computation (eth/vm/forks/frontier/state.py:133)</text></g><g><title>finalize_computation (eth/vm/forks/frontier/state.py:159) (21 samples, 0.22%)</title><rect x="670" y="196" width="3" height="15" fill="rgb(229,131,11)"/><text x="673.00" y="206.50"></text></g><g><title>delta_balance (eth/vm/state.py:125) (21 samples, 0.22%)</title><rect x="670" y="212" width="3" height="15" fill="rgb(248,118,40)"/><text x="673.00" y="222.50"></text></g><g><title>set_balance (eth/vm/state.py:122) (20 samples, 0.21%)</title><rect x="670" y="228" width="3" height="15" fill="rgb(238,228,38)"/><text x="673.00" y="238.50"></text></g><g><title>set_balance (eth/db/account.py:225) (18 samples, 0.19%)</title><rect x="670" y="244" width="3" height="15" fill="rgb(236,7,30)"/><text x="673.00" y="254.50"></text></g><g><title>finalize_computation (eth/vm/forks/frontier/state.py:169) (27 samples, 0.28%)</title><rect x="674" y="196" width="3" height="15" fill="rgb(254,125,40)"/><text x="677.00" y="206.50"></text></g><g><title>delta_balance (eth/vm/state.py:125) (26 samples, 0.27%)</title><rect x="674" y="212" width="3" height="15" fill="rgb(237,223,18)"/><text x="677.00" y="222.50"></text></g><g><title>set_balance (eth/vm/state.py:122) (23 samples, 0.24%)</title><rect x="674" y="228" width="3" height="15" fill="rgb(252,150,47)"/><text x="677.00" y="238.50"></text></g><g><title>set_balance (eth/db/account.py:225) (23 samples, 0.24%)</title><rect x="674" y="244" width="3" height="15" fill="rgb(238,56,49)"/><text x="677.00" y="254.50"></text></g><g><title>finalize_computation (eth/vm/forks/spurious_dragon/state.py:25) (87 samples, 0.90%)</title><rect x="667" y="180" width="11" height="15" fill="rgb(211,112,1)"/><text x="670.00" y="190.50"></text></g><g><title>apply_transaction (eth/vm/base.py:151) (5,403 samples, 55.95%)</title><rect x="18" y="132" width="661" height="15" fill="rgb(229,43,54)"/><text x="21.00" y="142.50">apply_transaction (eth/vm/base.py:151)</text></g><g><title>apply_transaction (eth/vm/forks/frontier/state.py:193) (5,401 samples, 55.93%)</title><rect x="19" y="148" width="660" height="15" fill="rgb(254,161,47)"/><text x="22.00" y="158.50">apply_transaction (eth/vm/forks/frontier/state.py:193)</text></g><g><title>__call__ (eth/vm/state.py:265) (92 samples, 0.95%)</title><rect x="667" y="164" width="12" height="15" fill="rgb(216,201,12)"/><text x="670.00" y="174.50"></text></g><g><title>add (eth_bloom/bloom.py:47) (11 samples, 0.11%)</title><rect x="681" y="228" width="1" height="15" fill="rgb(247,157,46)"/><text x="684.00" y="238.50"></text></g><g><title>__init__ (eth/rlp/receipts.py:39) (19 samples, 0.20%)</title><rect x="680" y="180" width="3" height="15" fill="rgb(216,135,48)"/><text x="683.00" y="190.50"></text></g><g><title>from_iterable (eth_bloom/bloom.py:57) (18 samples, 0.19%)</title><rect x="680" y="196" width="3" height="15" fill="rgb(213,20,44)"/><text x="683.00" y="206.50"></text></g><g><title>extend (eth_bloom/bloom.py:52) (13 samples, 0.13%)</title><rect x="681" y="212" width="2" height="15" fill="rgb(212,103,15)"/><text x="684.00" y="222.50"></text></g><g><title>make_receipt (eth/vm/forks/byzantium/__init__.py:110) (40 samples, 0.41%)</title><rect x="679" y="148" width="4" height="15" fill="rgb(251,195,49)"/><text x="682.00" y="158.50"></text></g><g><title>make_frontier_receipt (eth/vm/forks/frontier/__init__.py:61) (30 samples, 0.31%)</title><rect x="680" y="164" width="3" height="15" fill="rgb(207,139,36)"/><text x="683.00" y="174.50"></text></g><g><title>_deepcopy_tuple (copy.py:220) (15 samples, 0.16%)</title><rect x="684" y="212" width="2" height="15" fill="rgb(241,181,46)"/><text x="687.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (copy.py:220) (15 samples, 0.16%)</title><rect x="684" y="228" width="2" height="15" fill="rgb(235,146,18)"/><text x="687.00" y="238.50"></text></g><g><title>deepcopy (copy.py:161) (13 samples, 0.13%)</title><rect x="684" y="244" width="2" height="15" fill="rgb(249,41,16)"/><text x="687.00" y="254.50"></text></g><g><title>__deepcopy__ (rlp/sedes/serializable.py:295) (13 samples, 0.13%)</title><rect x="684" y="260" width="2" height="15" fill="rgb(245,40,53)"/><text x="687.00" y="270.50"></text></g><g><title>&lt;dictcomp&gt; (rlp/sedes/serializable.py:285) (17 samples, 0.18%)</title><rect x="684" y="180" width="2" height="15" fill="rgb(209,223,33)"/><text x="687.00" y="190.50"></text></g><g><title>deepcopy (copy.py:150) (17 samples, 0.18%)</title><rect x="684" y="196" width="2" height="15" fill="rgb(232,127,27)"/><text x="687.00" y="206.50"></text></g><g><title>copy (rlp/sedes/serializable.py:284) (20 samples, 0.21%)</title><rect x="684" y="164" width="2" height="15" fill="rgb(246,195,47)"/><text x="687.00" y="174.50"></text></g><g><title>apply_transaction (eth/vm/base.py:152) (73 samples, 0.76%)</title><rect x="679" y="132" width="8" height="15" fill="rgb(243,43,50)"/><text x="682.00" y="142.50"></text></g><g><title>make_receipt (eth/vm/forks/byzantium/__init__.py:117) (33 samples, 0.34%)</title><rect x="683" y="148" width="4" height="15" fill="rgb(254,229,28)"/><text x="686.00" y="158.50"></text></g><g><title>validate_receipt (eth/vm/forks/byzantium/__init__.py:79) (9 samples, 0.09%)</title><rect x="687" y="148" width="2" height="15" fill="rgb(230,63,14)"/><text x="690.00" y="158.50"></text></g><g><title>apply_all_transactions (eth/vm/base.py:230) (5,489 samples, 56.85%)</title><rect x="18" y="116" width="671" height="15" fill="rgb(221,73,2)"/><text x="21.00" y="126.50">apply_all_transactions (eth/vm/base.py:230)</text></g><g><title>apply_transaction (eth/vm/base.py:153) (10 samples, 0.10%)</title><rect x="687" y="132" width="2" height="15" fill="rgb(207,201,43)"/><text x="690.00" y="142.50"></text></g><g><title>add_receipt_to_header (eth/vm/forks/byzantium/__init__.py:100) (24 samples, 0.25%)</title><rect x="689" y="132" width="3" height="15" fill="rgb(253,21,42)"/><text x="692.00" y="142.50"></text></g><g><title>copy (rlp/sedes/serializable.py:289) (9 samples, 0.09%)</title><rect x="691" y="148" width="1" height="15" fill="rgb(236,155,51)"/><text x="694.00" y="158.50"></text></g><g><title>import_block (eth/vm/base.py:277) (5,542 samples, 57.39%)</title><rect x="15" y="100" width="677" height="15" fill="rgb(213,137,40)"/><text x="18.00" y="110.50">import_block (eth/vm/base.py:277)</text></g><g><title>apply_all_transactions (eth/vm/base.py:235) (25 samples, 0.26%)</title><rect x="689" y="116" width="3" height="15" fill="rgb(244,70,3)"/><text x="692.00" y="126.50"></text></g><g><title>_set (trie/hexary.py:122) (14 samples, 0.14%)</title><rect x="694" y="228" width="1" height="15" fill="rgb(250,150,26)"/><text x="697.00" y="238.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (17 samples, 0.18%)</title><rect x="693" y="212" width="2" height="15" fill="rgb(241,40,5)"/><text x="696.00" y="222.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (10 samples, 0.10%)</title><rect x="696" y="260" width="1" height="15" fill="rgb(222,66,53)"/><text x="699.00" y="270.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (13 samples, 0.13%)</title><rect x="695" y="228" width="2" height="15" fill="rgb(209,76,25)"/><text x="698.00" y="238.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (13 samples, 0.13%)</title><rect x="695" y="244" width="2" height="15" fill="rgb(233,168,24)"/><text x="698.00" y="254.50"></text></g><g><title>_set (trie/hexary.py:122) (32 samples, 0.33%)</title><rect x="693" y="196" width="4" height="15" fill="rgb(217,87,8)"/><text x="696.00" y="206.50"></text></g><g><title>_set_branch_node (trie/hexary.py:426) (14 samples, 0.14%)</title><rect x="695" y="212" width="2" height="15" fill="rgb(230,122,33)"/><text x="698.00" y="222.50"></text></g><g><title>set (trie/hexary.py:104) (35 samples, 0.36%)</title><rect x="693" y="180" width="4" height="15" fill="rgb(206,136,1)"/><text x="696.00" y="190.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (10 samples, 0.10%)</title><rect x="698" y="260" width="1" height="15" fill="rgb(210,122,18)"/><text x="701.00" y="270.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (10 samples, 0.10%)</title><rect x="698" y="276" width="1" height="15" fill="rgb(243,53,20)"/><text x="701.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (10 samples, 0.10%)</title><rect x="698" y="292" width="1" height="15" fill="rgb(217,13,26)"/><text x="701.00" y="302.50"></text></g><g><title>set_block_transactions (eth/vm/base.py:310) (63 samples, 0.65%)</title><rect x="692" y="116" width="7" height="15" fill="rgb(217,209,23)"/><text x="695.00" y="126.50"></text></g><g><title>make_trie_root_and_nodes (eth/db/trie.py:24) (63 samples, 0.65%)</title><rect x="692" y="132" width="7" height="15" fill="rgb(223,217,37)"/><text x="695.00" y="142.50"></text></g><g><title>_make_trie_root_and_nodes (eth/db/trie.py:38) (62 samples, 0.64%)</title><rect x="692" y="148" width="7" height="15" fill="rgb(245,220,14)"/><text x="695.00" y="158.50"></text></g><g><title>__setitem__ (trie/hexary.py:518) (61 samples, 0.63%)</title><rect x="692" y="164" width="7" height="15" fill="rgb(243,29,34)"/><text x="695.00" y="174.50"></text></g><g><title>set (trie/hexary.py:108) (18 samples, 0.19%)</title><rect x="697" y="180" width="2" height="15" fill="rgb(241,219,12)"/><text x="700.00" y="190.50"></text></g><g><title>_set_root_node (trie/hexary.py:273) (13 samples, 0.13%)</title><rect x="698" y="196" width="1" height="15" fill="rgb(240,173,27)"/><text x="701.00" y="206.50"></text></g><g><title>_set_raw_node (trie/hexary.py:249) (13 samples, 0.13%)</title><rect x="698" y="212" width="1" height="15" fill="rgb(227,113,8)"/><text x="701.00" y="222.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (13 samples, 0.13%)</title><rect x="698" y="228" width="1" height="15" fill="rgb(221,43,53)"/><text x="701.00" y="238.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (12 samples, 0.12%)</title><rect x="698" y="244" width="1" height="15" fill="rgb(228,141,27)"/><text x="701.00" y="254.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (10 samples, 0.10%)</title><rect x="700" y="212" width="1" height="15" fill="rgb(243,202,3)"/><text x="703.00" y="222.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (9 samples, 0.09%)</title><rect x="700" y="228" width="1" height="15" fill="rgb(247,64,44)"/><text x="703.00" y="238.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (9 samples, 0.09%)</title><rect x="700" y="244" width="1" height="15" fill="rgb(253,103,54)"/><text x="703.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (9 samples, 0.09%)</title><rect x="700" y="260" width="1" height="15" fill="rgb(211,11,33)"/><text x="703.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (eth/db/trie.py:24) (17 samples, 0.18%)</title><rect x="699" y="148" width="3" height="15" fill="rgb(245,108,26)"/><text x="702.00" y="158.50"></text></g><g><title>encode (rlp/codec.py:67) (12 samples, 0.12%)</title><rect x="700" y="164" width="2" height="15" fill="rgb(246,69,52)"/><text x="703.00" y="174.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (12 samples, 0.12%)</title><rect x="700" y="180" width="2" height="15" fill="rgb(224,40,23)"/><text x="703.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (12 samples, 0.12%)</title><rect x="700" y="196" width="2" height="15" fill="rgb(232,170,42)"/><text x="703.00" y="206.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (9 samples, 0.09%)</title><rect x="703" y="212" width="1" height="15" fill="rgb(211,90,48)"/><text x="706.00" y="222.50"></text></g><g><title>_set (trie/hexary.py:122) (9 samples, 0.09%)</title><rect x="705" y="260" width="1" height="15" fill="rgb(230,92,34)"/><text x="708.00" y="270.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (13 samples, 0.13%)</title><rect x="704" y="244" width="2" height="15" fill="rgb(236,10,10)"/><text x="707.00" y="254.50"></text></g><g><title>_set (trie/hexary.py:122) (19 samples, 0.20%)</title><rect x="704" y="228" width="2" height="15" fill="rgb(205,102,48)"/><text x="707.00" y="238.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (23 samples, 0.24%)</title><rect x="704" y="212" width="3" height="15" fill="rgb(223,193,44)"/><text x="707.00" y="222.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (10 samples, 0.10%)</title><rect x="707" y="292" width="2" height="15" fill="rgb(232,44,4)"/><text x="710.00" y="302.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (13 samples, 0.13%)</title><rect x="707" y="276" width="2" height="15" fill="rgb(249,160,19)"/><text x="710.00" y="286.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (18 samples, 0.19%)</title><rect x="707" y="260" width="2" height="15" fill="rgb(224,205,38)"/><text x="710.00" y="270.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (21 samples, 0.22%)</title><rect x="707" y="228" width="2" height="15" fill="rgb(222,9,17)"/><text x="710.00" y="238.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (21 samples, 0.22%)</title><rect x="707" y="244" width="2" height="15" fill="rgb(244,2,40)"/><text x="710.00" y="254.50"></text></g><g><title>set (trie/hexary.py:104) (57 samples, 0.59%)</title><rect x="702" y="180" width="7" height="15" fill="rgb(251,68,39)"/><text x="705.00" y="190.50"></text></g><g><title>_set (trie/hexary.py:122) (54 samples, 0.56%)</title><rect x="703" y="196" width="6" height="15" fill="rgb(239,223,33)"/><text x="706.00" y="206.50"></text></g><g><title>_set_branch_node (trie/hexary.py:426) (22 samples, 0.23%)</title><rect x="707" y="212" width="2" height="15" fill="rgb(238,199,16)"/><text x="710.00" y="222.50"></text></g><g><title>set (trie/hexary.py:108) (10 samples, 0.10%)</title><rect x="709" y="180" width="1" height="15" fill="rgb(235,222,44)"/><text x="712.00" y="190.50"></text></g><g><title>set_block_transactions (eth/vm/base.py:313) (91 samples, 0.94%)</title><rect x="699" y="116" width="12" height="15" fill="rgb(231,139,34)"/><text x="702.00" y="126.50"></text></g><g><title>make_trie_root_and_nodes (eth/db/trie.py:24) (91 samples, 0.94%)</title><rect x="699" y="132" width="12" height="15" fill="rgb(232,206,12)"/><text x="702.00" y="142.50"></text></g><g><title>_make_trie_root_and_nodes (eth/db/trie.py:38) (74 samples, 0.77%)</title><rect x="702" y="148" width="9" height="15" fill="rgb(235,127,26)"/><text x="705.00" y="158.50"></text></g><g><title>__setitem__ (trie/hexary.py:518) (74 samples, 0.77%)</title><rect x="702" y="164" width="9" height="15" fill="rgb(208,229,51)"/><text x="705.00" y="174.50"></text></g><g><title>import_block (eth/vm/base.py:289) (156 samples, 1.62%)</title><rect x="692" y="100" width="19" height="15" fill="rgb(209,135,28)"/><text x="695.00" y="110.50"></text></g><g><title>mine_block (eth/vm/base.py:295) (17 samples, 0.18%)</title><rect x="711" y="116" width="2" height="15" fill="rgb(232,22,29)"/><text x="714.00" y="126.50"></text></g><g><title>pack_block (eth/vm/base.py:384) (17 samples, 0.18%)</title><rect x="711" y="132" width="2" height="15" fill="rgb(228,205,29)"/><text x="714.00" y="142.50"></text></g><g><title>copy (rlp/sedes/serializable.py:284) (17 samples, 0.18%)</title><rect x="711" y="148" width="2" height="15" fill="rgb(253,164,13)"/><text x="714.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (rlp/sedes/serializable.py:285) (17 samples, 0.18%)</title><rect x="711" y="164" width="2" height="15" fill="rgb(254,111,45)"/><text x="714.00" y="174.50"></text></g><g><title>deepcopy (copy.py:150) (17 samples, 0.18%)</title><rect x="711" y="180" width="2" height="15" fill="rgb(212,211,24)"/><text x="714.00" y="190.50"></text></g><g><title>_deepcopy_tuple (copy.py:220) (17 samples, 0.18%)</title><rect x="711" y="196" width="2" height="15" fill="rgb(243,82,37)"/><text x="714.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (copy.py:220) (17 samples, 0.18%)</title><rect x="711" y="212" width="2" height="15" fill="rgb(236,23,6)"/><text x="714.00" y="222.50"></text></g><g><title>deepcopy (copy.py:161) (17 samples, 0.18%)</title><rect x="711" y="228" width="2" height="15" fill="rgb(243,93,46)"/><text x="714.00" y="238.50"></text></g><g><title>__deepcopy__ (rlp/sedes/serializable.py:295) (17 samples, 0.18%)</title><rect x="711" y="244" width="2" height="15" fill="rgb(218,41,26)"/><text x="714.00" y="254.50"></text></g><g><title>persist (eth/db/journal.py:413) (13 samples, 0.13%)</title><rect x="713" y="212" width="2" height="15" fill="rgb(205,56,34)"/><text x="716.00" y="222.50"></text></g><g><title>pop_all (eth/db/journal.py:224) (13 samples, 0.13%)</title><rect x="713" y="228" width="2" height="15" fill="rgb(205,77,41)"/><text x="716.00" y="238.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:369) (11 samples, 0.11%)</title><rect x="716" y="308" width="2" height="15" fill="rgb(250,209,42)"/><text x="719.00" y="318.50"></text></g><g><title>get_node (trie/hexary.py:284) (14 samples, 0.14%)</title><rect x="719" y="356" width="1" height="15" fill="rgb(217,150,54)"/><text x="722.00" y="366.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (14 samples, 0.14%)</title><rect x="719" y="372" width="1" height="15" fill="rgb(220,115,53)"/><text x="722.00" y="382.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (13 samples, 0.13%)</title><rect x="719" y="388" width="1" height="15" fill="rgb(240,1,8)"/><text x="722.00" y="398.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:369) (19 samples, 0.20%)</title><rect x="719" y="340" width="2" height="15" fill="rgb(241,67,32)"/><text x="722.00" y="350.50"></text></g><g><title>get_node (trie/hexary.py:284) (26 samples, 0.27%)</title><rect x="722" y="388" width="3" height="15" fill="rgb(208,113,43)"/><text x="725.00" y="398.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (25 samples, 0.26%)</title><rect x="722" y="404" width="3" height="15" fill="rgb(229,50,8)"/><text x="725.00" y="414.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (25 samples, 0.26%)</title><rect x="722" y="420" width="3" height="15" fill="rgb(227,177,15)"/><text x="725.00" y="430.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:369) (35 samples, 0.36%)</title><rect x="722" y="372" width="4" height="15" fill="rgb(224,3,23)"/><text x="725.00" y="382.50"></text></g><g><title>get_node (trie/hexary.py:285) (9 samples, 0.09%)</title><rect x="725" y="388" width="1" height="15" fill="rgb(252,102,44)"/><text x="728.00" y="398.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (9 samples, 0.09%)</title><rect x="725" y="404" width="1" height="15" fill="rgb(238,70,41)"/><text x="728.00" y="414.50"></text></g><g><title>decode (rlp/codec.py:230) (9 samples, 0.09%)</title><rect x="725" y="420" width="1" height="15" fill="rgb(209,46,1)"/><text x="728.00" y="430.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (9 samples, 0.09%)</title><rect x="726" y="452" width="2" height="15" fill="rgb(219,1,7)"/><text x="729.00" y="462.50"></text></g><g><title>_delete (trie/hexary.py:151) (11 samples, 0.11%)</title><rect x="726" y="388" width="2" height="15" fill="rgb(246,121,24)"/><text x="729.00" y="398.50"></text></g><g><title>__enter__ (contextlib.py:112) (11 samples, 0.11%)</title><rect x="726" y="404" width="2" height="15" fill="rgb(209,210,37)"/><text x="729.00" y="414.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (11 samples, 0.11%)</title><rect x="726" y="420" width="2" height="15" fill="rgb(232,12,7)"/><text x="729.00" y="430.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (10 samples, 0.10%)</title><rect x="726" y="436" width="2" height="15" fill="rgb(225,135,20)"/><text x="729.00" y="446.50"></text></g><g><title>get_node (trie/hexary.py:284) (13 samples, 0.13%)</title><rect x="728" y="420" width="1" height="15" fill="rgb(237,101,14)"/><text x="731.00" y="430.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (10 samples, 0.10%)</title><rect x="728" y="436" width="1" height="15" fill="rgb(218,216,49)"/><text x="731.00" y="446.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (10 samples, 0.10%)</title><rect x="728" y="452" width="1" height="15" fill="rgb(216,188,53)"/><text x="731.00" y="462.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:369) (18 samples, 0.19%)</title><rect x="728" y="404" width="2" height="15" fill="rgb(228,188,45)"/><text x="731.00" y="414.50"></text></g><g><title>_delete (trie/hexary.py:158) (20 samples, 0.21%)</title><rect x="733" y="452" width="2" height="15" fill="rgb(223,217,44)"/><text x="736.00" y="462.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:379) (9 samples, 0.09%)</title><rect x="734" y="468" width="1" height="15" fill="rgb(209,167,49)"/><text x="737.00" y="478.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:371) (38 samples, 0.39%)</title><rect x="731" y="436" width="5" height="15" fill="rgb(212,204,31)"/><text x="734.00" y="446.50"></text></g><g><title>_delete (trie/hexary.py:158) (49 samples, 0.51%)</title><rect x="731" y="420" width="6" height="15" fill="rgb(244,221,34)"/><text x="734.00" y="430.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:371) (60 samples, 0.62%)</title><rect x="730" y="404" width="7" height="15" fill="rgb(222,34,39)"/><text x="733.00" y="414.50"></text></g><g><title>_delete (trie/hexary.py:158) (87 samples, 0.90%)</title><rect x="728" y="388" width="10" height="15" fill="rgb(241,211,15)"/><text x="731.00" y="398.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:371) (101 samples, 1.05%)</title><rect x="726" y="372" width="13" height="15" fill="rgb(223,162,42)"/><text x="729.00" y="382.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:372) (9 samples, 0.09%)</title><rect x="739" y="372" width="1" height="15" fill="rgb(242,201,41)"/><text x="742.00" y="382.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (9 samples, 0.09%)</title><rect x="739" y="388" width="1" height="15" fill="rgb(239,140,23)"/><text x="742.00" y="398.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (9 samples, 0.09%)</title><rect x="739" y="404" width="1" height="15" fill="rgb(241,133,2)"/><text x="742.00" y="414.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (9 samples, 0.09%)</title><rect x="739" y="420" width="1" height="15" fill="rgb(241,224,31)"/><text x="742.00" y="430.50"></text></g><g><title>_delete (trie/hexary.py:158) (146 samples, 1.51%)</title><rect x="722" y="356" width="18" height="15" fill="rgb(221,121,5)"/><text x="725.00" y="366.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:371) (159 samples, 1.65%)</title><rect x="721" y="340" width="20" height="15" fill="rgb(238,95,3)"/><text x="724.00" y="350.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (9 samples, 0.09%)</title><rect x="741" y="356" width="1" height="15" fill="rgb(217,172,36)"/><text x="744.00" y="366.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (9 samples, 0.09%)</title><rect x="741" y="372" width="1" height="15" fill="rgb(235,15,13)"/><text x="744.00" y="382.50"></text></g><g><title>_delete (trie/hexary.py:158) (189 samples, 1.96%)</title><rect x="719" y="324" width="23" height="15" fill="rgb(224,140,0)"/><text x="722.00" y="334.50">_..</text></g><g><title>_delete_branch_node (trie/hexary.py:372) (11 samples, 0.11%)</title><rect x="741" y="340" width="1" height="15" fill="rgb(218,148,22)"/><text x="744.00" y="350.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:371) (200 samples, 2.07%)</title><rect x="718" y="308" width="24" height="15" fill="rgb(224,109,38)"/><text x="721.00" y="318.50">_..</text></g><g><title>_persist_node (trie/hexary.py:317) (9 samples, 0.09%)</title><rect x="742" y="324" width="1" height="15" fill="rgb(215,165,5)"/><text x="745.00" y="334.50"></text></g><g><title>_delete (trie/hexary.py:158) (221 samples, 2.29%)</title><rect x="716" y="292" width="27" height="15" fill="rgb(245,44,25)"/><text x="719.00" y="302.50">_..</text></g><g><title>_delete_branch_node (trie/hexary.py:372) (10 samples, 0.10%)</title><rect x="742" y="308" width="1" height="15" fill="rgb(205,104,29)"/><text x="745.00" y="318.50"></text></g><g><title>delete (trie/hexary.py:142) (227 samples, 2.35%)</title><rect x="716" y="276" width="27" height="15" fill="rgb(237,36,23)"/><text x="719.00" y="286.50">d..</text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (36 samples, 0.37%)</title><rect x="744" y="356" width="4" height="15" fill="rgb(226,86,4)"/><text x="747.00" y="366.50"></text></g><g><title>_exists (eth/db/batch.py:61) (39 samples, 0.40%)</title><rect x="744" y="324" width="5" height="15" fill="rgb(221,8,18)"/><text x="747.00" y="334.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (39 samples, 0.40%)</title><rect x="744" y="340" width="5" height="15" fill="rgb(216,64,46)"/><text x="747.00" y="350.50"></text></g><g><title>_set_root_node (trie/hexary.py:270) (42 samples, 0.43%)</title><rect x="744" y="292" width="5" height="15" fill="rgb(229,134,20)"/><text x="747.00" y="302.50"></text></g><g><title>__contains__ (eth/db/backends/base.py:35) (41 samples, 0.42%)</title><rect x="744" y="308" width="5" height="15" fill="rgb(213,114,28)"/><text x="747.00" y="318.50"></text></g><g><title>encode_raw (rlp/codec.py:75) (9 samples, 0.09%)</title><rect x="751" y="404" width="1" height="15" fill="rgb(220,113,23)"/><text x="754.00" y="414.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (15 samples, 0.16%)</title><rect x="750" y="372" width="2" height="15" fill="rgb(213,41,3)"/><text x="753.00" y="382.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (12 samples, 0.12%)</title><rect x="751" y="388" width="1" height="15" fill="rgb(210,149,6)"/><text x="754.00" y="398.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (18 samples, 0.19%)</title><rect x="750" y="356" width="2" height="15" fill="rgb(249,124,46)"/><text x="753.00" y="366.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (25 samples, 0.26%)</title><rect x="749" y="340" width="3" height="15" fill="rgb(218,75,54)"/><text x="752.00" y="350.50"></text></g><g><title>persist (eth/db/journal.py:418) (313 samples, 3.24%)</title><rect x="715" y="212" width="38" height="15" fill="rgb(223,123,39)"/><text x="718.00" y="222.50">per..</text></g><g><title>__delitem__ (eth/db/cache.py:32) (312 samples, 3.23%)</title><rect x="715" y="228" width="38" height="15" fill="rgb(216,31,35)"/><text x="718.00" y="238.50">__d..</text></g><g><title>__delitem__ (eth/db/storage.py:112) (312 samples, 3.23%)</title><rect x="715" y="244" width="38" height="15" fill="rgb(232,139,27)"/><text x="718.00" y="254.50">__d..</text></g><g><title>__delitem__ (trie/hexary.py:521) (312 samples, 3.23%)</title><rect x="715" y="260" width="38" height="15" fill="rgb(223,7,25)"/><text x="718.00" y="270.50">__d..</text></g><g><title>delete (trie/hexary.py:146) (77 samples, 0.80%)</title><rect x="743" y="276" width="10" height="15" fill="rgb(247,171,28)"/><text x="746.00" y="286.50"></text></g><g><title>_set_root_node (trie/hexary.py:273) (33 samples, 0.34%)</title><rect x="749" y="292" width="4" height="15" fill="rgb(208,89,51)"/><text x="752.00" y="302.50"></text></g><g><title>_set_raw_node (trie/hexary.py:249) (33 samples, 0.34%)</title><rect x="749" y="308" width="4" height="15" fill="rgb(215,67,14)"/><text x="752.00" y="318.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (31 samples, 0.32%)</title><rect x="749" y="324" width="4" height="15" fill="rgb(219,48,43)"/><text x="752.00" y="334.50"></text></g><g><title>get_node (trie/hexary.py:284) (9 samples, 0.09%)</title><rect x="753" y="292" width="1" height="15" fill="rgb(224,112,30)"/><text x="756.00" y="302.50"></text></g><g><title>set (trie/hexary.py:102) (30 samples, 0.31%)</title><rect x="753" y="276" width="4" height="15" fill="rgb(227,196,34)"/><text x="756.00" y="286.50"></text></g><g><title>get_node (trie/hexary.py:285) (20 samples, 0.21%)</title><rect x="754" y="292" width="3" height="15" fill="rgb(248,150,51)"/><text x="757.00" y="302.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (18 samples, 0.19%)</title><rect x="754" y="308" width="3" height="15" fill="rgb(213,19,12)"/><text x="757.00" y="318.50"></text></g><g><title>decode (rlp/codec.py:230) (17 samples, 0.18%)</title><rect x="755" y="324" width="2" height="15" fill="rgb(217,47,31)"/><text x="758.00" y="334.50"></text></g><g><title>consume_item (rlp/codec.py:206) (14 samples, 0.14%)</title><rect x="755" y="340" width="2" height="15" fill="rgb(238,12,31)"/><text x="758.00" y="350.50"></text></g><g><title>get_node (trie/hexary.py:284) (23 samples, 0.24%)</title><rect x="758" y="324" width="2" height="15" fill="rgb(232,126,15)"/><text x="761.00" y="334.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (22 samples, 0.23%)</title><rect x="758" y="340" width="2" height="15" fill="rgb(229,229,24)"/><text x="761.00" y="350.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (20 samples, 0.21%)</title><rect x="758" y="356" width="2" height="15" fill="rgb(232,39,6)"/><text x="761.00" y="366.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (42 samples, 0.43%)</title><rect x="758" y="308" width="5" height="15" fill="rgb(235,87,34)"/><text x="761.00" y="318.50"></text></g><g><title>get_node (trie/hexary.py:285) (18 samples, 0.19%)</title><rect x="760" y="324" width="3" height="15" fill="rgb(232,203,33)"/><text x="763.00" y="334.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (18 samples, 0.19%)</title><rect x="760" y="340" width="3" height="15" fill="rgb(233,64,1)"/><text x="763.00" y="350.50"></text></g><g><title>decode (rlp/codec.py:230) (16 samples, 0.17%)</title><rect x="761" y="356" width="2" height="15" fill="rgb(224,172,13)"/><text x="764.00" y="366.50"></text></g><g><title>consume_item (rlp/codec.py:206) (14 samples, 0.14%)</title><rect x="761" y="372" width="2" height="15" fill="rgb(240,109,5)"/><text x="764.00" y="382.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (13 samples, 0.13%)</title><rect x="763" y="404" width="2" height="15" fill="rgb(218,56,27)"/><text x="766.00" y="414.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (11 samples, 0.11%)</title><rect x="763" y="420" width="2" height="15" fill="rgb(223,4,19)"/><text x="766.00" y="430.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (10 samples, 0.10%)</title><rect x="764" y="436" width="1" height="15" fill="rgb(244,30,0)"/><text x="767.00" y="446.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (15 samples, 0.16%)</title><rect x="763" y="388" width="2" height="15" fill="rgb(215,176,30)"/><text x="766.00" y="398.50"></text></g><g><title>__enter__ (contextlib.py:112) (23 samples, 0.24%)</title><rect x="763" y="340" width="3" height="15" fill="rgb(250,128,19)"/><text x="766.00" y="350.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (23 samples, 0.24%)</title><rect x="763" y="356" width="3" height="15" fill="rgb(235,59,18)"/><text x="766.00" y="366.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (23 samples, 0.24%)</title><rect x="763" y="372" width="3" height="15" fill="rgb(230,18,53)"/><text x="766.00" y="382.50"></text></g><g><title>_set (trie/hexary.py:113) (25 samples, 0.26%)</title><rect x="763" y="324" width="3" height="15" fill="rgb(249,195,35)"/><text x="766.00" y="334.50"></text></g><g><title>get_node (trie/hexary.py:284) (49 samples, 0.51%)</title><rect x="766" y="356" width="6" height="15" fill="rgb(239,28,19)"/><text x="769.00" y="366.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (47 samples, 0.49%)</title><rect x="766" y="372" width="6" height="15" fill="rgb(244,123,41)"/><text x="769.00" y="382.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (44 samples, 0.46%)</title><rect x="767" y="388" width="5" height="15" fill="rgb(237,120,50)"/><text x="770.00" y="398.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (70 samples, 0.72%)</title><rect x="766" y="340" width="8" height="15" fill="rgb(213,160,31)"/><text x="769.00" y="350.50"></text></g><g><title>get_node (trie/hexary.py:285) (19 samples, 0.20%)</title><rect x="772" y="356" width="2" height="15" fill="rgb(212,94,47)"/><text x="775.00" y="366.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (19 samples, 0.20%)</title><rect x="772" y="372" width="2" height="15" fill="rgb(210,162,33)"/><text x="775.00" y="382.50"></text></g><g><title>decode (rlp/codec.py:230) (17 samples, 0.18%)</title><rect x="772" y="388" width="2" height="15" fill="rgb(241,30,15)"/><text x="775.00" y="398.50"></text></g><g><title>consume_item (rlp/codec.py:206) (13 samples, 0.13%)</title><rect x="773" y="404" width="1" height="15" fill="rgb(247,212,46)"/><text x="776.00" y="414.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (19 samples, 0.20%)</title><rect x="777" y="452" width="2" height="15" fill="rgb(222,170,15)"/><text x="780.00" y="462.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (14 samples, 0.14%)</title><rect x="777" y="468" width="2" height="15" fill="rgb(214,78,52)"/><text x="780.00" y="478.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (21 samples, 0.22%)</title><rect x="777" y="436" width="2" height="15" fill="rgb(213,189,37)"/><text x="780.00" y="446.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (28 samples, 0.29%)</title><rect x="776" y="420" width="3" height="15" fill="rgb(210,156,54)"/><text x="779.00" y="430.50"></text></g><g><title>__enter__ (contextlib.py:112) (39 samples, 0.40%)</title><rect x="775" y="372" width="5" height="15" fill="rgb(220,66,47)"/><text x="778.00" y="382.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (37 samples, 0.38%)</title><rect x="775" y="388" width="5" height="15" fill="rgb(254,171,29)"/><text x="778.00" y="398.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (36 samples, 0.37%)</title><rect x="775" y="404" width="5" height="15" fill="rgb(222,145,48)"/><text x="778.00" y="414.50"></text></g><g><title>_set (trie/hexary.py:113) (43 samples, 0.45%)</title><rect x="775" y="356" width="5" height="15" fill="rgb(248,92,19)"/><text x="778.00" y="366.50"></text></g><g><title>get_node (trie/hexary.py:284) (50 samples, 0.52%)</title><rect x="781" y="388" width="6" height="15" fill="rgb(247,42,5)"/><text x="784.00" y="398.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (49 samples, 0.51%)</title><rect x="781" y="404" width="6" height="15" fill="rgb(228,186,4)"/><text x="784.00" y="414.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (49 samples, 0.51%)</title><rect x="781" y="420" width="6" height="15" fill="rgb(249,169,13)"/><text x="784.00" y="430.50"></text></g><g><title>decode (rlp/codec.py:230) (17 samples, 0.18%)</title><rect x="787" y="420" width="2" height="15" fill="rgb(250,12,18)"/><text x="790.00" y="430.50"></text></g><g><title>consume_item (rlp/codec.py:206) (11 samples, 0.11%)</title><rect x="788" y="436" width="1" height="15" fill="rgb(231,71,12)"/><text x="791.00" y="446.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (70 samples, 0.72%)</title><rect x="781" y="372" width="8" height="15" fill="rgb(217,197,22)"/><text x="784.00" y="382.50"></text></g><g><title>get_node (trie/hexary.py:285) (19 samples, 0.20%)</title><rect x="787" y="388" width="2" height="15" fill="rgb(217,52,25)"/><text x="790.00" y="398.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (19 samples, 0.20%)</title><rect x="787" y="404" width="2" height="15" fill="rgb(221,80,3)"/><text x="790.00" y="414.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (11 samples, 0.11%)</title><rect x="791" y="484" width="2" height="15" fill="rgb(212,127,31)"/><text x="794.00" y="494.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (14 samples, 0.14%)</title><rect x="791" y="468" width="2" height="15" fill="rgb(249,107,9)"/><text x="794.00" y="478.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (22 samples, 0.23%)</title><rect x="791" y="452" width="2" height="15" fill="rgb(242,83,43)"/><text x="794.00" y="462.50"></text></g><g><title>__enter__ (contextlib.py:112) (29 samples, 0.30%)</title><rect x="790" y="404" width="3" height="15" fill="rgb(234,63,29)"/><text x="793.00" y="414.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (28 samples, 0.29%)</title><rect x="790" y="420" width="3" height="15" fill="rgb(232,54,24)"/><text x="793.00" y="430.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (28 samples, 0.29%)</title><rect x="790" y="436" width="3" height="15" fill="rgb(242,2,38)"/><text x="793.00" y="446.50"></text></g><g><title>_set (trie/hexary.py:113) (34 samples, 0.35%)</title><rect x="790" y="388" width="4" height="15" fill="rgb(237,173,24)"/><text x="793.00" y="398.50"></text></g><g><title>get_node (trie/hexary.py:284) (46 samples, 0.48%)</title><rect x="794" y="420" width="6" height="15" fill="rgb(220,9,11)"/><text x="797.00" y="430.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (43 samples, 0.45%)</title><rect x="794" y="436" width="6" height="15" fill="rgb(210,182,10)"/><text x="797.00" y="446.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (42 samples, 0.43%)</title><rect x="795" y="452" width="5" height="15" fill="rgb(239,76,17)"/><text x="798.00" y="462.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (52 samples, 0.54%)</title><rect x="794" y="404" width="6" height="15" fill="rgb(214,148,15)"/><text x="797.00" y="414.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (9 samples, 0.09%)</title><rect x="802" y="484" width="1" height="15" fill="rgb(238,146,5)"/><text x="805.00" y="494.50"></text></g><g><title>__enter__ (contextlib.py:112) (17 samples, 0.18%)</title><rect x="801" y="436" width="2" height="15" fill="rgb(210,28,10)"/><text x="804.00" y="446.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (16 samples, 0.17%)</title><rect x="801" y="452" width="2" height="15" fill="rgb(238,128,25)"/><text x="804.00" y="462.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (16 samples, 0.17%)</title><rect x="801" y="468" width="2" height="15" fill="rgb(235,128,16)"/><text x="804.00" y="478.50"></text></g><g><title>_set (trie/hexary.py:113) (19 samples, 0.20%)</title><rect x="801" y="420" width="2" height="15" fill="rgb(205,137,45)"/><text x="804.00" y="430.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (27 samples, 0.28%)</title><rect x="804" y="484" width="3" height="15" fill="rgb(238,117,20)"/><text x="807.00" y="494.50"></text></g><g><title>get_node (trie/hexary.py:284) (28 samples, 0.29%)</title><rect x="804" y="452" width="4" height="15" fill="rgb(205,74,23)"/><text x="807.00" y="462.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (28 samples, 0.29%)</title><rect x="804" y="468" width="4" height="15" fill="rgb(209,38,21)"/><text x="807.00" y="478.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (35 samples, 0.36%)</title><rect x="804" y="436" width="4" height="15" fill="rgb(227,229,30)"/><text x="807.00" y="446.50"></text></g><g><title>_set (trie/hexary.py:113) (12 samples, 0.12%)</title><rect x="809" y="452" width="1" height="15" fill="rgb(217,124,18)"/><text x="812.00" y="462.50"></text></g><g><title>__enter__ (contextlib.py:112) (12 samples, 0.12%)</title><rect x="809" y="468" width="1" height="15" fill="rgb(226,70,41)"/><text x="812.00" y="478.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (12 samples, 0.12%)</title><rect x="809" y="484" width="1" height="15" fill="rgb(223,54,25)"/><text x="812.00" y="494.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (10 samples, 0.10%)</title><rect x="809" y="500" width="1" height="15" fill="rgb(217,22,4)"/><text x="812.00" y="510.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (9 samples, 0.09%)</title><rect x="809" y="516" width="1" height="15" fill="rgb(214,114,41)"/><text x="812.00" y="526.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (9 samples, 0.09%)</title><rect x="809" y="532" width="1" height="15" fill="rgb(217,86,50)"/><text x="812.00" y="542.50"></text></g><g><title>_set (trie/hexary.py:120) (17 samples, 0.18%)</title><rect x="810" y="452" width="3" height="15" fill="rgb(253,216,18)"/><text x="813.00" y="462.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (9 samples, 0.09%)</title><rect x="813" y="468" width="1" height="15" fill="rgb(207,221,32)"/><text x="816.00" y="478.50"></text></g><g><title>_set (trie/hexary.py:122) (19 samples, 0.20%)</title><rect x="813" y="452" width="2" height="15" fill="rgb(249,103,12)"/><text x="816.00" y="462.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (55 samples, 0.57%)</title><rect x="808" y="436" width="7" height="15" fill="rgb(240,61,30)"/><text x="811.00" y="446.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (11 samples, 0.11%)</title><rect x="816" y="500" width="1" height="15" fill="rgb(236,211,21)"/><text x="819.00" y="510.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (10 samples, 0.10%)</title><rect x="816" y="516" width="1" height="15" fill="rgb(217,119,34)"/><text x="819.00" y="526.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (9 samples, 0.09%)</title><rect x="816" y="532" width="1" height="15" fill="rgb(209,136,44)"/><text x="819.00" y="542.50"></text></g><g><title>_set (trie/hexary.py:122) (109 samples, 1.13%)</title><rect x="804" y="420" width="13" height="15" fill="rgb(217,136,47)"/><text x="807.00" y="430.50"></text></g><g><title>_set_branch_node (trie/hexary.py:426) (19 samples, 0.20%)</title><rect x="815" y="436" width="2" height="15" fill="rgb(210,144,23)"/><text x="818.00" y="446.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (19 samples, 0.20%)</title><rect x="815" y="452" width="2" height="15" fill="rgb(246,201,27)"/><text x="818.00" y="462.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (19 samples, 0.20%)</title><rect x="815" y="468" width="2" height="15" fill="rgb(212,116,42)"/><text x="818.00" y="478.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (16 samples, 0.17%)</title><rect x="815" y="484" width="2" height="15" fill="rgb(208,202,27)"/><text x="818.00" y="494.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (144 samples, 1.49%)</title><rect x="800" y="404" width="18" height="15" fill="rgb(232,184,36)"/><text x="803.00" y="414.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (9 samples, 0.09%)</title><rect x="818" y="468" width="1" height="15" fill="rgb(205,201,25)"/><text x="821.00" y="478.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (13 samples, 0.13%)</title><rect x="818" y="420" width="2" height="15" fill="rgb(246,143,54)"/><text x="821.00" y="430.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (13 samples, 0.13%)</title><rect x="818" y="436" width="2" height="15" fill="rgb(249,125,48)"/><text x="821.00" y="446.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (12 samples, 0.12%)</title><rect x="818" y="452" width="2" height="15" fill="rgb(208,189,24)"/><text x="821.00" y="462.50"></text></g><g><title>_set (trie/hexary.py:122) (211 samples, 2.19%)</title><rect x="794" y="388" width="26" height="15" fill="rgb(224,2,24)"/><text x="797.00" y="398.50">_..</text></g><g><title>_set_branch_node (trie/hexary.py:426) (15 samples, 0.16%)</title><rect x="818" y="404" width="2" height="15" fill="rgb(245,183,49)"/><text x="821.00" y="414.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (260 samples, 2.69%)</title><rect x="789" y="372" width="32" height="15" fill="rgb(237,86,27)"/><text x="792.00" y="382.50">_s..</text></g><g><title>_set (trie/hexary.py:124) (10 samples, 0.10%)</title><rect x="820" y="388" width="1" height="15" fill="rgb(231,75,4)"/><text x="823.00" y="398.50"></text></g><g><title>encode_raw (rlp/codec.py:75) (13 samples, 0.13%)</title><rect x="823" y="484" width="1" height="15" fill="rgb(210,73,1)"/><text x="826.00" y="494.50"></text></g><g><title>__instancecheck__ (abc.py:139) (10 samples, 0.10%)</title><rect x="823" y="500" width="1" height="15" fill="rgb(217,160,51)"/><text x="826.00" y="510.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (20 samples, 0.21%)</title><rect x="822" y="436" width="2" height="15" fill="rgb(234,16,10)"/><text x="825.00" y="446.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (18 samples, 0.19%)</title><rect x="822" y="452" width="2" height="15" fill="rgb(235,54,29)"/><text x="825.00" y="462.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (15 samples, 0.16%)</title><rect x="823" y="468" width="1" height="15" fill="rgb(212,54,20)"/><text x="826.00" y="478.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (25 samples, 0.26%)</title><rect x="822" y="420" width="3" height="15" fill="rgb(228,170,53)"/><text x="825.00" y="430.50"></text></g><g><title>_set (trie/hexary.py:122) (365 samples, 3.78%)</title><rect x="780" y="356" width="45" height="15" fill="rgb(245,185,36)"/><text x="783.00" y="366.50">_set..</text></g><g><title>_set_branch_node (trie/hexary.py:426) (33 samples, 0.34%)</title><rect x="821" y="372" width="4" height="15" fill="rgb(233,107,53)"/><text x="824.00" y="382.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (32 samples, 0.33%)</title><rect x="821" y="388" width="4" height="15" fill="rgb(224,170,30)"/><text x="824.00" y="398.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (32 samples, 0.33%)</title><rect x="821" y="404" width="4" height="15" fill="rgb(235,179,14)"/><text x="824.00" y="414.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (421 samples, 4.36%)</title><rect x="774" y="340" width="52" height="15" fill="rgb(213,193,33)"/><text x="777.00" y="350.50">_set_..</text></g><g><title>encode_raw (rlp/codec.py:81) (9 samples, 0.09%)</title><rect x="827" y="420" width="1" height="15" fill="rgb(211,151,33)"/><text x="830.00" y="430.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (12 samples, 0.12%)</title><rect x="827" y="404" width="1" height="15" fill="rgb(226,70,2)"/><text x="830.00" y="414.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (18 samples, 0.19%)</title><rect x="827" y="388" width="2" height="15" fill="rgb(239,102,51)"/><text x="830.00" y="398.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (26 samples, 0.27%)</title><rect x="826" y="356" width="3" height="15" fill="rgb(225,182,18)"/><text x="829.00" y="366.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (26 samples, 0.27%)</title><rect x="826" y="372" width="3" height="15" fill="rgb(245,61,41)"/><text x="829.00" y="382.50"></text></g><g><title>_set (trie/hexary.py:122) (519 samples, 5.37%)</title><rect x="766" y="324" width="63" height="15" fill="rgb(212,108,3)"/><text x="769.00" y="334.50">_set (..</text></g><g><title>_set_branch_node (trie/hexary.py:426) (27 samples, 0.28%)</title><rect x="826" y="340" width="3" height="15" fill="rgb(245,142,23)"/><text x="829.00" y="350.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (552 samples, 5.72%)</title><rect x="763" y="308" width="67" height="15" fill="rgb(214,106,21)"/><text x="766.00" y="318.50">_set_br..</text></g><g><title>encode_raw (rlp/codec.py:75) (11 samples, 0.11%)</title><rect x="832" y="420" width="1" height="15" fill="rgb(222,99,12)"/><text x="835.00" y="430.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (15 samples, 0.16%)</title><rect x="832" y="388" width="2" height="15" fill="rgb(239,193,53)"/><text x="835.00" y="398.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (14 samples, 0.14%)</title><rect x="832" y="404" width="2" height="15" fill="rgb(218,75,40)"/><text x="835.00" y="414.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (20 samples, 0.21%)</title><rect x="831" y="372" width="3" height="15" fill="rgb(252,206,17)"/><text x="834.00" y="382.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (31 samples, 0.32%)</title><rect x="831" y="356" width="3" height="15" fill="rgb(207,198,12)"/><text x="834.00" y="366.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (36 samples, 0.37%)</title><rect x="830" y="324" width="4" height="15" fill="rgb(248,129,38)"/><text x="833.00" y="334.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (36 samples, 0.37%)</title><rect x="830" y="340" width="4" height="15" fill="rgb(228,194,37)"/><text x="833.00" y="350.50"></text></g><g><title>_set (trie/hexary.py:122) (632 samples, 6.55%)</title><rect x="758" y="292" width="77" height="15" fill="rgb(244,84,5)"/><text x="761.00" y="302.50">_set (tr..</text></g><g><title>_set_branch_node (trie/hexary.py:426) (38 samples, 0.39%)</title><rect x="830" y="308" width="5" height="15" fill="rgb(215,113,39)"/><text x="833.00" y="318.50"></text></g><g><title>set (trie/hexary.py:104) (647 samples, 6.70%)</title><rect x="757" y="276" width="79" height="15" fill="rgb(231,29,9)"/><text x="760.00" y="286.50">set (trie..</text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (121 samples, 1.25%)</title><rect x="838" y="356" width="15" height="15" fill="rgb(222,213,38)"/><text x="841.00" y="366.50"></text></g><g><title>_exists (eth/db/batch.py:61) (143 samples, 1.48%)</title><rect x="836" y="324" width="18" height="15" fill="rgb(206,161,53)"/><text x="839.00" y="334.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (140 samples, 1.45%)</title><rect x="837" y="340" width="17" height="15" fill="rgb(241,80,13)"/><text x="840.00" y="350.50"></text></g><g><title>_set_root_node (trie/hexary.py:270) (148 samples, 1.53%)</title><rect x="836" y="292" width="18" height="15" fill="rgb(240,146,52)"/><text x="839.00" y="302.50"></text></g><g><title>__contains__ (eth/db/backends/base.py:35) (146 samples, 1.51%)</title><rect x="836" y="308" width="18" height="15" fill="rgb(234,177,50)"/><text x="839.00" y="318.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:302) (15 samples, 0.16%)</title><rect x="856" y="340" width="1" height="15" fill="rgb(209,197,51)"/><text x="859.00" y="350.50"></text></g><g><title>inner (eth_utils/functional.py:45) (13 samples, 0.13%)</title><rect x="856" y="356" width="1" height="15" fill="rgb(227,158,27)"/><text x="859.00" y="366.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:306) (27 samples, 0.28%)</title><rect x="858" y="356" width="3" height="15" fill="rgb(208,72,42)"/><text x="861.00" y="366.50"></text></g><g><title>encode_raw (rlp/codec.py:75) (11 samples, 0.11%)</title><rect x="863" y="404" width="2" height="15" fill="rgb(211,41,17)"/><text x="866.00" y="414.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (30 samples, 0.31%)</title><rect x="862" y="372" width="4" height="15" fill="rgb(243,12,45)"/><text x="865.00" y="382.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (26 samples, 0.27%)</title><rect x="862" y="388" width="4" height="15" fill="rgb(245,200,36)"/><text x="865.00" y="398.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (40 samples, 0.41%)</title><rect x="861" y="356" width="5" height="15" fill="rgb(208,154,24)"/><text x="864.00" y="366.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (75 samples, 0.78%)</title><rect x="857" y="340" width="10" height="15" fill="rgb(240,136,13)"/><text x="860.00" y="350.50"></text></g><g><title>_set_raw_node (trie/hexary.py:249) (125 samples, 1.29%)</title><rect x="854" y="308" width="16" height="15" fill="rgb(234,131,8)"/><text x="857.00" y="318.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (123 samples, 1.27%)</title><rect x="855" y="324" width="15" height="15" fill="rgb(253,98,13)"/><text x="858.00" y="334.50"></text></g><g><title>inner (eth_utils/functional.py:45) (25 samples, 0.26%)</title><rect x="867" y="340" width="3" height="15" fill="rgb(238,170,36)"/><text x="870.00" y="350.50"></text></g><g><title>set (trie/hexary.py:108) (278 samples, 2.88%)</title><rect x="836" y="276" width="34" height="15" fill="rgb(216,122,17)"/><text x="839.00" y="286.50">se..</text></g><g><title>_set_root_node (trie/hexary.py:273) (128 samples, 1.33%)</title><rect x="854" y="292" width="16" height="15" fill="rgb(212,83,25)"/><text x="857.00" y="302.50"></text></g><g><title>__setitem__ (eth/db/storage.py:100) (961 samples, 9.95%)</title><rect x="753" y="244" width="117" height="15" fill="rgb(230,142,43)"/><text x="756.00" y="254.50">__setitem__ (e..</text></g><g><title>__setitem__ (trie/hexary.py:518) (961 samples, 9.95%)</title><rect x="753" y="260" width="117" height="15" fill="rgb(216,216,27)"/><text x="756.00" y="270.50">__setitem__ (t..</text></g><g><title>make_state_root (eth/db/account.py:375) (1,295 samples, 13.41%)</title><rect x="713" y="180" width="158" height="15" fill="rgb(229,146,52)"/><text x="716.00" y="190.50">make_state_root (eth..</text></g><g><title>make_storage_root (eth/db/storage.py:241) (1,295 samples, 13.41%)</title><rect x="713" y="196" width="158" height="15" fill="rgb(238,135,37)"/><text x="716.00" y="206.50">make_storage_root (e..</text></g><g><title>persist (eth/db/journal.py:422) (968 samples, 10.02%)</title><rect x="753" y="212" width="118" height="15" fill="rgb(206,55,19)"/><text x="756.00" y="222.50">persist (eth/d..</text></g><g><title>__setitem__ (eth/db/cache.py:27) (967 samples, 10.01%)</title><rect x="753" y="228" width="118" height="15" fill="rgb(252,104,18)"/><text x="756.00" y="238.50">__setitem__ (e..</text></g><g><title>make_state_root (eth/db/account.py:383) (10 samples, 0.10%)</title><rect x="871" y="180" width="1" height="15" fill="rgb(212,224,39)"/><text x="874.00" y="190.50"></text></g><g><title>_set_storage_root (eth/db/account.py:198) (9 samples, 0.09%)</title><rect x="871" y="196" width="1" height="15" fill="rgb(226,146,5)"/><text x="874.00" y="206.50"></text></g><g><title>batch_commit (trie/utils/db.py:59) (10 samples, 0.10%)</title><rect x="873" y="276" width="1" height="15" fill="rgb(206,150,23)"/><text x="876.00" y="286.50"></text></g><g><title>__getitem__ (eth/db/diff.py:78) (13 samples, 0.13%)</title><rect x="877" y="324" width="1" height="15" fill="rgb(208,207,54)"/><text x="880.00" y="334.50"></text></g><g><title>__getitem__ (eth/db/batch.py:69) (57 samples, 0.59%)</title><rect x="876" y="308" width="7" height="15" fill="rgb(236,153,49)"/><text x="879.00" y="318.50"></text></g><g><title>__getitem__ (eth/db/diff.py:80) (31 samples, 0.32%)</title><rect x="879" y="324" width="4" height="15" fill="rgb(244,136,43)"/><text x="882.00" y="334.50"></text></g><g><title>__init__ (eth/db/diff.py:48) (16 samples, 0.17%)</title><rect x="881" y="340" width="2" height="15" fill="rgb(218,68,5)"/><text x="884.00" y="350.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (781 samples, 8.09%)</title><rect x="885" y="324" width="95" height="15" fill="rgb(207,161,9)"/><text x="888.00" y="334.50">__getitem__..</text></g><g><title>pop (_collections_abc.py:795) (865 samples, 8.96%)</title><rect x="876" y="292" width="105" height="15" fill="rgb(207,31,36)"/><text x="879.00" y="302.50">pop (_collec..</text></g><g><title>__getitem__ (eth/db/batch.py:74) (796 samples, 8.24%)</title><rect x="884" y="308" width="97" height="15" fill="rgb(231,123,2)"/><text x="887.00" y="318.50">__getitem__..</text></g><g><title>__getitem__ (eth/db/batch.py:69) (23 samples, 0.24%)</title><rect x="984" y="356" width="3" height="15" fill="rgb(242,119,10)"/><text x="987.00" y="366.50"></text></g><g><title>__getitem__ (eth/db/diff.py:80) (17 samples, 0.18%)</title><rect x="985" y="372" width="2" height="15" fill="rgb(231,58,12)"/><text x="988.00" y="382.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (34 samples, 0.35%)</title><rect x="988" y="372" width="4" height="15" fill="rgb(237,55,26)"/><text x="991.00" y="382.50"></text></g><g><title>__delitem__ (eth/db/batch.py:82) (72 samples, 0.75%)</title><rect x="983" y="308" width="9" height="15" fill="rgb(218,45,50)"/><text x="986.00" y="318.50"></text></g><g><title>__contains__ (eth/db/backends/base.py:35) (67 samples, 0.69%)</title><rect x="984" y="324" width="8" height="15" fill="rgb(245,112,54)"/><text x="987.00" y="334.50"></text></g><g><title>_exists (eth/db/batch.py:61) (66 samples, 0.68%)</title><rect x="984" y="340" width="8" height="15" fill="rgb(206,76,36)"/><text x="987.00" y="350.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (37 samples, 0.38%)</title><rect x="988" y="356" width="4" height="15" fill="rgb(217,106,20)"/><text x="991.00" y="366.50"></text></g><g><title>__exit__ (contextlib.py:119) (987 samples, 10.22%)</title><rect x="872" y="196" width="121" height="15" fill="rgb(208,69,40)"/><text x="875.00" y="206.50">__exit__ (conte..</text></g><g><title>squash_changes (eth/db/hash_trie.py:21) (987 samples, 10.22%)</title><rect x="872" y="212" width="121" height="15" fill="rgb(241,210,51)"/><text x="875.00" y="222.50">squash_changes ..</text></g><g><title>__exit__ (contextlib.py:119) (987 samples, 10.22%)</title><rect x="872" y="228" width="121" height="15" fill="rgb(241,109,46)"/><text x="875.00" y="238.50">__exit__ (conte..</text></g><g><title>squash_changes (trie/hexary.py:534) (987 samples, 10.22%)</title><rect x="872" y="244" width="121" height="15" fill="rgb(230,229,25)"/><text x="875.00" y="254.50">squash_changes ..</text></g><g><title>__exit__ (contextlib.py:119) (987 samples, 10.22%)</title><rect x="872" y="260" width="121" height="15" fill="rgb(232,132,30)"/><text x="875.00" y="270.50">__exit__ (conte..</text></g><g><title>batch_commit (trie/utils/db.py:61) (972 samples, 10.07%)</title><rect x="874" y="276" width="119" height="15" fill="rgb(242,193,14)"/><text x="877.00" y="286.50">batch_commit (..</text></g><g><title>pop (_collections_abc.py:801) (86 samples, 0.89%)</title><rect x="982" y="292" width="11" height="15" fill="rgb(246,96,44)"/><text x="985.00" y="302.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:371) (19 samples, 0.20%)</title><rect x="993" y="276" width="3" height="15" fill="rgb(211,147,44)"/><text x="996.00" y="286.50"></text></g><g><title>_delete (trie/hexary.py:158) (19 samples, 0.20%)</title><rect x="993" y="292" width="3" height="15" fill="rgb(233,83,29)"/><text x="996.00" y="302.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:371) (18 samples, 0.19%)</title><rect x="993" y="308" width="3" height="15" fill="rgb(234,194,29)"/><text x="996.00" y="318.50"></text></g><g><title>_delete (trie/hexary.py:158) (16 samples, 0.17%)</title><rect x="994" y="324" width="2" height="15" fill="rgb(232,54,3)"/><text x="997.00" y="334.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:371) (16 samples, 0.17%)</title><rect x="994" y="340" width="2" height="15" fill="rgb(217,2,28)"/><text x="997.00" y="350.50"></text></g><g><title>_delete (trie/hexary.py:158) (13 samples, 0.13%)</title><rect x="994" y="356" width="2" height="15" fill="rgb(208,29,50)"/><text x="997.00" y="366.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:371) (13 samples, 0.13%)</title><rect x="994" y="372" width="2" height="15" fill="rgb(219,13,37)"/><text x="997.00" y="382.50"></text></g><g><title>_delete (trie/hexary.py:158) (13 samples, 0.13%)</title><rect x="994" y="388" width="2" height="15" fill="rgb(240,226,13)"/><text x="997.00" y="398.50"></text></g><g><title>_delete_branch_node (trie/hexary.py:371) (10 samples, 0.10%)</title><rect x="994" y="404" width="2" height="15" fill="rgb(207,9,7)"/><text x="997.00" y="414.50"></text></g><g><title>_delete (trie/hexary.py:158) (10 samples, 0.10%)</title><rect x="994" y="420" width="2" height="15" fill="rgb(245,106,16)"/><text x="997.00" y="430.50"></text></g><g><title>delete (trie/hexary.py:142) (22 samples, 0.23%)</title><rect x="993" y="244" width="3" height="15" fill="rgb(251,27,12)"/><text x="996.00" y="254.50"></text></g><g><title>_delete (trie/hexary.py:158) (22 samples, 0.23%)</title><rect x="993" y="260" width="3" height="15" fill="rgb(214,101,25)"/><text x="996.00" y="270.50"></text></g><g><title>_apply_account_diff_without_proof (eth/db/account.py:473) (30 samples, 0.31%)</title><rect x="993" y="196" width="4" height="15" fill="rgb(215,91,31)"/><text x="996.00" y="206.50"></text></g><g><title>__delitem__ (eth/db/keymap.py:36) (30 samples, 0.31%)</title><rect x="993" y="212" width="4" height="15" fill="rgb(214,209,13)"/><text x="996.00" y="222.50"></text></g><g><title>__delitem__ (trie/hexary.py:521) (30 samples, 0.31%)</title><rect x="993" y="228" width="4" height="15" fill="rgb(238,12,48)"/><text x="996.00" y="238.50"></text></g><g><title>set (trie/hexary.py:102) (31 samples, 0.32%)</title><rect x="997" y="244" width="4" height="15" fill="rgb(222,1,48)"/><text x="1000.00" y="254.50"></text></g><g><title>get_node (trie/hexary.py:285) (31 samples, 0.32%)</title><rect x="997" y="260" width="4" height="15" fill="rgb(245,144,6)"/><text x="1000.00" y="270.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (30 samples, 0.31%)</title><rect x="997" y="276" width="4" height="15" fill="rgb(209,210,45)"/><text x="1000.00" y="286.50"></text></g><g><title>decode (rlp/codec.py:230) (28 samples, 0.29%)</title><rect x="998" y="292" width="3" height="15" fill="rgb(244,74,25)"/><text x="1001.00" y="302.50"></text></g><g><title>consume_item (rlp/codec.py:206) (22 samples, 0.23%)</title><rect x="998" y="308" width="3" height="15" fill="rgb(218,143,4)"/><text x="1001.00" y="318.50"></text></g><g><title>decode (rlp/codec.py:230) (11 samples, 0.11%)</title><rect x="1003" y="324" width="1" height="15" fill="rgb(236,178,52)"/><text x="1006.00" y="334.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (17 samples, 0.18%)</title><rect x="1002" y="276" width="2" height="15" fill="rgb(206,224,14)"/><text x="1005.00" y="286.50"></text></g><g><title>get_node (trie/hexary.py:285) (17 samples, 0.18%)</title><rect x="1002" y="292" width="2" height="15" fill="rgb(247,11,32)"/><text x="1005.00" y="302.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (17 samples, 0.18%)</title><rect x="1002" y="308" width="2" height="15" fill="rgb(235,132,10)"/><text x="1005.00" y="318.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (27 samples, 0.28%)</title><rect x="1005" y="308" width="4" height="15" fill="rgb(217,31,54)"/><text x="1008.00" y="318.50"></text></g><g><title>get_node (trie/hexary.py:285) (20 samples, 0.21%)</title><rect x="1006" y="324" width="3" height="15" fill="rgb(206,37,35)"/><text x="1009.00" y="334.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (19 samples, 0.20%)</title><rect x="1006" y="340" width="3" height="15" fill="rgb(233,150,18)"/><text x="1009.00" y="350.50"></text></g><g><title>decode (rlp/codec.py:230) (19 samples, 0.20%)</title><rect x="1006" y="356" width="3" height="15" fill="rgb(215,58,32)"/><text x="1009.00" y="366.50"></text></g><g><title>consume_item (rlp/codec.py:206) (16 samples, 0.17%)</title><rect x="1007" y="372" width="2" height="15" fill="rgb(252,43,24)"/><text x="1010.00" y="382.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (9 samples, 0.09%)</title><rect x="1010" y="404" width="1" height="15" fill="rgb(216,16,20)"/><text x="1013.00" y="414.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (13 samples, 0.13%)</title><rect x="1009" y="388" width="2" height="15" fill="rgb(233,64,6)"/><text x="1012.00" y="398.50"></text></g><g><title>__enter__ (contextlib.py:112) (22 samples, 0.23%)</title><rect x="1009" y="340" width="3" height="15" fill="rgb(245,75,9)"/><text x="1012.00" y="350.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (21 samples, 0.22%)</title><rect x="1009" y="356" width="3" height="15" fill="rgb(205,24,54)"/><text x="1012.00" y="366.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (21 samples, 0.22%)</title><rect x="1009" y="372" width="3" height="15" fill="rgb(245,72,16)"/><text x="1012.00" y="382.50"></text></g><g><title>_set (trie/hexary.py:113) (25 samples, 0.26%)</title><rect x="1009" y="324" width="3" height="15" fill="rgb(247,164,8)"/><text x="1012.00" y="334.50"></text></g><g><title>get_node (trie/hexary.py:284) (51 samples, 0.53%)</title><rect x="1012" y="356" width="6" height="15" fill="rgb(233,139,10)"/><text x="1015.00" y="366.50"></text></g><g><title>__getitem__ (trie/utils/db.py:33) (51 samples, 0.53%)</title><rect x="1012" y="372" width="6" height="15" fill="rgb(221,78,19)"/><text x="1015.00" y="382.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (48 samples, 0.50%)</title><rect x="1012" y="388" width="6" height="15" fill="rgb(240,62,27)"/><text x="1015.00" y="398.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (47 samples, 0.49%)</title><rect x="1012" y="404" width="6" height="15" fill="rgb(225,29,26)"/><text x="1015.00" y="414.50"></text></g><g><title>decode (rlp/codec.py:230) (17 samples, 0.18%)</title><rect x="1018" y="388" width="2" height="15" fill="rgb(222,26,13)"/><text x="1021.00" y="398.50"></text></g><g><title>consume_item (rlp/codec.py:206) (14 samples, 0.14%)</title><rect x="1019" y="404" width="1" height="15" fill="rgb(236,196,9)"/><text x="1022.00" y="414.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (71 samples, 0.74%)</title><rect x="1012" y="340" width="8" height="15" fill="rgb(210,208,30)"/><text x="1015.00" y="350.50"></text></g><g><title>get_node (trie/hexary.py:285) (19 samples, 0.20%)</title><rect x="1018" y="356" width="2" height="15" fill="rgb(225,154,19)"/><text x="1021.00" y="366.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (19 samples, 0.20%)</title><rect x="1018" y="372" width="2" height="15" fill="rgb(239,190,0)"/><text x="1021.00" y="382.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:306) (9 samples, 0.09%)</title><rect x="1021" y="436" width="1" height="15" fill="rgb(251,195,51)"/><text x="1024.00" y="446.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (15 samples, 0.16%)</title><rect x="1023" y="452" width="2" height="15" fill="rgb(251,17,7)"/><text x="1026.00" y="462.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (13 samples, 0.13%)</title><rect x="1023" y="468" width="2" height="15" fill="rgb(234,170,50)"/><text x="1026.00" y="478.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (19 samples, 0.20%)</title><rect x="1022" y="436" width="3" height="15" fill="rgb(240,27,14)"/><text x="1025.00" y="446.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (35 samples, 0.36%)</title><rect x="1021" y="420" width="5" height="15" fill="rgb(235,150,16)"/><text x="1024.00" y="430.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (42 samples, 0.43%)</title><rect x="1021" y="388" width="5" height="15" fill="rgb(217,35,29)"/><text x="1024.00" y="398.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (42 samples, 0.43%)</title><rect x="1021" y="404" width="5" height="15" fill="rgb(245,51,15)"/><text x="1024.00" y="414.50"></text></g><g><title>__enter__ (contextlib.py:112) (43 samples, 0.45%)</title><rect x="1021" y="372" width="5" height="15" fill="rgb(224,161,37)"/><text x="1024.00" y="382.50"></text></g><g><title>_set (trie/hexary.py:113) (44 samples, 0.46%)</title><rect x="1021" y="356" width="5" height="15" fill="rgb(223,67,23)"/><text x="1024.00" y="366.50"></text></g><g><title>get_node (trie/hexary.py:284) (36 samples, 0.37%)</title><rect x="1026" y="388" width="5" height="15" fill="rgb(229,95,29)"/><text x="1029.00" y="398.50"></text></g><g><title>__getitem__ (trie/utils/db.py:33) (36 samples, 0.37%)</title><rect x="1026" y="404" width="5" height="15" fill="rgb(244,126,42)"/><text x="1029.00" y="414.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (35 samples, 0.36%)</title><rect x="1026" y="420" width="5" height="15" fill="rgb(218,124,17)"/><text x="1029.00" y="430.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (35 samples, 0.36%)</title><rect x="1026" y="436" width="5" height="15" fill="rgb(232,25,28)"/><text x="1029.00" y="446.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (60 samples, 0.62%)</title><rect x="1026" y="372" width="7" height="15" fill="rgb(235,101,24)"/><text x="1029.00" y="382.50"></text></g><g><title>get_node (trie/hexary.py:285) (24 samples, 0.25%)</title><rect x="1031" y="388" width="2" height="15" fill="rgb(233,112,52)"/><text x="1034.00" y="398.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (23 samples, 0.24%)</title><rect x="1031" y="404" width="2" height="15" fill="rgb(229,211,45)"/><text x="1034.00" y="414.50"></text></g><g><title>decode (rlp/codec.py:230) (22 samples, 0.23%)</title><rect x="1031" y="420" width="2" height="15" fill="rgb(217,100,45)"/><text x="1034.00" y="430.50"></text></g><g><title>consume_item (rlp/codec.py:206) (20 samples, 0.21%)</title><rect x="1031" y="436" width="2" height="15" fill="rgb(211,49,30)"/><text x="1034.00" y="446.50"></text></g><g><title>encode_raw (rlp/codec.py:75) (22 samples, 0.23%)</title><rect x="1036" y="516" width="3" height="15" fill="rgb(208,150,29)"/><text x="1039.00" y="526.50"></text></g><g><title>__instancecheck__ (abc.py:139) (13 samples, 0.13%)</title><rect x="1037" y="532" width="2" height="15" fill="rgb(206,25,19)"/><text x="1040.00" y="542.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (31 samples, 0.32%)</title><rect x="1036" y="484" width="4" height="15" fill="rgb(214,69,1)"/><text x="1039.00" y="494.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (28 samples, 0.29%)</title><rect x="1036" y="500" width="4" height="15" fill="rgb(215,65,33)"/><text x="1039.00" y="510.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (35 samples, 0.36%)</title><rect x="1036" y="468" width="4" height="15" fill="rgb(222,221,13)"/><text x="1039.00" y="478.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (45 samples, 0.47%)</title><rect x="1035" y="452" width="6" height="15" fill="rgb(214,62,6)"/><text x="1038.00" y="462.50"></text></g><g><title>__enter__ (contextlib.py:112) (59 samples, 0.61%)</title><rect x="1034" y="404" width="7" height="15" fill="rgb(218,179,35)"/><text x="1037.00" y="414.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (55 samples, 0.57%)</title><rect x="1034" y="420" width="7" height="15" fill="rgb(242,127,18)"/><text x="1037.00" y="430.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (55 samples, 0.57%)</title><rect x="1034" y="436" width="7" height="15" fill="rgb(217,117,22)"/><text x="1037.00" y="446.50"></text></g><g><title>_set (trie/hexary.py:113) (65 samples, 0.67%)</title><rect x="1034" y="388" width="8" height="15" fill="rgb(208,212,15)"/><text x="1037.00" y="398.50"></text></g><g><title>get_node (trie/hexary.py:284) (85 samples, 0.88%)</title><rect x="1042" y="420" width="10" height="15" fill="rgb(238,141,15)"/><text x="1045.00" y="430.50"></text></g><g><title>__getitem__ (trie/utils/db.py:33) (85 samples, 0.88%)</title><rect x="1042" y="436" width="10" height="15" fill="rgb(252,10,38)"/><text x="1045.00" y="446.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (79 samples, 0.82%)</title><rect x="1043" y="452" width="9" height="15" fill="rgb(225,33,38)"/><text x="1046.00" y="462.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (75 samples, 0.78%)</title><rect x="1043" y="468" width="9" height="15" fill="rgb(209,130,5)"/><text x="1046.00" y="478.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (105 samples, 1.09%)</title><rect x="1042" y="404" width="13" height="15" fill="rgb(207,150,4)"/><text x="1045.00" y="414.50"></text></g><g><title>get_node (trie/hexary.py:285) (19 samples, 0.20%)</title><rect x="1052" y="420" width="3" height="15" fill="rgb(221,34,35)"/><text x="1055.00" y="430.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (17 samples, 0.18%)</title><rect x="1053" y="436" width="2" height="15" fill="rgb(244,128,43)"/><text x="1056.00" y="446.50"></text></g><g><title>decode (rlp/codec.py:230) (14 samples, 0.14%)</title><rect x="1053" y="452" width="2" height="15" fill="rgb(229,11,24)"/><text x="1056.00" y="462.50"></text></g><g><title>consume_item (rlp/codec.py:206) (11 samples, 0.11%)</title><rect x="1053" y="468" width="2" height="15" fill="rgb(206,108,6)"/><text x="1056.00" y="478.50"></text></g><g><title>encode_raw (rlp/codec.py:75) (9 samples, 0.09%)</title><rect x="1056" y="548" width="2" height="15" fill="rgb(240,221,28)"/><text x="1059.00" y="558.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (20 samples, 0.21%)</title><rect x="1056" y="516" width="2" height="15" fill="rgb(213,108,29)"/><text x="1059.00" y="526.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (18 samples, 0.19%)</title><rect x="1056" y="532" width="2" height="15" fill="rgb(211,137,8)"/><text x="1059.00" y="542.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (26 samples, 0.27%)</title><rect x="1056" y="500" width="3" height="15" fill="rgb(237,224,16)"/><text x="1059.00" y="510.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (29 samples, 0.30%)</title><rect x="1056" y="484" width="3" height="15" fill="rgb(251,48,7)"/><text x="1059.00" y="494.50"></text></g><g><title>__enter__ (contextlib.py:112) (35 samples, 0.36%)</title><rect x="1055" y="436" width="4" height="15" fill="rgb(216,218,33)"/><text x="1058.00" y="446.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (35 samples, 0.36%)</title><rect x="1055" y="452" width="4" height="15" fill="rgb(213,39,17)"/><text x="1058.00" y="462.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (34 samples, 0.35%)</title><rect x="1055" y="468" width="4" height="15" fill="rgb(229,152,15)"/><text x="1058.00" y="478.50"></text></g><g><title>_set (trie/hexary.py:113) (37 samples, 0.38%)</title><rect x="1055" y="420" width="4" height="15" fill="rgb(218,59,34)"/><text x="1058.00" y="430.50"></text></g><g><title>get_node (trie/hexary.py:284) (61 samples, 0.63%)</title><rect x="1060" y="452" width="7" height="15" fill="rgb(216,61,2)"/><text x="1063.00" y="462.50"></text></g><g><title>__getitem__ (trie/utils/db.py:33) (60 samples, 0.62%)</title><rect x="1060" y="468" width="7" height="15" fill="rgb(213,221,48)"/><text x="1063.00" y="478.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (59 samples, 0.61%)</title><rect x="1060" y="484" width="7" height="15" fill="rgb(234,114,33)"/><text x="1063.00" y="494.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (57 samples, 0.59%)</title><rect x="1060" y="500" width="7" height="15" fill="rgb(215,188,27)"/><text x="1063.00" y="510.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (76 samples, 0.79%)</title><rect x="1060" y="436" width="9" height="15" fill="rgb(226,26,36)"/><text x="1063.00" y="446.50"></text></g><g><title>get_node (trie/hexary.py:285) (15 samples, 0.16%)</title><rect x="1067" y="452" width="2" height="15" fill="rgb(245,178,9)"/><text x="1070.00" y="462.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (15 samples, 0.16%)</title><rect x="1067" y="468" width="2" height="15" fill="rgb(231,37,24)"/><text x="1070.00" y="478.50"></text></g><g><title>decode (rlp/codec.py:230) (14 samples, 0.14%)</title><rect x="1067" y="484" width="2" height="15" fill="rgb(247,85,29)"/><text x="1070.00" y="494.50"></text></g><g><title>consume_item (rlp/codec.py:206) (11 samples, 0.11%)</title><rect x="1068" y="500" width="1" height="15" fill="rgb(230,82,20)"/><text x="1071.00" y="510.50"></text></g><g><title>encode_raw (rlp/codec.py:75) (17 samples, 0.18%)</title><rect x="1071" y="580" width="2" height="15" fill="rgb(252,209,13)"/><text x="1074.00" y="590.50"></text></g><g><title>__instancecheck__ (abc.py:139) (11 samples, 0.11%)</title><rect x="1072" y="596" width="1" height="15" fill="rgb(254,126,47)"/><text x="1075.00" y="606.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (27 samples, 0.28%)</title><rect x="1070" y="548" width="3" height="15" fill="rgb(248,111,15)"/><text x="1073.00" y="558.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (21 samples, 0.22%)</title><rect x="1071" y="564" width="2" height="15" fill="rgb(225,201,48)"/><text x="1074.00" y="574.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (29 samples, 0.30%)</title><rect x="1070" y="532" width="4" height="15" fill="rgb(233,189,43)"/><text x="1073.00" y="542.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (36 samples, 0.37%)</title><rect x="1070" y="516" width="4" height="15" fill="rgb(206,215,12)"/><text x="1073.00" y="526.50"></text></g><g><title>__enter__ (contextlib.py:112) (44 samples, 0.46%)</title><rect x="1069" y="468" width="6" height="15" fill="rgb(246,227,53)"/><text x="1072.00" y="478.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (43 samples, 0.45%)</title><rect x="1069" y="484" width="6" height="15" fill="rgb(242,201,40)"/><text x="1072.00" y="494.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (43 samples, 0.45%)</title><rect x="1069" y="500" width="6" height="15" fill="rgb(250,104,6)"/><text x="1072.00" y="510.50"></text></g><g><title>_set (trie/hexary.py:113) (50 samples, 0.52%)</title><rect x="1069" y="452" width="6" height="15" fill="rgb(231,126,14)"/><text x="1072.00" y="462.50"></text></g><g><title>get_node (trie/hexary.py:284) (61 samples, 0.63%)</title><rect x="1076" y="484" width="7" height="15" fill="rgb(212,24,17)"/><text x="1079.00" y="494.50"></text></g><g><title>__getitem__ (trie/utils/db.py:33) (60 samples, 0.62%)</title><rect x="1076" y="500" width="7" height="15" fill="rgb(242,0,29)"/><text x="1079.00" y="510.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (55 samples, 0.57%)</title><rect x="1077" y="516" width="6" height="15" fill="rgb(230,185,31)"/><text x="1080.00" y="526.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (51 samples, 0.53%)</title><rect x="1077" y="532" width="6" height="15" fill="rgb(219,122,53)"/><text x="1080.00" y="542.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (71 samples, 0.74%)</title><rect x="1076" y="468" width="9" height="15" fill="rgb(213,93,46)"/><text x="1079.00" y="478.50"></text></g><g><title>get_node (trie/hexary.py:285) (9 samples, 0.09%)</title><rect x="1083" y="484" width="2" height="15" fill="rgb(243,67,18)"/><text x="1086.00" y="494.50"></text></g><g><title>_set (trie/hexary.py:111) (12 samples, 0.12%)</title><rect x="1085" y="484" width="1" height="15" fill="rgb(213,143,50)"/><text x="1088.00" y="494.50"></text></g><g><title>get_node_type (trie/utils/nodes.py:42) (12 samples, 0.12%)</title><rect x="1085" y="500" width="1" height="15" fill="rgb(249,104,13)"/><text x="1088.00" y="510.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (11 samples, 0.11%)</title><rect x="1087" y="548" width="2" height="15" fill="rgb(245,229,3)"/><text x="1090.00" y="558.50"></text></g><g><title>__enter__ (contextlib.py:112) (18 samples, 0.19%)</title><rect x="1087" y="500" width="2" height="15" fill="rgb(214,205,49)"/><text x="1090.00" y="510.50"></text></g><g><title>_prune_node (trie/hexary.py:237) (18 samples, 0.19%)</title><rect x="1087" y="516" width="2" height="15" fill="rgb(215,111,54)"/><text x="1090.00" y="526.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (16 samples, 0.17%)</title><rect x="1087" y="532" width="2" height="15" fill="rgb(244,51,28)"/><text x="1090.00" y="542.50"></text></g><g><title>_set (trie/hexary.py:113) (24 samples, 0.25%)</title><rect x="1086" y="484" width="3" height="15" fill="rgb(211,217,35)"/><text x="1089.00" y="494.50"></text></g><g><title>_set (trie/hexary.py:120) (29 samples, 0.30%)</title><rect x="1089" y="484" width="3" height="15" fill="rgb(249,215,3)"/><text x="1092.00" y="494.50"></text></g><g><title>_set_branch_node (trie/hexary.py:423) (11 samples, 0.11%)</title><rect x="1092" y="500" width="2" height="15" fill="rgb(238,47,42)"/><text x="1095.00" y="510.50"></text></g><g><title>get_node (trie/hexary.py:284) (11 samples, 0.11%)</title><rect x="1092" y="516" width="2" height="15" fill="rgb(223,16,7)"/><text x="1095.00" y="526.50"></text></g><g><title>__getitem__ (trie/utils/db.py:33) (11 samples, 0.11%)</title><rect x="1092" y="532" width="2" height="15" fill="rgb(220,109,8)"/><text x="1095.00" y="542.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (10 samples, 0.10%)</title><rect x="1093" y="548" width="1" height="15" fill="rgb(224,132,32)"/><text x="1096.00" y="558.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (10 samples, 0.10%)</title><rect x="1093" y="564" width="1" height="15" fill="rgb(226,34,50)"/><text x="1096.00" y="574.50"></text></g><g><title>_set (trie/hexary.py:113) (9 samples, 0.09%)</title><rect x="1094" y="516" width="1" height="15" fill="rgb(250,196,16)"/><text x="1097.00" y="526.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (15 samples, 0.16%)</title><rect x="1094" y="500" width="2" height="15" fill="rgb(246,36,28)"/><text x="1097.00" y="510.50"></text></g><g><title>_set (trie/hexary.py:122) (30 samples, 0.31%)</title><rect x="1092" y="484" width="4" height="15" fill="rgb(239,0,42)"/><text x="1095.00" y="494.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (97 samples, 1.00%)</title><rect x="1085" y="468" width="11" height="15" fill="rgb(226,213,20)"/><text x="1088.00" y="478.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (13 samples, 0.13%)</title><rect x="1097" y="532" width="2" height="15" fill="rgb(237,170,39)"/><text x="1100.00" y="542.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (9 samples, 0.09%)</title><rect x="1098" y="548" width="1" height="15" fill="rgb(216,8,52)"/><text x="1101.00" y="558.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (17 samples, 0.18%)</title><rect x="1097" y="516" width="2" height="15" fill="rgb(224,72,9)"/><text x="1100.00" y="526.50"></text></g><g><title>_set (trie/hexary.py:122) (192 samples, 1.99%)</title><rect x="1076" y="452" width="23" height="15" fill="rgb(232,178,51)"/><text x="1079.00" y="462.50">_..</text></g><g><title>_set_branch_node (trie/hexary.py:426) (24 samples, 0.25%)</title><rect x="1096" y="468" width="3" height="15" fill="rgb(237,190,30)"/><text x="1099.00" y="478.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (22 samples, 0.23%)</title><rect x="1097" y="484" width="2" height="15" fill="rgb(213,161,19)"/><text x="1100.00" y="494.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (22 samples, 0.23%)</title><rect x="1097" y="500" width="2" height="15" fill="rgb(233,73,15)"/><text x="1100.00" y="510.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (251 samples, 2.60%)</title><rect x="1069" y="436" width="31" height="15" fill="rgb(252,116,52)"/><text x="1072.00" y="446.50">_s..</text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (18 samples, 0.19%)</title><rect x="1101" y="500" width="2" height="15" fill="rgb(209,42,10)"/><text x="1104.00" y="510.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (17 samples, 0.18%)</title><rect x="1101" y="516" width="2" height="15" fill="rgb(209,0,18)"/><text x="1104.00" y="526.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (11 samples, 0.11%)</title><rect x="1102" y="532" width="1" height="15" fill="rgb(226,109,29)"/><text x="1105.00" y="542.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (28 samples, 0.29%)</title><rect x="1100" y="484" width="3" height="15" fill="rgb(242,70,10)"/><text x="1103.00" y="494.50"></text></g><g><title>_set (trie/hexary.py:122) (362 samples, 3.75%)</title><rect x="1059" y="420" width="45" height="15" fill="rgb(232,104,3)"/><text x="1062.00" y="430.50">_set..</text></g><g><title>_set_branch_node (trie/hexary.py:426) (34 samples, 0.35%)</title><rect x="1100" y="436" width="4" height="15" fill="rgb(233,36,25)"/><text x="1103.00" y="446.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (34 samples, 0.35%)</title><rect x="1100" y="452" width="4" height="15" fill="rgb(254,126,10)"/><text x="1103.00" y="462.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (34 samples, 0.35%)</title><rect x="1100" y="468" width="4" height="15" fill="rgb(250,30,38)"/><text x="1103.00" y="478.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (402 samples, 4.16%)</title><rect x="1055" y="404" width="49" height="15" fill="rgb(219,220,50)"/><text x="1058.00" y="414.50">_set..</text></g><g><title>encode_raw (rlp/codec.py:81) (11 samples, 0.11%)</title><rect x="1105" y="484" width="2" height="15" fill="rgb(206,214,13)"/><text x="1108.00" y="494.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (9 samples, 0.09%)</title><rect x="1106" y="500" width="1" height="15" fill="rgb(221,200,13)"/><text x="1109.00" y="510.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (13 samples, 0.13%)</title><rect x="1105" y="468" width="2" height="15" fill="rgb(242,127,1)"/><text x="1108.00" y="478.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (24 samples, 0.25%)</title><rect x="1104" y="452" width="3" height="15" fill="rgb(211,212,33)"/><text x="1107.00" y="462.50"></text></g><g><title>_set (trie/hexary.py:122) (541 samples, 5.60%)</title><rect x="1042" y="388" width="66" height="15" fill="rgb(224,188,28)"/><text x="1045.00" y="398.50">_set (t..</text></g><g><title>_set_branch_node (trie/hexary.py:426) (32 samples, 0.33%)</title><rect x="1104" y="404" width="4" height="15" fill="rgb(209,154,51)"/><text x="1107.00" y="414.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (32 samples, 0.33%)</title><rect x="1104" y="420" width="4" height="15" fill="rgb(251,194,10)"/><text x="1107.00" y="430.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (32 samples, 0.33%)</title><rect x="1104" y="436" width="4" height="15" fill="rgb(234,104,23)"/><text x="1107.00" y="446.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (611 samples, 6.33%)</title><rect x="1033" y="372" width="75" height="15" fill="rgb(212,59,35)"/><text x="1036.00" y="382.50">_set_bra..</text></g><g><title>encode_raw (rlp/codec.py:75) (12 samples, 0.12%)</title><rect x="1110" y="484" width="2" height="15" fill="rgb(247,87,29)"/><text x="1113.00" y="494.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (19 samples, 0.20%)</title><rect x="1110" y="436" width="2" height="15" fill="rgb(212,170,30)"/><text x="1113.00" y="446.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (17 samples, 0.18%)</title><rect x="1110" y="452" width="2" height="15" fill="rgb(237,101,25)"/><text x="1113.00" y="462.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (15 samples, 0.16%)</title><rect x="1110" y="468" width="2" height="15" fill="rgb(254,88,17)"/><text x="1113.00" y="478.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (31 samples, 0.32%)</title><rect x="1109" y="420" width="4" height="15" fill="rgb(237,99,23)"/><text x="1112.00" y="430.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (38 samples, 0.39%)</title><rect x="1108" y="388" width="5" height="15" fill="rgb(227,187,10)"/><text x="1111.00" y="398.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (38 samples, 0.39%)</title><rect x="1108" y="404" width="5" height="15" fill="rgb(248,182,14)"/><text x="1111.00" y="414.50"></text></g><g><title>_set (trie/hexary.py:122) (711 samples, 7.36%)</title><rect x="1026" y="356" width="87" height="15" fill="rgb(221,196,25)"/><text x="1029.00" y="366.50">_set (trie..</text></g><g><title>_set_branch_node (trie/hexary.py:426) (40 samples, 0.41%)</title><rect x="1108" y="372" width="5" height="15" fill="rgb(228,134,27)"/><text x="1111.00" y="382.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (761 samples, 7.88%)</title><rect x="1020" y="340" width="93" height="15" fill="rgb(223,198,18)"/><text x="1023.00" y="350.50">_set_branch..</text></g><g><title>encode_raw (rlp/codec.py:75) (17 samples, 0.18%)</title><rect x="1116" y="452" width="2" height="15" fill="rgb(244,115,39)"/><text x="1119.00" y="462.50"></text></g><g><title>__instancecheck__ (abc.py:139) (13 samples, 0.13%)</title><rect x="1116" y="468" width="2" height="15" fill="rgb(208,69,28)"/><text x="1119.00" y="478.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (23 samples, 0.24%)</title><rect x="1116" y="420" width="2" height="15" fill="rgb(250,149,9)"/><text x="1119.00" y="430.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (21 samples, 0.22%)</title><rect x="1116" y="436" width="2" height="15" fill="rgb(214,110,25)"/><text x="1119.00" y="446.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (27 samples, 0.28%)</title><rect x="1115" y="404" width="4" height="15" fill="rgb(238,3,11)"/><text x="1118.00" y="414.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (37 samples, 0.38%)</title><rect x="1114" y="388" width="5" height="15" fill="rgb(223,205,47)"/><text x="1117.00" y="398.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (44 samples, 0.46%)</title><rect x="1114" y="356" width="5" height="15" fill="rgb(235,140,20)"/><text x="1117.00" y="366.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (44 samples, 0.46%)</title><rect x="1114" y="372" width="5" height="15" fill="rgb(205,119,2)"/><text x="1117.00" y="382.50"></text></g><g><title>_set (trie/hexary.py:122) (879 samples, 9.10%)</title><rect x="1012" y="324" width="107" height="15" fill="rgb(225,166,2)"/><text x="1015.00" y="334.50">_set (trie/he..</text></g><g><title>_set_branch_node (trie/hexary.py:426) (47 samples, 0.49%)</title><rect x="1113" y="340" width="6" height="15" fill="rgb(254,191,50)"/><text x="1116.00" y="350.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (907 samples, 9.39%)</title><rect x="1009" y="308" width="110" height="15" fill="rgb(252,163,43)"/><text x="1012.00" y="318.50">_set_branch_n..</text></g><g><title>encode_raw (rlp/codec.py:75) (12 samples, 0.12%)</title><rect x="1122" y="420" width="1" height="15" fill="rgb(208,149,16)"/><text x="1125.00" y="430.50"></text></g><g><title>__instancecheck__ (abc.py:139) (9 samples, 0.09%)</title><rect x="1122" y="436" width="1" height="15" fill="rgb(236,190,18)"/><text x="1125.00" y="446.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (21 samples, 0.22%)</title><rect x="1121" y="388" width="3" height="15" fill="rgb(216,147,54)"/><text x="1124.00" y="398.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (16 samples, 0.17%)</title><rect x="1122" y="404" width="2" height="15" fill="rgb(237,48,53)"/><text x="1125.00" y="414.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (24 samples, 0.25%)</title><rect x="1121" y="372" width="3" height="15" fill="rgb(216,145,14)"/><text x="1124.00" y="382.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (34 samples, 0.35%)</title><rect x="1120" y="356" width="4" height="15" fill="rgb(224,49,30)"/><text x="1123.00" y="366.50"></text></g><g><title>_set (trie/hexary.py:122) (974 samples, 10.09%)</title><rect x="1005" y="292" width="119" height="15" fill="rgb(209,27,15)"/><text x="1008.00" y="302.50">_set (trie/hex..</text></g><g><title>_set_branch_node (trie/hexary.py:426) (39 samples, 0.40%)</title><rect x="1119" y="308" width="5" height="15" fill="rgb(246,33,38)"/><text x="1122.00" y="318.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (38 samples, 0.39%)</title><rect x="1120" y="324" width="4" height="15" fill="rgb(232,7,22)"/><text x="1123.00" y="334.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (37 samples, 0.38%)</title><rect x="1120" y="340" width="4" height="15" fill="rgb(243,146,40)"/><text x="1123.00" y="350.50"></text></g><g><title>_set_branch_node (trie/hexary.py:425) (982 samples, 10.17%)</title><rect x="1004" y="276" width="120" height="15" fill="rgb(236,32,6)"/><text x="1007.00" y="286.50">_set_branch_no..</text></g><g><title>encode_raw (rlp/codec.py:75) (12 samples, 0.12%)</title><rect x="1126" y="388" width="1" height="15" fill="rgb(227,56,9)"/><text x="1129.00" y="398.50"></text></g><g><title>__instancecheck__ (abc.py:139) (12 samples, 0.12%)</title><rect x="1126" y="404" width="1" height="15" fill="rgb(242,120,2)"/><text x="1129.00" y="414.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (9 samples, 0.09%)</title><rect x="1126" y="420" width="1" height="15" fill="rgb(243,88,50)"/><text x="1129.00" y="430.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (17 samples, 0.18%)</title><rect x="1126" y="356" width="2" height="15" fill="rgb(208,182,44)"/><text x="1129.00" y="366.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (17 samples, 0.18%)</title><rect x="1126" y="372" width="2" height="15" fill="rgb(238,64,46)"/><text x="1129.00" y="382.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (22 samples, 0.23%)</title><rect x="1125" y="340" width="3" height="15" fill="rgb(218,130,32)"/><text x="1128.00" y="350.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (29 samples, 0.30%)</title><rect x="1125" y="324" width="3" height="15" fill="rgb(242,126,28)"/><text x="1128.00" y="334.50"></text></g><g><title>_set (trie/hexary.py:122) (1,034 samples, 10.71%)</title><rect x="1002" y="260" width="127" height="15" fill="rgb(219,82,2)"/><text x="1005.00" y="270.50">_set (trie/hexa..</text></g><g><title>_set_branch_node (trie/hexary.py:426) (35 samples, 0.36%)</title><rect x="1124" y="276" width="5" height="15" fill="rgb(251,32,44)"/><text x="1127.00" y="286.50"></text></g><g><title>_persist_node (trie/hexary.py:317) (35 samples, 0.36%)</title><rect x="1124" y="292" width="5" height="15" fill="rgb(240,193,13)"/><text x="1127.00" y="302.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (35 samples, 0.36%)</title><rect x="1124" y="308" width="5" height="15" fill="rgb(242,165,14)"/><text x="1127.00" y="318.50"></text></g><g><title>set (trie/hexary.py:104) (1,045 samples, 10.82%)</title><rect x="1001" y="244" width="128" height="15" fill="rgb(240,145,45)"/><text x="1004.00" y="254.50">set (trie/hexary..</text></g><g><title>_set_root_node (trie/hexary.py:267) (13 samples, 0.13%)</title><rect x="1129" y="260" width="1" height="15" fill="rgb(225,162,18)"/><text x="1132.00" y="270.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:53) (149 samples, 1.54%)</title><rect x="1132" y="340" width="19" height="15" fill="rgb(243,32,37)"/><text x="1135.00" y="350.50"></text></g><g><title>_exists (eth/db/batch.py:61) (171 samples, 1.77%)</title><rect x="1131" y="308" width="21" height="15" fill="rgb(244,93,26)"/><text x="1134.00" y="318.50"></text></g><g><title>__getitem__ (eth/db/batch.py:74) (167 samples, 1.73%)</title><rect x="1132" y="324" width="20" height="15" fill="rgb(219,40,12)"/><text x="1135.00" y="334.50"></text></g><g><title>__getitem__ (eth/db/backends/level.py:55) (12 samples, 0.12%)</title><rect x="1151" y="340" width="1" height="15" fill="rgb(223,154,26)"/><text x="1154.00" y="350.50"></text></g><g><title>_set_root_node (trie/hexary.py:270) (184 samples, 1.91%)</title><rect x="1130" y="260" width="23" height="15" fill="rgb(220,188,13)"/><text x="1133.00" y="270.50">_..</text></g><g><title>__contains__ (trie/utils/db.py:45) (182 samples, 1.88%)</title><rect x="1131" y="276" width="22" height="15" fill="rgb(244,3,38)"/><text x="1134.00" y="286.50">_..</text></g><g><title>__contains__ (eth/db/backends/base.py:35) (179 samples, 1.85%)</title><rect x="1131" y="292" width="22" height="15" fill="rgb(234,24,40)"/><text x="1134.00" y="302.50">_..</text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:302) (16 samples, 0.17%)</title><rect x="1155" y="308" width="2" height="15" fill="rgb(207,95,4)"/><text x="1158.00" y="318.50"></text></g><g><title>inner (eth_utils/functional.py:45) (13 samples, 0.13%)</title><rect x="1156" y="324" width="1" height="15" fill="rgb(235,211,17)"/><text x="1159.00" y="334.50"></text></g><g><title>validate_is_node (trie/validation.py:39) (9 samples, 0.09%)</title><rect x="1160" y="340" width="1" height="15" fill="rgb(244,46,15)"/><text x="1163.00" y="350.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:306) (35 samples, 0.36%)</title><rect x="1157" y="324" width="5" height="15" fill="rgb(217,141,45)"/><text x="1160.00" y="334.50"></text></g><g><title>encode_raw (rlp/codec.py:75) (16 samples, 0.17%)</title><rect x="1164" y="372" width="2" height="15" fill="rgb(252,201,4)"/><text x="1167.00" y="382.50"></text></g><g><title>encode_raw (rlp/codec.py:81) (37 samples, 0.38%)</title><rect x="1163" y="340" width="4" height="15" fill="rgb(248,171,14)"/><text x="1166.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (rlp/codec.py:81) (29 samples, 0.30%)</title><rect x="1164" y="356" width="3" height="15" fill="rgb(243,65,30)"/><text x="1167.00" y="366.50"></text></g><g><title>_create_node_to_db_mapping (trie/hexary.py:309) (46 samples, 0.48%)</title><rect x="1162" y="324" width="5" height="15" fill="rgb(232,79,34)"/><text x="1165.00" y="334.50"></text></g><g><title>_cached_create_node_to_db_mapping (trie/hexary.py:303) (89 samples, 0.92%)</title><rect x="1157" y="308" width="11" height="15" fill="rgb(230,174,4)"/><text x="1160.00" y="318.50"></text></g><g><title>tuplify (trie/hexary.py:554) (10 samples, 0.10%)</title><rect x="1169" y="324" width="2" height="15" fill="rgb(220,44,53)"/><text x="1172.00" y="334.50"></text></g><g><title>_set_raw_node (trie/hexary.py:249) (149 samples, 1.54%)</title><rect x="1153" y="276" width="19" height="15" fill="rgb(211,86,2)"/><text x="1156.00" y="286.50"></text></g><g><title>_node_to_db_mapping (trie/hexary.py:295) (145 samples, 1.50%)</title><rect x="1154" y="292" width="18" height="15" fill="rgb(224,190,24)"/><text x="1157.00" y="302.50"></text></g><g><title>inner (eth_utils/functional.py:45) (28 samples, 0.29%)</title><rect x="1168" y="308" width="4" height="15" fill="rgb(233,115,0)"/><text x="1171.00" y="318.50"></text></g><g><title>set (trie/hexary.py:108) (351 samples, 3.64%)</title><rect x="1129" y="244" width="43" height="15" fill="rgb(246,212,49)"/><text x="1132.00" y="254.50">set ..</text></g><g><title>_set_root_node (trie/hexary.py:273) (153 samples, 1.58%)</title><rect x="1153" y="260" width="19" height="15" fill="rgb(226,153,41)"/><text x="1156.00" y="270.50"></text></g><g><title>persist (eth/db/account.py:399) (3,758 samples, 38.92%)</title><rect x="713" y="164" width="459" height="15" fill="rgb(206,110,51)"/><text x="716.00" y="174.50">persist (eth/db/account.py:399)</text></g><g><title>make_state_root (eth/db/account.py:391) (2,453 samples, 25.40%)</title><rect x="872" y="180" width="300" height="15" fill="rgb(214,28,24)"/><text x="875.00" y="190.50">make_state_root (eth/db/account.py:391)</text></g><g><title>_apply_account_diff_without_proof (eth/db/account.py:501) (1,436 samples, 14.87%)</title><rect x="997" y="196" width="175" height="15" fill="rgb(248,147,47)"/><text x="1000.00" y="206.50">_apply_account_diff_wi..</text></g><g><title>__setitem__ (eth/db/keymap.py:32) (1,431 samples, 14.82%)</title><rect x="997" y="212" width="175" height="15" fill="rgb(210,182,15)"/><text x="1000.00" y="222.50">__setitem__ (eth/db/ke..</text></g><g><title>__setitem__ (trie/hexary.py:518) (1,431 samples, 14.82%)</title><rect x="997" y="228" width="175" height="15" fill="rgb(253,31,0)"/><text x="1000.00" y="238.50">__setitem__ (trie/hexa..</text></g><g><title>persist (eth/db/account.py:405) (10 samples, 0.10%)</title><rect x="1172" y="164" width="1" height="15" fill="rgb(212,38,41)"/><text x="1175.00" y="174.50"></text></g><g><title>persist (eth/db/account.py:424) (9 samples, 0.09%)</title><rect x="1174" y="164" width="1" height="15" fill="rgb(216,156,10)"/><text x="1177.00" y="174.50"></text></g><g><title>finalize_block (eth/vm/base.py:361) (3,781 samples, 39.16%)</title><rect x="713" y="132" width="462" height="15" fill="rgb(210,178,41)"/><text x="716.00" y="142.50">finalize_block (eth/vm/base.py:361)</text></g><g><title>persist (eth/vm/state.py:179) (3,781 samples, 39.16%)</title><rect x="713" y="148" width="462" height="15" fill="rgb(218,107,34)"/><text x="716.00" y="158.50">persist (eth/vm/state.py:179)</text></g><g><title>deepcopy (copy.py:161) (14 samples, 0.14%)</title><rect x="1175" y="228" width="2" height="15" fill="rgb(247,22,50)"/><text x="1178.00" y="238.50"></text></g><g><title>__deepcopy__ (rlp/sedes/serializable.py:295) (14 samples, 0.14%)</title><rect x="1175" y="244" width="2" height="15" fill="rgb(219,73,27)"/><text x="1178.00" y="254.50"></text></g><g><title>mine_block (eth/vm/base.py:297) (3,799 samples, 39.34%)</title><rect x="713" y="116" width="464" height="15" fill="rgb(213,215,44)"/><text x="716.00" y="126.50">mine_block (eth/vm/base.py:297)</text></g><g><title>finalize_block (eth/vm/base.py:363) (18 samples, 0.19%)</title><rect x="1175" y="132" width="2" height="15" fill="rgb(226,103,14)"/><text x="1178.00" y="142.50"></text></g><g><title>copy (rlp/sedes/serializable.py:284) (18 samples, 0.19%)</title><rect x="1175" y="148" width="2" height="15" fill="rgb(212,27,24)"/><text x="1178.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (rlp/sedes/serializable.py:285) (18 samples, 0.19%)</title><rect x="1175" y="164" width="2" height="15" fill="rgb(210,133,26)"/><text x="1178.00" y="174.50"></text></g><g><title>deepcopy (copy.py:150) (18 samples, 0.19%)</title><rect x="1175" y="180" width="2" height="15" fill="rgb(227,8,22)"/><text x="1178.00" y="190.50"></text></g><g><title>_deepcopy_tuple (copy.py:220) (18 samples, 0.19%)</title><rect x="1175" y="196" width="2" height="15" fill="rgb(214,218,41)"/><text x="1178.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (copy.py:220) (18 samples, 0.19%)</title><rect x="1175" y="212" width="2" height="15" fill="rgb(249,26,18)"/><text x="1178.00" y="222.50"></text></g><g><title>encode (rlp/codec.py:63) (9 samples, 0.09%)</title><rect x="1178" y="180" width="1" height="15" fill="rgb(226,148,30)"/><text x="1181.00" y="190.50"></text></g><g><title>serialize (rlp/sedes/serializable.py:259) (9 samples, 0.09%)</title><rect x="1178" y="196" width="1" height="15" fill="rgb(249,77,0)"/><text x="1181.00" y="206.50"></text></g><g><title>inner (eth_utils/functional.py:45) (9 samples, 0.09%)</title><rect x="1178" y="212" width="1" height="15" fill="rgb(218,8,13)"/><text x="1181.00" y="222.50"></text></g><g><title>validate_block (eth/vm/base.py:507) (16 samples, 0.17%)</title><rect x="1178" y="132" width="2" height="15" fill="rgb(212,3,37)"/><text x="1181.00" y="142.50"></text></g><g><title>make_trie_root_and_nodes (eth/db/trie.py:24) (16 samples, 0.17%)</title><rect x="1178" y="148" width="2" height="15" fill="rgb(218,35,48)"/><text x="1181.00" y="158.50"></text></g><g><title>&lt;genexpr&gt; (eth/db/trie.py:24) (16 samples, 0.17%)</title><rect x="1178" y="164" width="2" height="15" fill="rgb(207,10,53)"/><text x="1181.00" y="174.50"></text></g><g><title>import_block (eth/chains/base.py:427) (9,536 samples, 98.76%)</title><rect x="15" y="84" width="1165" height="15" fill="rgb(254,202,49)"/><text x="18.00" y="94.50">import_block (eth/chains/base.py:427)</text></g><g><title>import_block (eth/vm/base.py:292) (3,838 samples, 39.75%)</title><rect x="711" y="100" width="469" height="15" fill="rgb(247,170,11)"/><text x="714.00" y="110.50">import_block (eth/vm/base.py:292)</text></g><g><title>mine_block (eth/vm/base.py:300) (22 samples, 0.23%)</title><rect x="1177" y="116" width="3" height="15" fill="rgb(247,68,43)"/><text x="1180.00" y="126.50"></text></g><g><title>get (trie/hexary.py:73) (9 samples, 0.09%)</title><rect x="1182" y="260" width="1" height="15" fill="rgb(242,147,50)"/><text x="1185.00" y="270.50"></text></g><g><title>_get_branch_node (trie/hexary.py:490) (16 samples, 0.17%)</title><rect x="1183" y="292" width="2" height="15" fill="rgb(254,143,23)"/><text x="1186.00" y="302.50"></text></g><g><title>get_node (trie/hexary.py:285) (12 samples, 0.12%)</title><rect x="1184" y="308" width="1" height="15" fill="rgb(253,73,9)"/><text x="1187.00" y="318.50"></text></g><g><title>decode_node (trie/utils/nodes.py:83) (12 samples, 0.12%)</title><rect x="1184" y="324" width="1" height="15" fill="rgb(215,112,2)"/><text x="1187.00" y="334.50"></text></g><g><title>decode (rlp/codec.py:230) (12 samples, 0.12%)</title><rect x="1184" y="340" width="1" height="15" fill="rgb(229,72,29)"/><text x="1187.00" y="350.50"></text></g><g><title>consume_item (rlp/codec.py:206) (11 samples, 0.11%)</title><rect x="1184" y="356" width="1" height="15" fill="rgb(217,76,11)"/><text x="1187.00" y="366.50"></text></g><g><title>_get_block_transactions (eth/db/chain.py:328) (44 samples, 0.46%)</title><rect x="1182" y="212" width="5" height="15" fill="rgb(244,22,49)"/><text x="1185.00" y="222.50"></text></g><g><title>_get_block_transaction_data (eth/db/chain.py:313) (42 samples, 0.43%)</title><rect x="1182" y="228" width="5" height="15" fill="rgb(213,29,14)"/><text x="1185.00" y="238.50"></text></g><g><title>__getitem__ (trie/hexary.py:515) (42 samples, 0.43%)</title><rect x="1182" y="244" width="5" height="15" fill="rgb(224,2,32)"/><text x="1185.00" y="254.50"></text></g><g><title>get (trie/hexary.py:75) (32 samples, 0.33%)</title><rect x="1183" y="260" width="4" height="15" fill="rgb(243,70,48)"/><text x="1186.00" y="270.50"></text></g><g><title>_get (trie/hexary.py:87) (31 samples, 0.32%)</title><rect x="1183" y="276" width="4" height="15" fill="rgb(239,12,49)"/><text x="1186.00" y="286.50"></text></g><g><title>_get_branch_node (trie/hexary.py:491) (14 samples, 0.14%)</title><rect x="1185" y="292" width="2" height="15" fill="rgb(213,19,6)"/><text x="1188.00" y="302.50"></text></g><g><title>_get (trie/hexary.py:87) (13 samples, 0.13%)</title><rect x="1185" y="308" width="2" height="15" fill="rgb(212,106,45)"/><text x="1188.00" y="318.50"></text></g><g><title>decode (rlp/codec.py:237) (14 samples, 0.14%)</title><rect x="1187" y="228" width="2" height="15" fill="rgb(239,227,32)"/><text x="1190.00" y="238.50"></text></g><g><title>process_blocks (gethimport.py:471) (9,613 samples, 99.55%)</title><rect x="15" y="68" width="1174" height="15" fill="rgb(240,5,6)"/><text x="18.00" y="78.50">process_blocks (gethimport.py:471)</text></g><g><title>import_block (eth/chains/base.py:448) (63 samples, 0.65%)</title><rect x="1182" y="84" width="7" height="15" fill="rgb(236,16,24)"/><text x="1185.00" y="94.50"></text></g><g><title>&lt;genexpr&gt; (eth/chains/base.py:447) (63 samples, 0.65%)</title><rect x="1182" y="100" width="7" height="15" fill="rgb(230,130,43)"/><text x="1185.00" y="110.50"></text></g><g><title>get_block_by_hash (eth/chains/base.py:311) (63 samples, 0.65%)</title><rect x="1182" y="116" width="7" height="15" fill="rgb(250,171,30)"/><text x="1185.00" y="126.50"></text></g><g><title>get_block_by_header (eth/chains/base.py:315) (63 samples, 0.65%)</title><rect x="1182" y="132" width="7" height="15" fill="rgb(226,129,40)"/><text x="1185.00" y="142.50"></text></g><g><title>get_block (eth/vm/base.py:114) (63 samples, 0.65%)</title><rect x="1182" y="148" width="7" height="15" fill="rgb(230,185,23)"/><text x="1185.00" y="158.50"></text></g><g><title>from_header (eth/vm/forks/frontier/blocks.py:112) (63 samples, 0.65%)</title><rect x="1182" y="164" width="7" height="15" fill="rgb(250,221,6)"/><text x="1185.00" y="174.50"></text></g><g><title>get_block_transactions (eth/db/chain.py:221) (63 samples, 0.65%)</title><rect x="1182" y="180" width="7" height="15" fill="rgb(218,34,54)"/><text x="1185.00" y="190.50"></text></g><g><title>inner (eth_utils/functional.py:45) (63 samples, 0.65%)</title><rect x="1182" y="196" width="7" height="15" fill="rgb(218,91,54)"/><text x="1185.00" y="206.50"></text></g><g><title>_get_block_transactions (eth/db/chain.py:329) (19 samples, 0.20%)</title><rect x="1187" y="212" width="2" height="15" fill="rgb(222,212,9)"/><text x="1190.00" y="222.50"></text></g><g><title>all (9,656 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,152,51)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (gethimport.py:526) (9,656 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(212,50,27)"/><text x="13.00" y="62.50">&lt;module&gt; (gethimport.py:526)</text></g></g></svg>